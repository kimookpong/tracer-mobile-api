
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model admins
 * 
 */
export type admins = $Result.DefaultSelection<Prisma.$adminsPayload>
/**
 * Model buyer_attachments
 * 
 */
export type buyer_attachments = $Result.DefaultSelection<Prisma.$buyer_attachmentsPayload>
/**
 * Model buyers
 * 
 */
export type buyers = $Result.DefaultSelection<Prisma.$buyersPayload>
/**
 * Model cattle_attachments
 * 
 */
export type cattle_attachments = $Result.DefaultSelection<Prisma.$cattle_attachmentsPayload>
/**
 * Model cattle_breeds
 * 
 */
export type cattle_breeds = $Result.DefaultSelection<Prisma.$cattle_breedsPayload>
/**
 * Model cattle_create_staged
 * 
 */
export type cattle_create_staged = $Result.DefaultSelection<Prisma.$cattle_create_stagedPayload>
/**
 * Model cattle_healths
 * 
 */
export type cattle_healths = $Result.DefaultSelection<Prisma.$cattle_healthsPayload>
/**
 * Model cattle_matching_order_staged
 * 
 */
export type cattle_matching_order_staged = $Result.DefaultSelection<Prisma.$cattle_matching_order_stagedPayload>
/**
 * Model cattle_sourcing
 * 
 */
export type cattle_sourcing = $Result.DefaultSelection<Prisma.$cattle_sourcingPayload>
/**
 * Model cattle_types
 * 
 */
export type cattle_types = $Result.DefaultSelection<Prisma.$cattle_typesPayload>
/**
 * Model cattle_vaccinations
 * 
 */
export type cattle_vaccinations = $Result.DefaultSelection<Prisma.$cattle_vaccinationsPayload>
/**
 * Model cattles
 * 
 */
export type cattles = $Result.DefaultSelection<Prisma.$cattlesPayload>
/**
 * Model data_migrations
 * 
 */
export type data_migrations = $Result.DefaultSelection<Prisma.$data_migrationsPayload>
/**
 * Model farm_attachments
 * 
 */
export type farm_attachments = $Result.DefaultSelection<Prisma.$farm_attachmentsPayload>
/**
 * Model farm_authorized
 * 
 */
export type farm_authorized = $Result.DefaultSelection<Prisma.$farm_authorizedPayload>
/**
 * Model farm_create_staged
 * 
 */
export type farm_create_staged = $Result.DefaultSelection<Prisma.$farm_create_stagedPayload>
/**
 * Model farm_sourcing
 * 
 */
export type farm_sourcing = $Result.DefaultSelection<Prisma.$farm_sourcingPayload>
/**
 * Model farm_veterinary
 * 
 */
export type farm_veterinary = $Result.DefaultSelection<Prisma.$farm_veterinaryPayload>
/**
 * Model farmer_accounts
 * 
 */
export type farmer_accounts = $Result.DefaultSelection<Prisma.$farmer_accountsPayload>
/**
 * Model farmer_attachments
 * 
 */
export type farmer_attachments = $Result.DefaultSelection<Prisma.$farmer_attachmentsPayload>
/**
 * Model farmer_create_staged
 * 
 */
export type farmer_create_staged = $Result.DefaultSelection<Prisma.$farmer_create_stagedPayload>
/**
 * Model farmers
 * 
 */
export type farmers = $Result.DefaultSelection<Prisma.$farmersPayload>
/**
 * Model farms
 * 
 */
export type farms = $Result.DefaultSelection<Prisma.$farmsPayload>
/**
 * Model order_attachments
 * 
 */
export type order_attachments = $Result.DefaultSelection<Prisma.$order_attachmentsPayload>
/**
 * Model order_requests
 * 
 */
export type order_requests = $Result.DefaultSelection<Prisma.$order_requestsPayload>
/**
 * Model orders
 * 
 */
export type orders = $Result.DefaultSelection<Prisma.$ordersPayload>
/**
 * Model pen_attachments
 * 
 */
export type pen_attachments = $Result.DefaultSelection<Prisma.$pen_attachmentsPayload>
/**
 * Model pens
 * 
 */
export type pens = $Result.DefaultSelection<Prisma.$pensPayload>
/**
 * Model schema_migrations
 * 
 */
export type schema_migrations = $Result.DefaultSelection<Prisma.$schema_migrationsPayload>
/**
 * Model traceability
 * 
 */
export type traceability = $Result.DefaultSelection<Prisma.$traceabilityPayload>
/**
 * Model traceability_cattle
 * 
 */
export type traceability_cattle = $Result.DefaultSelection<Prisma.$traceability_cattlePayload>
/**
 * Model traceability_status
 * 
 */
export type traceability_status = $Result.DefaultSelection<Prisma.$traceability_statusPayload>
/**
 * Model traceability_vehicle
 * 
 */
export type traceability_vehicle = $Result.DefaultSelection<Prisma.$traceability_vehiclePayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admins
 * const admins = await prisma.admins.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admins
   * const admins = await prisma.admins.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.admins`: Exposes CRUD operations for the **admins** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admins
    * const admins = await prisma.admins.findMany()
    * ```
    */
  get admins(): Prisma.adminsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.buyer_attachments`: Exposes CRUD operations for the **buyer_attachments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Buyer_attachments
    * const buyer_attachments = await prisma.buyer_attachments.findMany()
    * ```
    */
  get buyer_attachments(): Prisma.buyer_attachmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.buyers`: Exposes CRUD operations for the **buyers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Buyers
    * const buyers = await prisma.buyers.findMany()
    * ```
    */
  get buyers(): Prisma.buyersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_attachments`: Exposes CRUD operations for the **cattle_attachments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_attachments
    * const cattle_attachments = await prisma.cattle_attachments.findMany()
    * ```
    */
  get cattle_attachments(): Prisma.cattle_attachmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_breeds`: Exposes CRUD operations for the **cattle_breeds** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_breeds
    * const cattle_breeds = await prisma.cattle_breeds.findMany()
    * ```
    */
  get cattle_breeds(): Prisma.cattle_breedsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_create_staged`: Exposes CRUD operations for the **cattle_create_staged** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_create_stageds
    * const cattle_create_stageds = await prisma.cattle_create_staged.findMany()
    * ```
    */
  get cattle_create_staged(): Prisma.cattle_create_stagedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_healths`: Exposes CRUD operations for the **cattle_healths** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_healths
    * const cattle_healths = await prisma.cattle_healths.findMany()
    * ```
    */
  get cattle_healths(): Prisma.cattle_healthsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_matching_order_staged`: Exposes CRUD operations for the **cattle_matching_order_staged** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_matching_order_stageds
    * const cattle_matching_order_stageds = await prisma.cattle_matching_order_staged.findMany()
    * ```
    */
  get cattle_matching_order_staged(): Prisma.cattle_matching_order_stagedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_sourcing`: Exposes CRUD operations for the **cattle_sourcing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_sourcings
    * const cattle_sourcings = await prisma.cattle_sourcing.findMany()
    * ```
    */
  get cattle_sourcing(): Prisma.cattle_sourcingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_types`: Exposes CRUD operations for the **cattle_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_types
    * const cattle_types = await prisma.cattle_types.findMany()
    * ```
    */
  get cattle_types(): Prisma.cattle_typesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattle_vaccinations`: Exposes CRUD operations for the **cattle_vaccinations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattle_vaccinations
    * const cattle_vaccinations = await prisma.cattle_vaccinations.findMany()
    * ```
    */
  get cattle_vaccinations(): Prisma.cattle_vaccinationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cattles`: Exposes CRUD operations for the **cattles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cattles
    * const cattles = await prisma.cattles.findMany()
    * ```
    */
  get cattles(): Prisma.cattlesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.data_migrations`: Exposes CRUD operations for the **data_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Data_migrations
    * const data_migrations = await prisma.data_migrations.findMany()
    * ```
    */
  get data_migrations(): Prisma.data_migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farm_attachments`: Exposes CRUD operations for the **farm_attachments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farm_attachments
    * const farm_attachments = await prisma.farm_attachments.findMany()
    * ```
    */
  get farm_attachments(): Prisma.farm_attachmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farm_authorized`: Exposes CRUD operations for the **farm_authorized** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farm_authorizeds
    * const farm_authorizeds = await prisma.farm_authorized.findMany()
    * ```
    */
  get farm_authorized(): Prisma.farm_authorizedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farm_create_staged`: Exposes CRUD operations for the **farm_create_staged** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farm_create_stageds
    * const farm_create_stageds = await prisma.farm_create_staged.findMany()
    * ```
    */
  get farm_create_staged(): Prisma.farm_create_stagedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farm_sourcing`: Exposes CRUD operations for the **farm_sourcing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farm_sourcings
    * const farm_sourcings = await prisma.farm_sourcing.findMany()
    * ```
    */
  get farm_sourcing(): Prisma.farm_sourcingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farm_veterinary`: Exposes CRUD operations for the **farm_veterinary** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farm_veterinaries
    * const farm_veterinaries = await prisma.farm_veterinary.findMany()
    * ```
    */
  get farm_veterinary(): Prisma.farm_veterinaryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmer_accounts`: Exposes CRUD operations for the **farmer_accounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farmer_accounts
    * const farmer_accounts = await prisma.farmer_accounts.findMany()
    * ```
    */
  get farmer_accounts(): Prisma.farmer_accountsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmer_attachments`: Exposes CRUD operations for the **farmer_attachments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farmer_attachments
    * const farmer_attachments = await prisma.farmer_attachments.findMany()
    * ```
    */
  get farmer_attachments(): Prisma.farmer_attachmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmer_create_staged`: Exposes CRUD operations for the **farmer_create_staged** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farmer_create_stageds
    * const farmer_create_stageds = await prisma.farmer_create_staged.findMany()
    * ```
    */
  get farmer_create_staged(): Prisma.farmer_create_stagedDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farmers`: Exposes CRUD operations for the **farmers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farmers
    * const farmers = await prisma.farmers.findMany()
    * ```
    */
  get farmers(): Prisma.farmersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.farms`: Exposes CRUD operations for the **farms** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Farms
    * const farms = await prisma.farms.findMany()
    * ```
    */
  get farms(): Prisma.farmsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_attachments`: Exposes CRUD operations for the **order_attachments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_attachments
    * const order_attachments = await prisma.order_attachments.findMany()
    * ```
    */
  get order_attachments(): Prisma.order_attachmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_requests`: Exposes CRUD operations for the **order_requests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_requests
    * const order_requests = await prisma.order_requests.findMany()
    * ```
    */
  get order_requests(): Prisma.order_requestsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orders`: Exposes CRUD operations for the **orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.orders.findMany()
    * ```
    */
  get orders(): Prisma.ordersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pen_attachments`: Exposes CRUD operations for the **pen_attachments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pen_attachments
    * const pen_attachments = await prisma.pen_attachments.findMany()
    * ```
    */
  get pen_attachments(): Prisma.pen_attachmentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pens`: Exposes CRUD operations for the **pens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pens
    * const pens = await prisma.pens.findMany()
    * ```
    */
  get pens(): Prisma.pensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.schema_migrations`: Exposes CRUD operations for the **schema_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schema_migrations
    * const schema_migrations = await prisma.schema_migrations.findMany()
    * ```
    */
  get schema_migrations(): Prisma.schema_migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.traceability`: Exposes CRUD operations for the **traceability** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Traceabilities
    * const traceabilities = await prisma.traceability.findMany()
    * ```
    */
  get traceability(): Prisma.traceabilityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.traceability_cattle`: Exposes CRUD operations for the **traceability_cattle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Traceability_cattles
    * const traceability_cattles = await prisma.traceability_cattle.findMany()
    * ```
    */
  get traceability_cattle(): Prisma.traceability_cattleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.traceability_status`: Exposes CRUD operations for the **traceability_status** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Traceability_statuses
    * const traceability_statuses = await prisma.traceability_status.findMany()
    * ```
    */
  get traceability_status(): Prisma.traceability_statusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.traceability_vehicle`: Exposes CRUD operations for the **traceability_vehicle** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Traceability_vehicles
    * const traceability_vehicles = await prisma.traceability_vehicle.findMany()
    * ```
    */
  get traceability_vehicle(): Prisma.traceability_vehicleDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    admins: 'admins',
    buyer_attachments: 'buyer_attachments',
    buyers: 'buyers',
    cattle_attachments: 'cattle_attachments',
    cattle_breeds: 'cattle_breeds',
    cattle_create_staged: 'cattle_create_staged',
    cattle_healths: 'cattle_healths',
    cattle_matching_order_staged: 'cattle_matching_order_staged',
    cattle_sourcing: 'cattle_sourcing',
    cattle_types: 'cattle_types',
    cattle_vaccinations: 'cattle_vaccinations',
    cattles: 'cattles',
    data_migrations: 'data_migrations',
    farm_attachments: 'farm_attachments',
    farm_authorized: 'farm_authorized',
    farm_create_staged: 'farm_create_staged',
    farm_sourcing: 'farm_sourcing',
    farm_veterinary: 'farm_veterinary',
    farmer_accounts: 'farmer_accounts',
    farmer_attachments: 'farmer_attachments',
    farmer_create_staged: 'farmer_create_staged',
    farmers: 'farmers',
    farms: 'farms',
    order_attachments: 'order_attachments',
    order_requests: 'order_requests',
    orders: 'orders',
    pen_attachments: 'pen_attachments',
    pens: 'pens',
    schema_migrations: 'schema_migrations',
    traceability: 'traceability',
    traceability_cattle: 'traceability_cattle',
    traceability_status: 'traceability_status',
    traceability_vehicle: 'traceability_vehicle'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "admins" | "buyer_attachments" | "buyers" | "cattle_attachments" | "cattle_breeds" | "cattle_create_staged" | "cattle_healths" | "cattle_matching_order_staged" | "cattle_sourcing" | "cattle_types" | "cattle_vaccinations" | "cattles" | "data_migrations" | "farm_attachments" | "farm_authorized" | "farm_create_staged" | "farm_sourcing" | "farm_veterinary" | "farmer_accounts" | "farmer_attachments" | "farmer_create_staged" | "farmers" | "farms" | "order_attachments" | "order_requests" | "orders" | "pen_attachments" | "pens" | "schema_migrations" | "traceability" | "traceability_cattle" | "traceability_status" | "traceability_vehicle"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      admins: {
        payload: Prisma.$adminsPayload<ExtArgs>
        fields: Prisma.adminsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.adminsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.adminsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          findFirst: {
            args: Prisma.adminsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.adminsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          findMany: {
            args: Prisma.adminsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>[]
          }
          create: {
            args: Prisma.adminsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          createMany: {
            args: Prisma.adminsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.adminsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>[]
          }
          delete: {
            args: Prisma.adminsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          update: {
            args: Prisma.adminsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          deleteMany: {
            args: Prisma.adminsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.adminsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.adminsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>[]
          }
          upsert: {
            args: Prisma.adminsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$adminsPayload>
          }
          aggregate: {
            args: Prisma.AdminsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmins>
          }
          groupBy: {
            args: Prisma.adminsGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdminsGroupByOutputType>[]
          }
          count: {
            args: Prisma.adminsCountArgs<ExtArgs>
            result: $Utils.Optional<AdminsCountAggregateOutputType> | number
          }
        }
      }
      buyer_attachments: {
        payload: Prisma.$buyer_attachmentsPayload<ExtArgs>
        fields: Prisma.buyer_attachmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.buyer_attachmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.buyer_attachmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>
          }
          findFirst: {
            args: Prisma.buyer_attachmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.buyer_attachmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>
          }
          findMany: {
            args: Prisma.buyer_attachmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>[]
          }
          create: {
            args: Prisma.buyer_attachmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>
          }
          createMany: {
            args: Prisma.buyer_attachmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.buyer_attachmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>[]
          }
          delete: {
            args: Prisma.buyer_attachmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>
          }
          update: {
            args: Prisma.buyer_attachmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>
          }
          deleteMany: {
            args: Prisma.buyer_attachmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.buyer_attachmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.buyer_attachmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>[]
          }
          upsert: {
            args: Prisma.buyer_attachmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyer_attachmentsPayload>
          }
          aggregate: {
            args: Prisma.Buyer_attachmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuyer_attachments>
          }
          groupBy: {
            args: Prisma.buyer_attachmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Buyer_attachmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.buyer_attachmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Buyer_attachmentsCountAggregateOutputType> | number
          }
        }
      }
      buyers: {
        payload: Prisma.$buyersPayload<ExtArgs>
        fields: Prisma.buyersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.buyersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.buyersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>
          }
          findFirst: {
            args: Prisma.buyersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.buyersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>
          }
          findMany: {
            args: Prisma.buyersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>[]
          }
          create: {
            args: Prisma.buyersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>
          }
          createMany: {
            args: Prisma.buyersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.buyersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>[]
          }
          delete: {
            args: Prisma.buyersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>
          }
          update: {
            args: Prisma.buyersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>
          }
          deleteMany: {
            args: Prisma.buyersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.buyersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.buyersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>[]
          }
          upsert: {
            args: Prisma.buyersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buyersPayload>
          }
          aggregate: {
            args: Prisma.BuyersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuyers>
          }
          groupBy: {
            args: Prisma.buyersGroupByArgs<ExtArgs>
            result: $Utils.Optional<BuyersGroupByOutputType>[]
          }
          count: {
            args: Prisma.buyersCountArgs<ExtArgs>
            result: $Utils.Optional<BuyersCountAggregateOutputType> | number
          }
        }
      }
      cattle_attachments: {
        payload: Prisma.$cattle_attachmentsPayload<ExtArgs>
        fields: Prisma.cattle_attachmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_attachmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_attachmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>
          }
          findFirst: {
            args: Prisma.cattle_attachmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_attachmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>
          }
          findMany: {
            args: Prisma.cattle_attachmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>[]
          }
          create: {
            args: Prisma.cattle_attachmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>
          }
          createMany: {
            args: Prisma.cattle_attachmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_attachmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>[]
          }
          delete: {
            args: Prisma.cattle_attachmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>
          }
          update: {
            args: Prisma.cattle_attachmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>
          }
          deleteMany: {
            args: Prisma.cattle_attachmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_attachmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_attachmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>[]
          }
          upsert: {
            args: Prisma.cattle_attachmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_attachmentsPayload>
          }
          aggregate: {
            args: Prisma.Cattle_attachmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_attachments>
          }
          groupBy: {
            args: Prisma.cattle_attachmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_attachmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_attachmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_attachmentsCountAggregateOutputType> | number
          }
        }
      }
      cattle_breeds: {
        payload: Prisma.$cattle_breedsPayload<ExtArgs>
        fields: Prisma.cattle_breedsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_breedsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_breedsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>
          }
          findFirst: {
            args: Prisma.cattle_breedsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_breedsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>
          }
          findMany: {
            args: Prisma.cattle_breedsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>[]
          }
          create: {
            args: Prisma.cattle_breedsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>
          }
          createMany: {
            args: Prisma.cattle_breedsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_breedsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>[]
          }
          delete: {
            args: Prisma.cattle_breedsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>
          }
          update: {
            args: Prisma.cattle_breedsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>
          }
          deleteMany: {
            args: Prisma.cattle_breedsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_breedsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_breedsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>[]
          }
          upsert: {
            args: Prisma.cattle_breedsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_breedsPayload>
          }
          aggregate: {
            args: Prisma.Cattle_breedsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_breeds>
          }
          groupBy: {
            args: Prisma.cattle_breedsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_breedsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_breedsCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_breedsCountAggregateOutputType> | number
          }
        }
      }
      cattle_create_staged: {
        payload: Prisma.$cattle_create_stagedPayload<ExtArgs>
        fields: Prisma.cattle_create_stagedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_create_stagedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_create_stagedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>
          }
          findFirst: {
            args: Prisma.cattle_create_stagedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_create_stagedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>
          }
          findMany: {
            args: Prisma.cattle_create_stagedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>[]
          }
          create: {
            args: Prisma.cattle_create_stagedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>
          }
          createMany: {
            args: Prisma.cattle_create_stagedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_create_stagedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>[]
          }
          delete: {
            args: Prisma.cattle_create_stagedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>
          }
          update: {
            args: Prisma.cattle_create_stagedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>
          }
          deleteMany: {
            args: Prisma.cattle_create_stagedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_create_stagedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_create_stagedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>[]
          }
          upsert: {
            args: Prisma.cattle_create_stagedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_create_stagedPayload>
          }
          aggregate: {
            args: Prisma.Cattle_create_stagedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_create_staged>
          }
          groupBy: {
            args: Prisma.cattle_create_stagedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_create_stagedGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_create_stagedCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_create_stagedCountAggregateOutputType> | number
          }
        }
      }
      cattle_healths: {
        payload: Prisma.$cattle_healthsPayload<ExtArgs>
        fields: Prisma.cattle_healthsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_healthsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_healthsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>
          }
          findFirst: {
            args: Prisma.cattle_healthsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_healthsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>
          }
          findMany: {
            args: Prisma.cattle_healthsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>[]
          }
          create: {
            args: Prisma.cattle_healthsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>
          }
          createMany: {
            args: Prisma.cattle_healthsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_healthsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>[]
          }
          delete: {
            args: Prisma.cattle_healthsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>
          }
          update: {
            args: Prisma.cattle_healthsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>
          }
          deleteMany: {
            args: Prisma.cattle_healthsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_healthsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_healthsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>[]
          }
          upsert: {
            args: Prisma.cattle_healthsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_healthsPayload>
          }
          aggregate: {
            args: Prisma.Cattle_healthsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_healths>
          }
          groupBy: {
            args: Prisma.cattle_healthsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_healthsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_healthsCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_healthsCountAggregateOutputType> | number
          }
        }
      }
      cattle_matching_order_staged: {
        payload: Prisma.$cattle_matching_order_stagedPayload<ExtArgs>
        fields: Prisma.cattle_matching_order_stagedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_matching_order_stagedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_matching_order_stagedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>
          }
          findFirst: {
            args: Prisma.cattle_matching_order_stagedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_matching_order_stagedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>
          }
          findMany: {
            args: Prisma.cattle_matching_order_stagedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>[]
          }
          create: {
            args: Prisma.cattle_matching_order_stagedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>
          }
          createMany: {
            args: Prisma.cattle_matching_order_stagedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_matching_order_stagedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>[]
          }
          delete: {
            args: Prisma.cattle_matching_order_stagedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>
          }
          update: {
            args: Prisma.cattle_matching_order_stagedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>
          }
          deleteMany: {
            args: Prisma.cattle_matching_order_stagedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_matching_order_stagedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_matching_order_stagedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>[]
          }
          upsert: {
            args: Prisma.cattle_matching_order_stagedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_matching_order_stagedPayload>
          }
          aggregate: {
            args: Prisma.Cattle_matching_order_stagedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_matching_order_staged>
          }
          groupBy: {
            args: Prisma.cattle_matching_order_stagedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_matching_order_stagedGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_matching_order_stagedCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_matching_order_stagedCountAggregateOutputType> | number
          }
        }
      }
      cattle_sourcing: {
        payload: Prisma.$cattle_sourcingPayload<ExtArgs>
        fields: Prisma.cattle_sourcingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_sourcingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_sourcingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>
          }
          findFirst: {
            args: Prisma.cattle_sourcingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_sourcingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>
          }
          findMany: {
            args: Prisma.cattle_sourcingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>[]
          }
          create: {
            args: Prisma.cattle_sourcingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>
          }
          createMany: {
            args: Prisma.cattle_sourcingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_sourcingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>[]
          }
          delete: {
            args: Prisma.cattle_sourcingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>
          }
          update: {
            args: Prisma.cattle_sourcingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>
          }
          deleteMany: {
            args: Prisma.cattle_sourcingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_sourcingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_sourcingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>[]
          }
          upsert: {
            args: Prisma.cattle_sourcingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_sourcingPayload>
          }
          aggregate: {
            args: Prisma.Cattle_sourcingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_sourcing>
          }
          groupBy: {
            args: Prisma.cattle_sourcingGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_sourcingGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_sourcingCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_sourcingCountAggregateOutputType> | number
          }
        }
      }
      cattle_types: {
        payload: Prisma.$cattle_typesPayload<ExtArgs>
        fields: Prisma.cattle_typesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_typesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_typesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>
          }
          findFirst: {
            args: Prisma.cattle_typesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_typesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>
          }
          findMany: {
            args: Prisma.cattle_typesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>[]
          }
          create: {
            args: Prisma.cattle_typesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>
          }
          createMany: {
            args: Prisma.cattle_typesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_typesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>[]
          }
          delete: {
            args: Prisma.cattle_typesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>
          }
          update: {
            args: Prisma.cattle_typesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>
          }
          deleteMany: {
            args: Prisma.cattle_typesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_typesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_typesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>[]
          }
          upsert: {
            args: Prisma.cattle_typesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_typesPayload>
          }
          aggregate: {
            args: Prisma.Cattle_typesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_types>
          }
          groupBy: {
            args: Prisma.cattle_typesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_typesGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_typesCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_typesCountAggregateOutputType> | number
          }
        }
      }
      cattle_vaccinations: {
        payload: Prisma.$cattle_vaccinationsPayload<ExtArgs>
        fields: Prisma.cattle_vaccinationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattle_vaccinationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattle_vaccinationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>
          }
          findFirst: {
            args: Prisma.cattle_vaccinationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattle_vaccinationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>
          }
          findMany: {
            args: Prisma.cattle_vaccinationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>[]
          }
          create: {
            args: Prisma.cattle_vaccinationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>
          }
          createMany: {
            args: Prisma.cattle_vaccinationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattle_vaccinationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>[]
          }
          delete: {
            args: Prisma.cattle_vaccinationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>
          }
          update: {
            args: Prisma.cattle_vaccinationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>
          }
          deleteMany: {
            args: Prisma.cattle_vaccinationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattle_vaccinationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattle_vaccinationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>[]
          }
          upsert: {
            args: Prisma.cattle_vaccinationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattle_vaccinationsPayload>
          }
          aggregate: {
            args: Prisma.Cattle_vaccinationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattle_vaccinations>
          }
          groupBy: {
            args: Prisma.cattle_vaccinationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cattle_vaccinationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattle_vaccinationsCountArgs<ExtArgs>
            result: $Utils.Optional<Cattle_vaccinationsCountAggregateOutputType> | number
          }
        }
      }
      cattles: {
        payload: Prisma.$cattlesPayload<ExtArgs>
        fields: Prisma.cattlesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cattlesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cattlesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>
          }
          findFirst: {
            args: Prisma.cattlesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cattlesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>
          }
          findMany: {
            args: Prisma.cattlesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>[]
          }
          create: {
            args: Prisma.cattlesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>
          }
          createMany: {
            args: Prisma.cattlesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cattlesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>[]
          }
          delete: {
            args: Prisma.cattlesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>
          }
          update: {
            args: Prisma.cattlesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>
          }
          deleteMany: {
            args: Prisma.cattlesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cattlesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cattlesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>[]
          }
          upsert: {
            args: Prisma.cattlesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cattlesPayload>
          }
          aggregate: {
            args: Prisma.CattlesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCattles>
          }
          groupBy: {
            args: Prisma.cattlesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CattlesGroupByOutputType>[]
          }
          count: {
            args: Prisma.cattlesCountArgs<ExtArgs>
            result: $Utils.Optional<CattlesCountAggregateOutputType> | number
          }
        }
      }
      data_migrations: {
        payload: Prisma.$data_migrationsPayload<ExtArgs>
        fields: Prisma.data_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.data_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.data_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>
          }
          findFirst: {
            args: Prisma.data_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.data_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>
          }
          findMany: {
            args: Prisma.data_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>[]
          }
          create: {
            args: Prisma.data_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>
          }
          createMany: {
            args: Prisma.data_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.data_migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>[]
          }
          delete: {
            args: Prisma.data_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>
          }
          update: {
            args: Prisma.data_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.data_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.data_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.data_migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>[]
          }
          upsert: {
            args: Prisma.data_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$data_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Data_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateData_migrations>
          }
          groupBy: {
            args: Prisma.data_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Data_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.data_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Data_migrationsCountAggregateOutputType> | number
          }
        }
      }
      farm_attachments: {
        payload: Prisma.$farm_attachmentsPayload<ExtArgs>
        fields: Prisma.farm_attachmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farm_attachmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farm_attachmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>
          }
          findFirst: {
            args: Prisma.farm_attachmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farm_attachmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>
          }
          findMany: {
            args: Prisma.farm_attachmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>[]
          }
          create: {
            args: Prisma.farm_attachmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>
          }
          createMany: {
            args: Prisma.farm_attachmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farm_attachmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>[]
          }
          delete: {
            args: Prisma.farm_attachmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>
          }
          update: {
            args: Prisma.farm_attachmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>
          }
          deleteMany: {
            args: Prisma.farm_attachmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farm_attachmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farm_attachmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>[]
          }
          upsert: {
            args: Prisma.farm_attachmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_attachmentsPayload>
          }
          aggregate: {
            args: Prisma.Farm_attachmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarm_attachments>
          }
          groupBy: {
            args: Prisma.farm_attachmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farm_attachmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.farm_attachmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Farm_attachmentsCountAggregateOutputType> | number
          }
        }
      }
      farm_authorized: {
        payload: Prisma.$farm_authorizedPayload<ExtArgs>
        fields: Prisma.farm_authorizedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farm_authorizedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farm_authorizedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>
          }
          findFirst: {
            args: Prisma.farm_authorizedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farm_authorizedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>
          }
          findMany: {
            args: Prisma.farm_authorizedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>[]
          }
          create: {
            args: Prisma.farm_authorizedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>
          }
          createMany: {
            args: Prisma.farm_authorizedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farm_authorizedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>[]
          }
          delete: {
            args: Prisma.farm_authorizedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>
          }
          update: {
            args: Prisma.farm_authorizedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>
          }
          deleteMany: {
            args: Prisma.farm_authorizedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farm_authorizedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farm_authorizedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>[]
          }
          upsert: {
            args: Prisma.farm_authorizedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_authorizedPayload>
          }
          aggregate: {
            args: Prisma.Farm_authorizedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarm_authorized>
          }
          groupBy: {
            args: Prisma.farm_authorizedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farm_authorizedGroupByOutputType>[]
          }
          count: {
            args: Prisma.farm_authorizedCountArgs<ExtArgs>
            result: $Utils.Optional<Farm_authorizedCountAggregateOutputType> | number
          }
        }
      }
      farm_create_staged: {
        payload: Prisma.$farm_create_stagedPayload<ExtArgs>
        fields: Prisma.farm_create_stagedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farm_create_stagedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farm_create_stagedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>
          }
          findFirst: {
            args: Prisma.farm_create_stagedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farm_create_stagedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>
          }
          findMany: {
            args: Prisma.farm_create_stagedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>[]
          }
          create: {
            args: Prisma.farm_create_stagedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>
          }
          createMany: {
            args: Prisma.farm_create_stagedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farm_create_stagedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>[]
          }
          delete: {
            args: Prisma.farm_create_stagedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>
          }
          update: {
            args: Prisma.farm_create_stagedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>
          }
          deleteMany: {
            args: Prisma.farm_create_stagedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farm_create_stagedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farm_create_stagedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>[]
          }
          upsert: {
            args: Prisma.farm_create_stagedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_create_stagedPayload>
          }
          aggregate: {
            args: Prisma.Farm_create_stagedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarm_create_staged>
          }
          groupBy: {
            args: Prisma.farm_create_stagedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farm_create_stagedGroupByOutputType>[]
          }
          count: {
            args: Prisma.farm_create_stagedCountArgs<ExtArgs>
            result: $Utils.Optional<Farm_create_stagedCountAggregateOutputType> | number
          }
        }
      }
      farm_sourcing: {
        payload: Prisma.$farm_sourcingPayload<ExtArgs>
        fields: Prisma.farm_sourcingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farm_sourcingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farm_sourcingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>
          }
          findFirst: {
            args: Prisma.farm_sourcingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farm_sourcingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>
          }
          findMany: {
            args: Prisma.farm_sourcingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>[]
          }
          create: {
            args: Prisma.farm_sourcingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>
          }
          createMany: {
            args: Prisma.farm_sourcingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farm_sourcingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>[]
          }
          delete: {
            args: Prisma.farm_sourcingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>
          }
          update: {
            args: Prisma.farm_sourcingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>
          }
          deleteMany: {
            args: Prisma.farm_sourcingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farm_sourcingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farm_sourcingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>[]
          }
          upsert: {
            args: Prisma.farm_sourcingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_sourcingPayload>
          }
          aggregate: {
            args: Prisma.Farm_sourcingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarm_sourcing>
          }
          groupBy: {
            args: Prisma.farm_sourcingGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farm_sourcingGroupByOutputType>[]
          }
          count: {
            args: Prisma.farm_sourcingCountArgs<ExtArgs>
            result: $Utils.Optional<Farm_sourcingCountAggregateOutputType> | number
          }
        }
      }
      farm_veterinary: {
        payload: Prisma.$farm_veterinaryPayload<ExtArgs>
        fields: Prisma.farm_veterinaryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farm_veterinaryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farm_veterinaryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>
          }
          findFirst: {
            args: Prisma.farm_veterinaryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farm_veterinaryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>
          }
          findMany: {
            args: Prisma.farm_veterinaryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>[]
          }
          create: {
            args: Prisma.farm_veterinaryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>
          }
          createMany: {
            args: Prisma.farm_veterinaryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farm_veterinaryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>[]
          }
          delete: {
            args: Prisma.farm_veterinaryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>
          }
          update: {
            args: Prisma.farm_veterinaryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>
          }
          deleteMany: {
            args: Prisma.farm_veterinaryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farm_veterinaryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farm_veterinaryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>[]
          }
          upsert: {
            args: Prisma.farm_veterinaryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farm_veterinaryPayload>
          }
          aggregate: {
            args: Prisma.Farm_veterinaryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarm_veterinary>
          }
          groupBy: {
            args: Prisma.farm_veterinaryGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farm_veterinaryGroupByOutputType>[]
          }
          count: {
            args: Prisma.farm_veterinaryCountArgs<ExtArgs>
            result: $Utils.Optional<Farm_veterinaryCountAggregateOutputType> | number
          }
        }
      }
      farmer_accounts: {
        payload: Prisma.$farmer_accountsPayload<ExtArgs>
        fields: Prisma.farmer_accountsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farmer_accountsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farmer_accountsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>
          }
          findFirst: {
            args: Prisma.farmer_accountsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farmer_accountsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>
          }
          findMany: {
            args: Prisma.farmer_accountsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>[]
          }
          create: {
            args: Prisma.farmer_accountsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>
          }
          createMany: {
            args: Prisma.farmer_accountsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farmer_accountsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>[]
          }
          delete: {
            args: Prisma.farmer_accountsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>
          }
          update: {
            args: Prisma.farmer_accountsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>
          }
          deleteMany: {
            args: Prisma.farmer_accountsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farmer_accountsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farmer_accountsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>[]
          }
          upsert: {
            args: Prisma.farmer_accountsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_accountsPayload>
          }
          aggregate: {
            args: Prisma.Farmer_accountsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmer_accounts>
          }
          groupBy: {
            args: Prisma.farmer_accountsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farmer_accountsGroupByOutputType>[]
          }
          count: {
            args: Prisma.farmer_accountsCountArgs<ExtArgs>
            result: $Utils.Optional<Farmer_accountsCountAggregateOutputType> | number
          }
        }
      }
      farmer_attachments: {
        payload: Prisma.$farmer_attachmentsPayload<ExtArgs>
        fields: Prisma.farmer_attachmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farmer_attachmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farmer_attachmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>
          }
          findFirst: {
            args: Prisma.farmer_attachmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farmer_attachmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>
          }
          findMany: {
            args: Prisma.farmer_attachmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>[]
          }
          create: {
            args: Prisma.farmer_attachmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>
          }
          createMany: {
            args: Prisma.farmer_attachmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farmer_attachmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>[]
          }
          delete: {
            args: Prisma.farmer_attachmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>
          }
          update: {
            args: Prisma.farmer_attachmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>
          }
          deleteMany: {
            args: Prisma.farmer_attachmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farmer_attachmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farmer_attachmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>[]
          }
          upsert: {
            args: Prisma.farmer_attachmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_attachmentsPayload>
          }
          aggregate: {
            args: Prisma.Farmer_attachmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmer_attachments>
          }
          groupBy: {
            args: Prisma.farmer_attachmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farmer_attachmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.farmer_attachmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Farmer_attachmentsCountAggregateOutputType> | number
          }
        }
      }
      farmer_create_staged: {
        payload: Prisma.$farmer_create_stagedPayload<ExtArgs>
        fields: Prisma.farmer_create_stagedFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farmer_create_stagedFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farmer_create_stagedFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>
          }
          findFirst: {
            args: Prisma.farmer_create_stagedFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farmer_create_stagedFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>
          }
          findMany: {
            args: Prisma.farmer_create_stagedFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>[]
          }
          create: {
            args: Prisma.farmer_create_stagedCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>
          }
          createMany: {
            args: Prisma.farmer_create_stagedCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farmer_create_stagedCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>[]
          }
          delete: {
            args: Prisma.farmer_create_stagedDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>
          }
          update: {
            args: Prisma.farmer_create_stagedUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>
          }
          deleteMany: {
            args: Prisma.farmer_create_stagedDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farmer_create_stagedUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farmer_create_stagedUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>[]
          }
          upsert: {
            args: Prisma.farmer_create_stagedUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmer_create_stagedPayload>
          }
          aggregate: {
            args: Prisma.Farmer_create_stagedAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmer_create_staged>
          }
          groupBy: {
            args: Prisma.farmer_create_stagedGroupByArgs<ExtArgs>
            result: $Utils.Optional<Farmer_create_stagedGroupByOutputType>[]
          }
          count: {
            args: Prisma.farmer_create_stagedCountArgs<ExtArgs>
            result: $Utils.Optional<Farmer_create_stagedCountAggregateOutputType> | number
          }
        }
      }
      farmers: {
        payload: Prisma.$farmersPayload<ExtArgs>
        fields: Prisma.farmersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farmersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farmersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>
          }
          findFirst: {
            args: Prisma.farmersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farmersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>
          }
          findMany: {
            args: Prisma.farmersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>[]
          }
          create: {
            args: Prisma.farmersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>
          }
          createMany: {
            args: Prisma.farmersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farmersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>[]
          }
          delete: {
            args: Prisma.farmersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>
          }
          update: {
            args: Prisma.farmersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>
          }
          deleteMany: {
            args: Prisma.farmersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farmersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farmersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>[]
          }
          upsert: {
            args: Prisma.farmersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmersPayload>
          }
          aggregate: {
            args: Prisma.FarmersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarmers>
          }
          groupBy: {
            args: Prisma.farmersGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmersGroupByOutputType>[]
          }
          count: {
            args: Prisma.farmersCountArgs<ExtArgs>
            result: $Utils.Optional<FarmersCountAggregateOutputType> | number
          }
        }
      }
      farms: {
        payload: Prisma.$farmsPayload<ExtArgs>
        fields: Prisma.farmsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.farmsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.farmsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>
          }
          findFirst: {
            args: Prisma.farmsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.farmsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>
          }
          findMany: {
            args: Prisma.farmsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>[]
          }
          create: {
            args: Prisma.farmsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>
          }
          createMany: {
            args: Prisma.farmsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.farmsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>[]
          }
          delete: {
            args: Prisma.farmsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>
          }
          update: {
            args: Prisma.farmsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>
          }
          deleteMany: {
            args: Prisma.farmsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.farmsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.farmsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>[]
          }
          upsert: {
            args: Prisma.farmsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$farmsPayload>
          }
          aggregate: {
            args: Prisma.FarmsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFarms>
          }
          groupBy: {
            args: Prisma.farmsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FarmsGroupByOutputType>[]
          }
          count: {
            args: Prisma.farmsCountArgs<ExtArgs>
            result: $Utils.Optional<FarmsCountAggregateOutputType> | number
          }
        }
      }
      order_attachments: {
        payload: Prisma.$order_attachmentsPayload<ExtArgs>
        fields: Prisma.order_attachmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_attachmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_attachmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>
          }
          findFirst: {
            args: Prisma.order_attachmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_attachmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>
          }
          findMany: {
            args: Prisma.order_attachmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>[]
          }
          create: {
            args: Prisma.order_attachmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>
          }
          createMany: {
            args: Prisma.order_attachmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_attachmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>[]
          }
          delete: {
            args: Prisma.order_attachmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>
          }
          update: {
            args: Prisma.order_attachmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>
          }
          deleteMany: {
            args: Prisma.order_attachmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_attachmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_attachmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>[]
          }
          upsert: {
            args: Prisma.order_attachmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_attachmentsPayload>
          }
          aggregate: {
            args: Prisma.Order_attachmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_attachments>
          }
          groupBy: {
            args: Prisma.order_attachmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_attachmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_attachmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Order_attachmentsCountAggregateOutputType> | number
          }
        }
      }
      order_requests: {
        payload: Prisma.$order_requestsPayload<ExtArgs>
        fields: Prisma.order_requestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_requestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_requestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>
          }
          findFirst: {
            args: Prisma.order_requestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_requestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>
          }
          findMany: {
            args: Prisma.order_requestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>[]
          }
          create: {
            args: Prisma.order_requestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>
          }
          createMany: {
            args: Prisma.order_requestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_requestsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>[]
          }
          delete: {
            args: Prisma.order_requestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>
          }
          update: {
            args: Prisma.order_requestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>
          }
          deleteMany: {
            args: Prisma.order_requestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_requestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_requestsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>[]
          }
          upsert: {
            args: Prisma.order_requestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_requestsPayload>
          }
          aggregate: {
            args: Prisma.Order_requestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_requests>
          }
          groupBy: {
            args: Prisma.order_requestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_requestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_requestsCountArgs<ExtArgs>
            result: $Utils.Optional<Order_requestsCountAggregateOutputType> | number
          }
        }
      }
      orders: {
        payload: Prisma.$ordersPayload<ExtArgs>
        fields: Prisma.ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findFirst: {
            args: Prisma.ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findMany: {
            args: Prisma.ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          create: {
            args: Prisma.ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          createMany: {
            args: Prisma.ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          delete: {
            args: Prisma.ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          update: {
            args: Prisma.ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          deleteMany: {
            args: Prisma.ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          upsert: {
            args: Prisma.ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          aggregate: {
            args: Prisma.OrdersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders>
          }
          groupBy: {
            args: Prisma.ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordersCountArgs<ExtArgs>
            result: $Utils.Optional<OrdersCountAggregateOutputType> | number
          }
        }
      }
      pen_attachments: {
        payload: Prisma.$pen_attachmentsPayload<ExtArgs>
        fields: Prisma.pen_attachmentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pen_attachmentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pen_attachmentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>
          }
          findFirst: {
            args: Prisma.pen_attachmentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pen_attachmentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>
          }
          findMany: {
            args: Prisma.pen_attachmentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>[]
          }
          create: {
            args: Prisma.pen_attachmentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>
          }
          createMany: {
            args: Prisma.pen_attachmentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pen_attachmentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>[]
          }
          delete: {
            args: Prisma.pen_attachmentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>
          }
          update: {
            args: Prisma.pen_attachmentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>
          }
          deleteMany: {
            args: Prisma.pen_attachmentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pen_attachmentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pen_attachmentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>[]
          }
          upsert: {
            args: Prisma.pen_attachmentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pen_attachmentsPayload>
          }
          aggregate: {
            args: Prisma.Pen_attachmentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePen_attachments>
          }
          groupBy: {
            args: Prisma.pen_attachmentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pen_attachmentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.pen_attachmentsCountArgs<ExtArgs>
            result: $Utils.Optional<Pen_attachmentsCountAggregateOutputType> | number
          }
        }
      }
      pens: {
        payload: Prisma.$pensPayload<ExtArgs>
        fields: Prisma.pensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>
          }
          findFirst: {
            args: Prisma.pensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>
          }
          findMany: {
            args: Prisma.pensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>[]
          }
          create: {
            args: Prisma.pensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>
          }
          createMany: {
            args: Prisma.pensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>[]
          }
          delete: {
            args: Prisma.pensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>
          }
          update: {
            args: Prisma.pensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>
          }
          deleteMany: {
            args: Prisma.pensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>[]
          }
          upsert: {
            args: Prisma.pensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pensPayload>
          }
          aggregate: {
            args: Prisma.PensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePens>
          }
          groupBy: {
            args: Prisma.pensGroupByArgs<ExtArgs>
            result: $Utils.Optional<PensGroupByOutputType>[]
          }
          count: {
            args: Prisma.pensCountArgs<ExtArgs>
            result: $Utils.Optional<PensCountAggregateOutputType> | number
          }
        }
      }
      schema_migrations: {
        payload: Prisma.$schema_migrationsPayload<ExtArgs>
        fields: Prisma.schema_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.schema_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.schema_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findFirst: {
            args: Prisma.schema_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.schema_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findMany: {
            args: Prisma.schema_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          create: {
            args: Prisma.schema_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          createMany: {
            args: Prisma.schema_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.schema_migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          delete: {
            args: Prisma.schema_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          update: {
            args: Prisma.schema_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.schema_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.schema_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.schema_migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          upsert: {
            args: Prisma.schema_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Schema_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSchema_migrations>
          }
          groupBy: {
            args: Prisma.schema_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.schema_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsCountAggregateOutputType> | number
          }
        }
      }
      traceability: {
        payload: Prisma.$traceabilityPayload<ExtArgs>
        fields: Prisma.traceabilityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.traceabilityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.traceabilityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>
          }
          findFirst: {
            args: Prisma.traceabilityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.traceabilityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>
          }
          findMany: {
            args: Prisma.traceabilityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>[]
          }
          create: {
            args: Prisma.traceabilityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>
          }
          createMany: {
            args: Prisma.traceabilityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.traceabilityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>[]
          }
          delete: {
            args: Prisma.traceabilityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>
          }
          update: {
            args: Prisma.traceabilityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>
          }
          deleteMany: {
            args: Prisma.traceabilityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.traceabilityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.traceabilityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>[]
          }
          upsert: {
            args: Prisma.traceabilityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceabilityPayload>
          }
          aggregate: {
            args: Prisma.TraceabilityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTraceability>
          }
          groupBy: {
            args: Prisma.traceabilityGroupByArgs<ExtArgs>
            result: $Utils.Optional<TraceabilityGroupByOutputType>[]
          }
          count: {
            args: Prisma.traceabilityCountArgs<ExtArgs>
            result: $Utils.Optional<TraceabilityCountAggregateOutputType> | number
          }
        }
      }
      traceability_cattle: {
        payload: Prisma.$traceability_cattlePayload<ExtArgs>
        fields: Prisma.traceability_cattleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.traceability_cattleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.traceability_cattleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>
          }
          findFirst: {
            args: Prisma.traceability_cattleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.traceability_cattleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>
          }
          findMany: {
            args: Prisma.traceability_cattleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>[]
          }
          create: {
            args: Prisma.traceability_cattleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>
          }
          createMany: {
            args: Prisma.traceability_cattleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.traceability_cattleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>[]
          }
          delete: {
            args: Prisma.traceability_cattleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>
          }
          update: {
            args: Prisma.traceability_cattleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>
          }
          deleteMany: {
            args: Prisma.traceability_cattleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.traceability_cattleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.traceability_cattleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>[]
          }
          upsert: {
            args: Prisma.traceability_cattleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_cattlePayload>
          }
          aggregate: {
            args: Prisma.Traceability_cattleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTraceability_cattle>
          }
          groupBy: {
            args: Prisma.traceability_cattleGroupByArgs<ExtArgs>
            result: $Utils.Optional<Traceability_cattleGroupByOutputType>[]
          }
          count: {
            args: Prisma.traceability_cattleCountArgs<ExtArgs>
            result: $Utils.Optional<Traceability_cattleCountAggregateOutputType> | number
          }
        }
      }
      traceability_status: {
        payload: Prisma.$traceability_statusPayload<ExtArgs>
        fields: Prisma.traceability_statusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.traceability_statusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.traceability_statusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>
          }
          findFirst: {
            args: Prisma.traceability_statusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.traceability_statusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>
          }
          findMany: {
            args: Prisma.traceability_statusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>[]
          }
          create: {
            args: Prisma.traceability_statusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>
          }
          createMany: {
            args: Prisma.traceability_statusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.traceability_statusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>[]
          }
          delete: {
            args: Prisma.traceability_statusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>
          }
          update: {
            args: Prisma.traceability_statusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>
          }
          deleteMany: {
            args: Prisma.traceability_statusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.traceability_statusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.traceability_statusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>[]
          }
          upsert: {
            args: Prisma.traceability_statusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_statusPayload>
          }
          aggregate: {
            args: Prisma.Traceability_statusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTraceability_status>
          }
          groupBy: {
            args: Prisma.traceability_statusGroupByArgs<ExtArgs>
            result: $Utils.Optional<Traceability_statusGroupByOutputType>[]
          }
          count: {
            args: Prisma.traceability_statusCountArgs<ExtArgs>
            result: $Utils.Optional<Traceability_statusCountAggregateOutputType> | number
          }
        }
      }
      traceability_vehicle: {
        payload: Prisma.$traceability_vehiclePayload<ExtArgs>
        fields: Prisma.traceability_vehicleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.traceability_vehicleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.traceability_vehicleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>
          }
          findFirst: {
            args: Prisma.traceability_vehicleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.traceability_vehicleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>
          }
          findMany: {
            args: Prisma.traceability_vehicleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>[]
          }
          create: {
            args: Prisma.traceability_vehicleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>
          }
          createMany: {
            args: Prisma.traceability_vehicleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.traceability_vehicleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>[]
          }
          delete: {
            args: Prisma.traceability_vehicleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>
          }
          update: {
            args: Prisma.traceability_vehicleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>
          }
          deleteMany: {
            args: Prisma.traceability_vehicleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.traceability_vehicleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.traceability_vehicleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>[]
          }
          upsert: {
            args: Prisma.traceability_vehicleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$traceability_vehiclePayload>
          }
          aggregate: {
            args: Prisma.Traceability_vehicleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTraceability_vehicle>
          }
          groupBy: {
            args: Prisma.traceability_vehicleGroupByArgs<ExtArgs>
            result: $Utils.Optional<Traceability_vehicleGroupByOutputType>[]
          }
          count: {
            args: Prisma.traceability_vehicleCountArgs<ExtArgs>
            result: $Utils.Optional<Traceability_vehicleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    admins?: adminsOmit
    buyer_attachments?: buyer_attachmentsOmit
    buyers?: buyersOmit
    cattle_attachments?: cattle_attachmentsOmit
    cattle_breeds?: cattle_breedsOmit
    cattle_create_staged?: cattle_create_stagedOmit
    cattle_healths?: cattle_healthsOmit
    cattle_matching_order_staged?: cattle_matching_order_stagedOmit
    cattle_sourcing?: cattle_sourcingOmit
    cattle_types?: cattle_typesOmit
    cattle_vaccinations?: cattle_vaccinationsOmit
    cattles?: cattlesOmit
    data_migrations?: data_migrationsOmit
    farm_attachments?: farm_attachmentsOmit
    farm_authorized?: farm_authorizedOmit
    farm_create_staged?: farm_create_stagedOmit
    farm_sourcing?: farm_sourcingOmit
    farm_veterinary?: farm_veterinaryOmit
    farmer_accounts?: farmer_accountsOmit
    farmer_attachments?: farmer_attachmentsOmit
    farmer_create_staged?: farmer_create_stagedOmit
    farmers?: farmersOmit
    farms?: farmsOmit
    order_attachments?: order_attachmentsOmit
    order_requests?: order_requestsOmit
    orders?: ordersOmit
    pen_attachments?: pen_attachmentsOmit
    pens?: pensOmit
    schema_migrations?: schema_migrationsOmit
    traceability?: traceabilityOmit
    traceability_cattle?: traceability_cattleOmit
    traceability_status?: traceability_statusOmit
    traceability_vehicle?: traceability_vehicleOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BuyersCountOutputType
   */

  export type BuyersCountOutputType = {
    buyer_attachments: number
  }

  export type BuyersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer_attachments?: boolean | BuyersCountOutputTypeCountBuyer_attachmentsArgs
  }

  // Custom InputTypes
  /**
   * BuyersCountOutputType without action
   */
  export type BuyersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuyersCountOutputType
     */
    select?: BuyersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BuyersCountOutputType without action
   */
  export type BuyersCountOutputTypeCountBuyer_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: buyer_attachmentsWhereInput
  }


  /**
   * Count Type CattlesCountOutputType
   */

  export type CattlesCountOutputType = {
    cattle_attachments: number
    cattle_healths: number
    cattle_vaccinations: number
  }

  export type CattlesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattle_attachments?: boolean | CattlesCountOutputTypeCountCattle_attachmentsArgs
    cattle_healths?: boolean | CattlesCountOutputTypeCountCattle_healthsArgs
    cattle_vaccinations?: boolean | CattlesCountOutputTypeCountCattle_vaccinationsArgs
  }

  // Custom InputTypes
  /**
   * CattlesCountOutputType without action
   */
  export type CattlesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CattlesCountOutputType
     */
    select?: CattlesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CattlesCountOutputType without action
   */
  export type CattlesCountOutputTypeCountCattle_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_attachmentsWhereInput
  }

  /**
   * CattlesCountOutputType without action
   */
  export type CattlesCountOutputTypeCountCattle_healthsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_healthsWhereInput
  }

  /**
   * CattlesCountOutputType without action
   */
  export type CattlesCountOutputTypeCountCattle_vaccinationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_vaccinationsWhereInput
  }


  /**
   * Count Type Farm_sourcingCountOutputType
   */

  export type Farm_sourcingCountOutputType = {
    cattle_sourcing: number
  }

  export type Farm_sourcingCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattle_sourcing?: boolean | Farm_sourcingCountOutputTypeCountCattle_sourcingArgs
  }

  // Custom InputTypes
  /**
   * Farm_sourcingCountOutputType without action
   */
  export type Farm_sourcingCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Farm_sourcingCountOutputType
     */
    select?: Farm_sourcingCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Farm_sourcingCountOutputType without action
   */
  export type Farm_sourcingCountOutputTypeCountCattle_sourcingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_sourcingWhereInput
  }


  /**
   * Count Type FarmersCountOutputType
   */

  export type FarmersCountOutputType = {
    farmer_accounts: number
    farmer_attachments: number
  }

  export type FarmersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmer_accounts?: boolean | FarmersCountOutputTypeCountFarmer_accountsArgs
    farmer_attachments?: boolean | FarmersCountOutputTypeCountFarmer_attachmentsArgs
  }

  // Custom InputTypes
  /**
   * FarmersCountOutputType without action
   */
  export type FarmersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmersCountOutputType
     */
    select?: FarmersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FarmersCountOutputType without action
   */
  export type FarmersCountOutputTypeCountFarmer_accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmer_accountsWhereInput
  }

  /**
   * FarmersCountOutputType without action
   */
  export type FarmersCountOutputTypeCountFarmer_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmer_attachmentsWhereInput
  }


  /**
   * Count Type FarmsCountOutputType
   */

  export type FarmsCountOutputType = {
    cattles: number
    farm_attachments: number
    farm_authorized: number
    farm_veterinary: number
    pens: number
  }

  export type FarmsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | FarmsCountOutputTypeCountCattlesArgs
    farm_attachments?: boolean | FarmsCountOutputTypeCountFarm_attachmentsArgs
    farm_authorized?: boolean | FarmsCountOutputTypeCountFarm_authorizedArgs
    farm_veterinary?: boolean | FarmsCountOutputTypeCountFarm_veterinaryArgs
    pens?: boolean | FarmsCountOutputTypeCountPensArgs
  }

  // Custom InputTypes
  /**
   * FarmsCountOutputType without action
   */
  export type FarmsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FarmsCountOutputType
     */
    select?: FarmsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FarmsCountOutputType without action
   */
  export type FarmsCountOutputTypeCountCattlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattlesWhereInput
  }

  /**
   * FarmsCountOutputType without action
   */
  export type FarmsCountOutputTypeCountFarm_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_attachmentsWhereInput
  }

  /**
   * FarmsCountOutputType without action
   */
  export type FarmsCountOutputTypeCountFarm_authorizedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_authorizedWhereInput
  }

  /**
   * FarmsCountOutputType without action
   */
  export type FarmsCountOutputTypeCountFarm_veterinaryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_veterinaryWhereInput
  }

  /**
   * FarmsCountOutputType without action
   */
  export type FarmsCountOutputTypeCountPensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pensWhereInput
  }


  /**
   * Count Type OrdersCountOutputType
   */

  export type OrdersCountOutputType = {
    order_attachments: number
    order_requests: number
  }

  export type OrdersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_attachments?: boolean | OrdersCountOutputTypeCountOrder_attachmentsArgs
    order_requests?: boolean | OrdersCountOutputTypeCountOrder_requestsArgs
  }

  // Custom InputTypes
  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdersCountOutputType
     */
    select?: OrdersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountOrder_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_attachmentsWhereInput
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountOrder_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_requestsWhereInput
  }


  /**
   * Count Type PensCountOutputType
   */

  export type PensCountOutputType = {
    cattles: number
    pen_attachments: number
  }

  export type PensCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | PensCountOutputTypeCountCattlesArgs
    pen_attachments?: boolean | PensCountOutputTypeCountPen_attachmentsArgs
  }

  // Custom InputTypes
  /**
   * PensCountOutputType without action
   */
  export type PensCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PensCountOutputType
     */
    select?: PensCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PensCountOutputType without action
   */
  export type PensCountOutputTypeCountCattlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattlesWhereInput
  }

  /**
   * PensCountOutputType without action
   */
  export type PensCountOutputTypeCountPen_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pen_attachmentsWhereInput
  }


  /**
   * Count Type TraceabilityCountOutputType
   */

  export type TraceabilityCountOutputType = {
    traceability_cattle: number
    traceability_status: number
    traceability_vehicle: number
  }

  export type TraceabilityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability_cattle?: boolean | TraceabilityCountOutputTypeCountTraceability_cattleArgs
    traceability_status?: boolean | TraceabilityCountOutputTypeCountTraceability_statusArgs
    traceability_vehicle?: boolean | TraceabilityCountOutputTypeCountTraceability_vehicleArgs
  }

  // Custom InputTypes
  /**
   * TraceabilityCountOutputType without action
   */
  export type TraceabilityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TraceabilityCountOutputType
     */
    select?: TraceabilityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TraceabilityCountOutputType without action
   */
  export type TraceabilityCountOutputTypeCountTraceability_cattleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_cattleWhereInput
  }

  /**
   * TraceabilityCountOutputType without action
   */
  export type TraceabilityCountOutputTypeCountTraceability_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_statusWhereInput
  }

  /**
   * TraceabilityCountOutputType without action
   */
  export type TraceabilityCountOutputTypeCountTraceability_vehicleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_vehicleWhereInput
  }


  /**
   * Count Type Traceability_vehicleCountOutputType
   */

  export type Traceability_vehicleCountOutputType = {
    traceability_cattle: number
  }

  export type Traceability_vehicleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability_cattle?: boolean | Traceability_vehicleCountOutputTypeCountTraceability_cattleArgs
  }

  // Custom InputTypes
  /**
   * Traceability_vehicleCountOutputType without action
   */
  export type Traceability_vehicleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Traceability_vehicleCountOutputType
     */
    select?: Traceability_vehicleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Traceability_vehicleCountOutputType without action
   */
  export type Traceability_vehicleCountOutputTypeCountTraceability_cattleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_cattleWhereInput
  }


  /**
   * Models
   */

  /**
   * Model admins
   */

  export type AggregateAdmins = {
    _count: AdminsCountAggregateOutputType | null
    _avg: AdminsAvgAggregateOutputType | null
    _sum: AdminsSumAggregateOutputType | null
    _min: AdminsMinAggregateOutputType | null
    _max: AdminsMaxAggregateOutputType | null
  }

  export type AdminsAvgAggregateOutputType = {
    role_id: number | null
  }

  export type AdminsSumAggregateOutputType = {
    role_id: number | null
  }

  export type AdminsMinAggregateOutputType = {
    id: string | null
    email: string | null
    citizen_id: string | null
    masking_citizen_id: string | null
    password: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    pic_url: string | null
    role_id: number | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type AdminsMaxAggregateOutputType = {
    id: string | null
    email: string | null
    citizen_id: string | null
    masking_citizen_id: string | null
    password: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    pic_url: string | null
    role_id: number | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type AdminsCountAggregateOutputType = {
    id: number
    email: number
    citizen_id: number
    masking_citizen_id: number
    password: number
    title: number
    first_name: number
    middle_name: number
    last_name: number
    pic_url: number
    permissions: number
    role_id: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type AdminsAvgAggregateInputType = {
    role_id?: true
  }

  export type AdminsSumAggregateInputType = {
    role_id?: true
  }

  export type AdminsMinAggregateInputType = {
    id?: true
    email?: true
    citizen_id?: true
    masking_citizen_id?: true
    password?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    pic_url?: true
    role_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type AdminsMaxAggregateInputType = {
    id?: true
    email?: true
    citizen_id?: true
    masking_citizen_id?: true
    password?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    pic_url?: true
    role_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type AdminsCountAggregateInputType = {
    id?: true
    email?: true
    citizen_id?: true
    masking_citizen_id?: true
    password?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    pic_url?: true
    permissions?: true
    role_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type AdminsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admins to aggregate.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admins
    **/
    _count?: true | AdminsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdminsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdminsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdminsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdminsMaxAggregateInputType
  }

  export type GetAdminsAggregateType<T extends AdminsAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmins]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmins[P]>
      : GetScalarType<T[P], AggregateAdmins[P]>
  }




  export type adminsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: adminsWhereInput
    orderBy?: adminsOrderByWithAggregationInput | adminsOrderByWithAggregationInput[]
    by: AdminsScalarFieldEnum[] | AdminsScalarFieldEnum
    having?: adminsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdminsCountAggregateInputType | true
    _avg?: AdminsAvgAggregateInputType
    _sum?: AdminsSumAggregateInputType
    _min?: AdminsMinAggregateInputType
    _max?: AdminsMaxAggregateInputType
  }

  export type AdminsGroupByOutputType = {
    id: string
    email: string | null
    citizen_id: string
    masking_citizen_id: string
    password: string
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    pic_url: string | null
    permissions: string[]
    role_id: number | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: AdminsCountAggregateOutputType | null
    _avg: AdminsAvgAggregateOutputType | null
    _sum: AdminsSumAggregateOutputType | null
    _min: AdminsMinAggregateOutputType | null
    _max: AdminsMaxAggregateOutputType | null
  }

  type GetAdminsGroupByPayload<T extends adminsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdminsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdminsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdminsGroupByOutputType[P]>
            : GetScalarType<T[P], AdminsGroupByOutputType[P]>
        }
      >
    >


  export type adminsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    citizen_id?: boolean
    masking_citizen_id?: boolean
    password?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    pic_url?: boolean
    permissions?: boolean
    role_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["admins"]>

  export type adminsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    citizen_id?: boolean
    masking_citizen_id?: boolean
    password?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    pic_url?: boolean
    permissions?: boolean
    role_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["admins"]>

  export type adminsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    citizen_id?: boolean
    masking_citizen_id?: boolean
    password?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    pic_url?: boolean
    permissions?: boolean
    role_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["admins"]>

  export type adminsSelectScalar = {
    id?: boolean
    email?: boolean
    citizen_id?: boolean
    masking_citizen_id?: boolean
    password?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    pic_url?: boolean
    permissions?: boolean
    role_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type adminsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "citizen_id" | "masking_citizen_id" | "password" | "title" | "first_name" | "middle_name" | "last_name" | "pic_url" | "permissions" | "role_id" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["admins"]>

  export type $adminsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admins"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string | null
      citizen_id: string
      masking_citizen_id: string
      password: string
      title: string | null
      first_name: string | null
      middle_name: string | null
      last_name: string | null
      pic_url: string | null
      permissions: string[]
      role_id: number | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["admins"]>
    composites: {}
  }

  type adminsGetPayload<S extends boolean | null | undefined | adminsDefaultArgs> = $Result.GetResult<Prisma.$adminsPayload, S>

  type adminsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<adminsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdminsCountAggregateInputType | true
    }

  export interface adminsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admins'], meta: { name: 'admins' } }
    /**
     * Find zero or one Admins that matches the filter.
     * @param {adminsFindUniqueArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends adminsFindUniqueArgs>(args: SelectSubset<T, adminsFindUniqueArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admins that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {adminsFindUniqueOrThrowArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends adminsFindUniqueOrThrowArgs>(args: SelectSubset<T, adminsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsFindFirstArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends adminsFindFirstArgs>(args?: SelectSubset<T, adminsFindFirstArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admins that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsFindFirstOrThrowArgs} args - Arguments to find a Admins
     * @example
     * // Get one Admins
     * const admins = await prisma.admins.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends adminsFindFirstOrThrowArgs>(args?: SelectSubset<T, adminsFindFirstOrThrowArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admins
     * const admins = await prisma.admins.findMany()
     * 
     * // Get first 10 Admins
     * const admins = await prisma.admins.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adminsWithIdOnly = await prisma.admins.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends adminsFindManyArgs>(args?: SelectSubset<T, adminsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admins.
     * @param {adminsCreateArgs} args - Arguments to create a Admins.
     * @example
     * // Create one Admins
     * const Admins = await prisma.admins.create({
     *   data: {
     *     // ... data to create a Admins
     *   }
     * })
     * 
     */
    create<T extends adminsCreateArgs>(args: SelectSubset<T, adminsCreateArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admins.
     * @param {adminsCreateManyArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admins = await prisma.admins.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends adminsCreateManyArgs>(args?: SelectSubset<T, adminsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admins and returns the data saved in the database.
     * @param {adminsCreateManyAndReturnArgs} args - Arguments to create many Admins.
     * @example
     * // Create many Admins
     * const admins = await prisma.admins.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admins and only return the `id`
     * const adminsWithIdOnly = await prisma.admins.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends adminsCreateManyAndReturnArgs>(args?: SelectSubset<T, adminsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admins.
     * @param {adminsDeleteArgs} args - Arguments to delete one Admins.
     * @example
     * // Delete one Admins
     * const Admins = await prisma.admins.delete({
     *   where: {
     *     // ... filter to delete one Admins
     *   }
     * })
     * 
     */
    delete<T extends adminsDeleteArgs>(args: SelectSubset<T, adminsDeleteArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admins.
     * @param {adminsUpdateArgs} args - Arguments to update one Admins.
     * @example
     * // Update one Admins
     * const admins = await prisma.admins.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends adminsUpdateArgs>(args: SelectSubset<T, adminsUpdateArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admins.
     * @param {adminsDeleteManyArgs} args - Arguments to filter Admins to delete.
     * @example
     * // Delete a few Admins
     * const { count } = await prisma.admins.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends adminsDeleteManyArgs>(args?: SelectSubset<T, adminsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admins
     * const admins = await prisma.admins.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends adminsUpdateManyArgs>(args: SelectSubset<T, adminsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admins and returns the data updated in the database.
     * @param {adminsUpdateManyAndReturnArgs} args - Arguments to update many Admins.
     * @example
     * // Update many Admins
     * const admins = await prisma.admins.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admins and only return the `id`
     * const adminsWithIdOnly = await prisma.admins.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends adminsUpdateManyAndReturnArgs>(args: SelectSubset<T, adminsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admins.
     * @param {adminsUpsertArgs} args - Arguments to update or create a Admins.
     * @example
     * // Update or create a Admins
     * const admins = await prisma.admins.upsert({
     *   create: {
     *     // ... data to create a Admins
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admins we want to update
     *   }
     * })
     */
    upsert<T extends adminsUpsertArgs>(args: SelectSubset<T, adminsUpsertArgs<ExtArgs>>): Prisma__adminsClient<$Result.GetResult<Prisma.$adminsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsCountArgs} args - Arguments to filter Admins to count.
     * @example
     * // Count the number of Admins
     * const count = await prisma.admins.count({
     *   where: {
     *     // ... the filter for the Admins we want to count
     *   }
     * })
    **/
    count<T extends adminsCountArgs>(
      args?: Subset<T, adminsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdminsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdminsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdminsAggregateArgs>(args: Subset<T, AdminsAggregateArgs>): Prisma.PrismaPromise<GetAdminsAggregateType<T>>

    /**
     * Group by Admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {adminsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends adminsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: adminsGroupByArgs['orderBy'] }
        : { orderBy?: adminsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, adminsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdminsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admins model
   */
  readonly fields: adminsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admins.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__adminsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admins model
   */
  interface adminsFieldRefs {
    readonly id: FieldRef<"admins", 'String'>
    readonly email: FieldRef<"admins", 'String'>
    readonly citizen_id: FieldRef<"admins", 'String'>
    readonly masking_citizen_id: FieldRef<"admins", 'String'>
    readonly password: FieldRef<"admins", 'String'>
    readonly title: FieldRef<"admins", 'String'>
    readonly first_name: FieldRef<"admins", 'String'>
    readonly middle_name: FieldRef<"admins", 'String'>
    readonly last_name: FieldRef<"admins", 'String'>
    readonly pic_url: FieldRef<"admins", 'String'>
    readonly permissions: FieldRef<"admins", 'String[]'>
    readonly role_id: FieldRef<"admins", 'Int'>
    readonly created_at: FieldRef<"admins", 'DateTime'>
    readonly created_by_id: FieldRef<"admins", 'String'>
    readonly created_by: FieldRef<"admins", 'String'>
    readonly updated_at: FieldRef<"admins", 'DateTime'>
    readonly updated_by_id: FieldRef<"admins", 'String'>
    readonly updated_by: FieldRef<"admins", 'String'>
  }
    

  // Custom InputTypes
  /**
   * admins findUnique
   */
  export type adminsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where: adminsWhereUniqueInput
  }

  /**
   * admins findUniqueOrThrow
   */
  export type adminsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where: adminsWhereUniqueInput
  }

  /**
   * admins findFirst
   */
  export type adminsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admins.
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admins.
     */
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
  }

  /**
   * admins findFirstOrThrow
   */
  export type adminsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admins.
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admins.
     */
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
  }

  /**
   * admins findMany
   */
  export type adminsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Filter, which admins to fetch.
     */
    where?: adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admins to fetch.
     */
    orderBy?: adminsOrderByWithRelationInput | adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admins.
     */
    cursor?: adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admins.
     */
    skip?: number
    distinct?: AdminsScalarFieldEnum | AdminsScalarFieldEnum[]
  }

  /**
   * admins create
   */
  export type adminsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The data needed to create a admins.
     */
    data: XOR<adminsCreateInput, adminsUncheckedCreateInput>
  }

  /**
   * admins createMany
   */
  export type adminsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admins.
     */
    data: adminsCreateManyInput | adminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admins createManyAndReturn
   */
  export type adminsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The data used to create many admins.
     */
    data: adminsCreateManyInput | adminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admins update
   */
  export type adminsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The data needed to update a admins.
     */
    data: XOR<adminsUpdateInput, adminsUncheckedUpdateInput>
    /**
     * Choose, which admins to update.
     */
    where: adminsWhereUniqueInput
  }

  /**
   * admins updateMany
   */
  export type adminsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admins.
     */
    data: XOR<adminsUpdateManyMutationInput, adminsUncheckedUpdateManyInput>
    /**
     * Filter which admins to update
     */
    where?: adminsWhereInput
    /**
     * Limit how many admins to update.
     */
    limit?: number
  }

  /**
   * admins updateManyAndReturn
   */
  export type adminsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The data used to update admins.
     */
    data: XOR<adminsUpdateManyMutationInput, adminsUncheckedUpdateManyInput>
    /**
     * Filter which admins to update
     */
    where?: adminsWhereInput
    /**
     * Limit how many admins to update.
     */
    limit?: number
  }

  /**
   * admins upsert
   */
  export type adminsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * The filter to search for the admins to update in case it exists.
     */
    where: adminsWhereUniqueInput
    /**
     * In case the admins found by the `where` argument doesn't exist, create a new admins with this data.
     */
    create: XOR<adminsCreateInput, adminsUncheckedCreateInput>
    /**
     * In case the admins was found with the provided `where` argument, update it with this data.
     */
    update: XOR<adminsUpdateInput, adminsUncheckedUpdateInput>
  }

  /**
   * admins delete
   */
  export type adminsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
    /**
     * Filter which admins to delete.
     */
    where: adminsWhereUniqueInput
  }

  /**
   * admins deleteMany
   */
  export type adminsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admins to delete
     */
    where?: adminsWhereInput
    /**
     * Limit how many admins to delete.
     */
    limit?: number
  }

  /**
   * admins without action
   */
  export type adminsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admins
     */
    select?: adminsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admins
     */
    omit?: adminsOmit<ExtArgs> | null
  }


  /**
   * Model buyer_attachments
   */

  export type AggregateBuyer_attachments = {
    _count: Buyer_attachmentsCountAggregateOutputType | null
    _min: Buyer_attachmentsMinAggregateOutputType | null
    _max: Buyer_attachmentsMaxAggregateOutputType | null
  }

  export type Buyer_attachmentsMinAggregateOutputType = {
    id: string | null
    buyer_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Buyer_attachmentsMaxAggregateOutputType = {
    id: string | null
    buyer_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Buyer_attachmentsCountAggregateOutputType = {
    id: number
    buyer_id: number
    file_name: number
    file_path: number
    is_public: number
    content_type: number
    description: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Buyer_attachmentsMinAggregateInputType = {
    id?: true
    buyer_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Buyer_attachmentsMaxAggregateInputType = {
    id?: true
    buyer_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Buyer_attachmentsCountAggregateInputType = {
    id?: true
    buyer_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Buyer_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buyer_attachments to aggregate.
     */
    where?: buyer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyer_attachments to fetch.
     */
    orderBy?: buyer_attachmentsOrderByWithRelationInput | buyer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: buyer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyer_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned buyer_attachments
    **/
    _count?: true | Buyer_attachmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Buyer_attachmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Buyer_attachmentsMaxAggregateInputType
  }

  export type GetBuyer_attachmentsAggregateType<T extends Buyer_attachmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateBuyer_attachments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuyer_attachments[P]>
      : GetScalarType<T[P], AggregateBuyer_attachments[P]>
  }




  export type buyer_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: buyer_attachmentsWhereInput
    orderBy?: buyer_attachmentsOrderByWithAggregationInput | buyer_attachmentsOrderByWithAggregationInput[]
    by: Buyer_attachmentsScalarFieldEnum[] | Buyer_attachmentsScalarFieldEnum
    having?: buyer_attachmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Buyer_attachmentsCountAggregateInputType | true
    _min?: Buyer_attachmentsMinAggregateInputType
    _max?: Buyer_attachmentsMaxAggregateInputType
  }

  export type Buyer_attachmentsGroupByOutputType = {
    id: string
    buyer_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Buyer_attachmentsCountAggregateOutputType | null
    _min: Buyer_attachmentsMinAggregateOutputType | null
    _max: Buyer_attachmentsMaxAggregateOutputType | null
  }

  type GetBuyer_attachmentsGroupByPayload<T extends buyer_attachmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Buyer_attachmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Buyer_attachmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Buyer_attachmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Buyer_attachmentsGroupByOutputType[P]>
        }
      >
    >


  export type buyer_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    buyers?: boolean | buyersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buyer_attachments"]>

  export type buyer_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    buyers?: boolean | buyersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buyer_attachments"]>

  export type buyer_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    buyers?: boolean | buyersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buyer_attachments"]>

  export type buyer_attachmentsSelectScalar = {
    id?: boolean
    buyer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type buyer_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "buyer_id" | "file_name" | "file_path" | "is_public" | "content_type" | "description" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["buyer_attachments"]>
  export type buyer_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyers?: boolean | buyersDefaultArgs<ExtArgs>
  }
  export type buyer_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyers?: boolean | buyersDefaultArgs<ExtArgs>
  }
  export type buyer_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyers?: boolean | buyersDefaultArgs<ExtArgs>
  }

  export type $buyer_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "buyer_attachments"
    objects: {
      buyers: Prisma.$buyersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      buyer_id: string
      file_name: string
      file_path: string
      is_public: boolean
      content_type: string
      description: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["buyer_attachments"]>
    composites: {}
  }

  type buyer_attachmentsGetPayload<S extends boolean | null | undefined | buyer_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$buyer_attachmentsPayload, S>

  type buyer_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<buyer_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Buyer_attachmentsCountAggregateInputType | true
    }

  export interface buyer_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['buyer_attachments'], meta: { name: 'buyer_attachments' } }
    /**
     * Find zero or one Buyer_attachments that matches the filter.
     * @param {buyer_attachmentsFindUniqueArgs} args - Arguments to find a Buyer_attachments
     * @example
     * // Get one Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends buyer_attachmentsFindUniqueArgs>(args: SelectSubset<T, buyer_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Buyer_attachments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {buyer_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Buyer_attachments
     * @example
     * // Get one Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends buyer_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, buyer_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Buyer_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyer_attachmentsFindFirstArgs} args - Arguments to find a Buyer_attachments
     * @example
     * // Get one Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends buyer_attachmentsFindFirstArgs>(args?: SelectSubset<T, buyer_attachmentsFindFirstArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Buyer_attachments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyer_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Buyer_attachments
     * @example
     * // Get one Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends buyer_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, buyer_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Buyer_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyer_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.findMany()
     * 
     * // Get first 10 Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const buyer_attachmentsWithIdOnly = await prisma.buyer_attachments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends buyer_attachmentsFindManyArgs>(args?: SelectSubset<T, buyer_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Buyer_attachments.
     * @param {buyer_attachmentsCreateArgs} args - Arguments to create a Buyer_attachments.
     * @example
     * // Create one Buyer_attachments
     * const Buyer_attachments = await prisma.buyer_attachments.create({
     *   data: {
     *     // ... data to create a Buyer_attachments
     *   }
     * })
     * 
     */
    create<T extends buyer_attachmentsCreateArgs>(args: SelectSubset<T, buyer_attachmentsCreateArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Buyer_attachments.
     * @param {buyer_attachmentsCreateManyArgs} args - Arguments to create many Buyer_attachments.
     * @example
     * // Create many Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends buyer_attachmentsCreateManyArgs>(args?: SelectSubset<T, buyer_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Buyer_attachments and returns the data saved in the database.
     * @param {buyer_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Buyer_attachments.
     * @example
     * // Create many Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Buyer_attachments and only return the `id`
     * const buyer_attachmentsWithIdOnly = await prisma.buyer_attachments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends buyer_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, buyer_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Buyer_attachments.
     * @param {buyer_attachmentsDeleteArgs} args - Arguments to delete one Buyer_attachments.
     * @example
     * // Delete one Buyer_attachments
     * const Buyer_attachments = await prisma.buyer_attachments.delete({
     *   where: {
     *     // ... filter to delete one Buyer_attachments
     *   }
     * })
     * 
     */
    delete<T extends buyer_attachmentsDeleteArgs>(args: SelectSubset<T, buyer_attachmentsDeleteArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Buyer_attachments.
     * @param {buyer_attachmentsUpdateArgs} args - Arguments to update one Buyer_attachments.
     * @example
     * // Update one Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends buyer_attachmentsUpdateArgs>(args: SelectSubset<T, buyer_attachmentsUpdateArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Buyer_attachments.
     * @param {buyer_attachmentsDeleteManyArgs} args - Arguments to filter Buyer_attachments to delete.
     * @example
     * // Delete a few Buyer_attachments
     * const { count } = await prisma.buyer_attachments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends buyer_attachmentsDeleteManyArgs>(args?: SelectSubset<T, buyer_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buyer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyer_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends buyer_attachmentsUpdateManyArgs>(args: SelectSubset<T, buyer_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buyer_attachments and returns the data updated in the database.
     * @param {buyer_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Buyer_attachments.
     * @example
     * // Update many Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Buyer_attachments and only return the `id`
     * const buyer_attachmentsWithIdOnly = await prisma.buyer_attachments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends buyer_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, buyer_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Buyer_attachments.
     * @param {buyer_attachmentsUpsertArgs} args - Arguments to update or create a Buyer_attachments.
     * @example
     * // Update or create a Buyer_attachments
     * const buyer_attachments = await prisma.buyer_attachments.upsert({
     *   create: {
     *     // ... data to create a Buyer_attachments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Buyer_attachments we want to update
     *   }
     * })
     */
    upsert<T extends buyer_attachmentsUpsertArgs>(args: SelectSubset<T, buyer_attachmentsUpsertArgs<ExtArgs>>): Prisma__buyer_attachmentsClient<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Buyer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyer_attachmentsCountArgs} args - Arguments to filter Buyer_attachments to count.
     * @example
     * // Count the number of Buyer_attachments
     * const count = await prisma.buyer_attachments.count({
     *   where: {
     *     // ... the filter for the Buyer_attachments we want to count
     *   }
     * })
    **/
    count<T extends buyer_attachmentsCountArgs>(
      args?: Subset<T, buyer_attachmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Buyer_attachmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Buyer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buyer_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Buyer_attachmentsAggregateArgs>(args: Subset<T, Buyer_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetBuyer_attachmentsAggregateType<T>>

    /**
     * Group by Buyer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyer_attachmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends buyer_attachmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: buyer_attachmentsGroupByArgs['orderBy'] }
        : { orderBy?: buyer_attachmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, buyer_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuyer_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the buyer_attachments model
   */
  readonly fields: buyer_attachmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for buyer_attachments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__buyer_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buyers<T extends buyersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, buyersDefaultArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the buyer_attachments model
   */
  interface buyer_attachmentsFieldRefs {
    readonly id: FieldRef<"buyer_attachments", 'String'>
    readonly buyer_id: FieldRef<"buyer_attachments", 'String'>
    readonly file_name: FieldRef<"buyer_attachments", 'String'>
    readonly file_path: FieldRef<"buyer_attachments", 'String'>
    readonly is_public: FieldRef<"buyer_attachments", 'Boolean'>
    readonly content_type: FieldRef<"buyer_attachments", 'String'>
    readonly description: FieldRef<"buyer_attachments", 'String'>
    readonly created_at: FieldRef<"buyer_attachments", 'DateTime'>
    readonly created_by_id: FieldRef<"buyer_attachments", 'String'>
    readonly created_by: FieldRef<"buyer_attachments", 'String'>
    readonly updated_at: FieldRef<"buyer_attachments", 'DateTime'>
    readonly updated_by_id: FieldRef<"buyer_attachments", 'String'>
    readonly updated_by: FieldRef<"buyer_attachments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * buyer_attachments findUnique
   */
  export type buyer_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which buyer_attachments to fetch.
     */
    where: buyer_attachmentsWhereUniqueInput
  }

  /**
   * buyer_attachments findUniqueOrThrow
   */
  export type buyer_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which buyer_attachments to fetch.
     */
    where: buyer_attachmentsWhereUniqueInput
  }

  /**
   * buyer_attachments findFirst
   */
  export type buyer_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which buyer_attachments to fetch.
     */
    where?: buyer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyer_attachments to fetch.
     */
    orderBy?: buyer_attachmentsOrderByWithRelationInput | buyer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buyer_attachments.
     */
    cursor?: buyer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyer_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buyer_attachments.
     */
    distinct?: Buyer_attachmentsScalarFieldEnum | Buyer_attachmentsScalarFieldEnum[]
  }

  /**
   * buyer_attachments findFirstOrThrow
   */
  export type buyer_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which buyer_attachments to fetch.
     */
    where?: buyer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyer_attachments to fetch.
     */
    orderBy?: buyer_attachmentsOrderByWithRelationInput | buyer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buyer_attachments.
     */
    cursor?: buyer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyer_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buyer_attachments.
     */
    distinct?: Buyer_attachmentsScalarFieldEnum | Buyer_attachmentsScalarFieldEnum[]
  }

  /**
   * buyer_attachments findMany
   */
  export type buyer_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which buyer_attachments to fetch.
     */
    where?: buyer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyer_attachments to fetch.
     */
    orderBy?: buyer_attachmentsOrderByWithRelationInput | buyer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing buyer_attachments.
     */
    cursor?: buyer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyer_attachments.
     */
    skip?: number
    distinct?: Buyer_attachmentsScalarFieldEnum | Buyer_attachmentsScalarFieldEnum[]
  }

  /**
   * buyer_attachments create
   */
  export type buyer_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a buyer_attachments.
     */
    data: XOR<buyer_attachmentsCreateInput, buyer_attachmentsUncheckedCreateInput>
  }

  /**
   * buyer_attachments createMany
   */
  export type buyer_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many buyer_attachments.
     */
    data: buyer_attachmentsCreateManyInput | buyer_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * buyer_attachments createManyAndReturn
   */
  export type buyer_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to create many buyer_attachments.
     */
    data: buyer_attachmentsCreateManyInput | buyer_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * buyer_attachments update
   */
  export type buyer_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a buyer_attachments.
     */
    data: XOR<buyer_attachmentsUpdateInput, buyer_attachmentsUncheckedUpdateInput>
    /**
     * Choose, which buyer_attachments to update.
     */
    where: buyer_attachmentsWhereUniqueInput
  }

  /**
   * buyer_attachments updateMany
   */
  export type buyer_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update buyer_attachments.
     */
    data: XOR<buyer_attachmentsUpdateManyMutationInput, buyer_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which buyer_attachments to update
     */
    where?: buyer_attachmentsWhereInput
    /**
     * Limit how many buyer_attachments to update.
     */
    limit?: number
  }

  /**
   * buyer_attachments updateManyAndReturn
   */
  export type buyer_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to update buyer_attachments.
     */
    data: XOR<buyer_attachmentsUpdateManyMutationInput, buyer_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which buyer_attachments to update
     */
    where?: buyer_attachmentsWhereInput
    /**
     * Limit how many buyer_attachments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * buyer_attachments upsert
   */
  export type buyer_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the buyer_attachments to update in case it exists.
     */
    where: buyer_attachmentsWhereUniqueInput
    /**
     * In case the buyer_attachments found by the `where` argument doesn't exist, create a new buyer_attachments with this data.
     */
    create: XOR<buyer_attachmentsCreateInput, buyer_attachmentsUncheckedCreateInput>
    /**
     * In case the buyer_attachments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<buyer_attachmentsUpdateInput, buyer_attachmentsUncheckedUpdateInput>
  }

  /**
   * buyer_attachments delete
   */
  export type buyer_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter which buyer_attachments to delete.
     */
    where: buyer_attachmentsWhereUniqueInput
  }

  /**
   * buyer_attachments deleteMany
   */
  export type buyer_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buyer_attachments to delete
     */
    where?: buyer_attachmentsWhereInput
    /**
     * Limit how many buyer_attachments to delete.
     */
    limit?: number
  }

  /**
   * buyer_attachments without action
   */
  export type buyer_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
  }


  /**
   * Model buyers
   */

  export type AggregateBuyers = {
    _count: BuyersCountAggregateOutputType | null
    _min: BuyersMinAggregateOutputType | null
    _max: BuyersMaxAggregateOutputType | null
  }

  export type BuyersMinAggregateOutputType = {
    id: string | null
    buyer_code: string | null
    company_name: string | null
    comp_registration_id: string | null
    country: string | null
    address: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    phone_number: string | null
    email: string | null
    whatsapp: string | null
    wechat: string | null
    line_id: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    country_code: string | null
  }

  export type BuyersMaxAggregateOutputType = {
    id: string | null
    buyer_code: string | null
    company_name: string | null
    comp_registration_id: string | null
    country: string | null
    address: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    phone_number: string | null
    email: string | null
    whatsapp: string | null
    wechat: string | null
    line_id: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    country_code: string | null
  }

  export type BuyersCountAggregateOutputType = {
    id: number
    buyer_code: number
    company_name: number
    comp_registration_id: number
    country: number
    address: number
    title: number
    first_name: number
    middle_name: number
    last_name: number
    phone_number: number
    email: number
    whatsapp: number
    wechat: number
    line_id: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    country_code: number
    _all: number
  }


  export type BuyersMinAggregateInputType = {
    id?: true
    buyer_code?: true
    company_name?: true
    comp_registration_id?: true
    country?: true
    address?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    phone_number?: true
    email?: true
    whatsapp?: true
    wechat?: true
    line_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    country_code?: true
  }

  export type BuyersMaxAggregateInputType = {
    id?: true
    buyer_code?: true
    company_name?: true
    comp_registration_id?: true
    country?: true
    address?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    phone_number?: true
    email?: true
    whatsapp?: true
    wechat?: true
    line_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    country_code?: true
  }

  export type BuyersCountAggregateInputType = {
    id?: true
    buyer_code?: true
    company_name?: true
    comp_registration_id?: true
    country?: true
    address?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    phone_number?: true
    email?: true
    whatsapp?: true
    wechat?: true
    line_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    country_code?: true
    _all?: true
  }

  export type BuyersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buyers to aggregate.
     */
    where?: buyersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyers to fetch.
     */
    orderBy?: buyersOrderByWithRelationInput | buyersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: buyersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned buyers
    **/
    _count?: true | BuyersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BuyersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BuyersMaxAggregateInputType
  }

  export type GetBuyersAggregateType<T extends BuyersAggregateArgs> = {
        [P in keyof T & keyof AggregateBuyers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuyers[P]>
      : GetScalarType<T[P], AggregateBuyers[P]>
  }




  export type buyersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: buyersWhereInput
    orderBy?: buyersOrderByWithAggregationInput | buyersOrderByWithAggregationInput[]
    by: BuyersScalarFieldEnum[] | BuyersScalarFieldEnum
    having?: buyersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BuyersCountAggregateInputType | true
    _min?: BuyersMinAggregateInputType
    _max?: BuyersMaxAggregateInputType
  }

  export type BuyersGroupByOutputType = {
    id: string
    buyer_code: string
    company_name: string
    comp_registration_id: string
    country: string
    address: string
    title: string
    first_name: string
    middle_name: string | null
    last_name: string
    phone_number: string
    email: string | null
    whatsapp: string | null
    wechat: string | null
    line_id: string | null
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    country_code: string
    _count: BuyersCountAggregateOutputType | null
    _min: BuyersMinAggregateOutputType | null
    _max: BuyersMaxAggregateOutputType | null
  }

  type GetBuyersGroupByPayload<T extends buyersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BuyersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BuyersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BuyersGroupByOutputType[P]>
            : GetScalarType<T[P], BuyersGroupByOutputType[P]>
        }
      >
    >


  export type buyersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_code?: boolean
    company_name?: boolean
    comp_registration_id?: boolean
    country?: boolean
    address?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    phone_number?: boolean
    email?: boolean
    whatsapp?: boolean
    wechat?: boolean
    line_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    country_code?: boolean
    buyer_attachments?: boolean | buyers$buyer_attachmentsArgs<ExtArgs>
    _count?: boolean | BuyersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buyers"]>

  export type buyersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_code?: boolean
    company_name?: boolean
    comp_registration_id?: boolean
    country?: boolean
    address?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    phone_number?: boolean
    email?: boolean
    whatsapp?: boolean
    wechat?: boolean
    line_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    country_code?: boolean
  }, ExtArgs["result"]["buyers"]>

  export type buyersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_code?: boolean
    company_name?: boolean
    comp_registration_id?: boolean
    country?: boolean
    address?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    phone_number?: boolean
    email?: boolean
    whatsapp?: boolean
    wechat?: boolean
    line_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    country_code?: boolean
  }, ExtArgs["result"]["buyers"]>

  export type buyersSelectScalar = {
    id?: boolean
    buyer_code?: boolean
    company_name?: boolean
    comp_registration_id?: boolean
    country?: boolean
    address?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    phone_number?: boolean
    email?: boolean
    whatsapp?: boolean
    wechat?: boolean
    line_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    country_code?: boolean
  }

  export type buyersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "buyer_code" | "company_name" | "comp_registration_id" | "country" | "address" | "title" | "first_name" | "middle_name" | "last_name" | "phone_number" | "email" | "whatsapp" | "wechat" | "line_id" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by" | "country_code", ExtArgs["result"]["buyers"]>
  export type buyersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buyer_attachments?: boolean | buyers$buyer_attachmentsArgs<ExtArgs>
    _count?: boolean | BuyersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type buyersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type buyersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $buyersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "buyers"
    objects: {
      buyer_attachments: Prisma.$buyer_attachmentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      buyer_code: string
      company_name: string
      comp_registration_id: string
      country: string
      address: string
      title: string
      first_name: string
      middle_name: string | null
      last_name: string
      phone_number: string
      email: string | null
      whatsapp: string | null
      wechat: string | null
      line_id: string | null
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
      country_code: string
    }, ExtArgs["result"]["buyers"]>
    composites: {}
  }

  type buyersGetPayload<S extends boolean | null | undefined | buyersDefaultArgs> = $Result.GetResult<Prisma.$buyersPayload, S>

  type buyersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<buyersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BuyersCountAggregateInputType | true
    }

  export interface buyersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['buyers'], meta: { name: 'buyers' } }
    /**
     * Find zero or one Buyers that matches the filter.
     * @param {buyersFindUniqueArgs} args - Arguments to find a Buyers
     * @example
     * // Get one Buyers
     * const buyers = await prisma.buyers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends buyersFindUniqueArgs>(args: SelectSubset<T, buyersFindUniqueArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Buyers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {buyersFindUniqueOrThrowArgs} args - Arguments to find a Buyers
     * @example
     * // Get one Buyers
     * const buyers = await prisma.buyers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends buyersFindUniqueOrThrowArgs>(args: SelectSubset<T, buyersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Buyers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyersFindFirstArgs} args - Arguments to find a Buyers
     * @example
     * // Get one Buyers
     * const buyers = await prisma.buyers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends buyersFindFirstArgs>(args?: SelectSubset<T, buyersFindFirstArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Buyers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyersFindFirstOrThrowArgs} args - Arguments to find a Buyers
     * @example
     * // Get one Buyers
     * const buyers = await prisma.buyers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends buyersFindFirstOrThrowArgs>(args?: SelectSubset<T, buyersFindFirstOrThrowArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Buyers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Buyers
     * const buyers = await prisma.buyers.findMany()
     * 
     * // Get first 10 Buyers
     * const buyers = await prisma.buyers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const buyersWithIdOnly = await prisma.buyers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends buyersFindManyArgs>(args?: SelectSubset<T, buyersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Buyers.
     * @param {buyersCreateArgs} args - Arguments to create a Buyers.
     * @example
     * // Create one Buyers
     * const Buyers = await prisma.buyers.create({
     *   data: {
     *     // ... data to create a Buyers
     *   }
     * })
     * 
     */
    create<T extends buyersCreateArgs>(args: SelectSubset<T, buyersCreateArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Buyers.
     * @param {buyersCreateManyArgs} args - Arguments to create many Buyers.
     * @example
     * // Create many Buyers
     * const buyers = await prisma.buyers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends buyersCreateManyArgs>(args?: SelectSubset<T, buyersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Buyers and returns the data saved in the database.
     * @param {buyersCreateManyAndReturnArgs} args - Arguments to create many Buyers.
     * @example
     * // Create many Buyers
     * const buyers = await prisma.buyers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Buyers and only return the `id`
     * const buyersWithIdOnly = await prisma.buyers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends buyersCreateManyAndReturnArgs>(args?: SelectSubset<T, buyersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Buyers.
     * @param {buyersDeleteArgs} args - Arguments to delete one Buyers.
     * @example
     * // Delete one Buyers
     * const Buyers = await prisma.buyers.delete({
     *   where: {
     *     // ... filter to delete one Buyers
     *   }
     * })
     * 
     */
    delete<T extends buyersDeleteArgs>(args: SelectSubset<T, buyersDeleteArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Buyers.
     * @param {buyersUpdateArgs} args - Arguments to update one Buyers.
     * @example
     * // Update one Buyers
     * const buyers = await prisma.buyers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends buyersUpdateArgs>(args: SelectSubset<T, buyersUpdateArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Buyers.
     * @param {buyersDeleteManyArgs} args - Arguments to filter Buyers to delete.
     * @example
     * // Delete a few Buyers
     * const { count } = await prisma.buyers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends buyersDeleteManyArgs>(args?: SelectSubset<T, buyersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buyers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Buyers
     * const buyers = await prisma.buyers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends buyersUpdateManyArgs>(args: SelectSubset<T, buyersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buyers and returns the data updated in the database.
     * @param {buyersUpdateManyAndReturnArgs} args - Arguments to update many Buyers.
     * @example
     * // Update many Buyers
     * const buyers = await prisma.buyers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Buyers and only return the `id`
     * const buyersWithIdOnly = await prisma.buyers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends buyersUpdateManyAndReturnArgs>(args: SelectSubset<T, buyersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Buyers.
     * @param {buyersUpsertArgs} args - Arguments to update or create a Buyers.
     * @example
     * // Update or create a Buyers
     * const buyers = await prisma.buyers.upsert({
     *   create: {
     *     // ... data to create a Buyers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Buyers we want to update
     *   }
     * })
     */
    upsert<T extends buyersUpsertArgs>(args: SelectSubset<T, buyersUpsertArgs<ExtArgs>>): Prisma__buyersClient<$Result.GetResult<Prisma.$buyersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Buyers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyersCountArgs} args - Arguments to filter Buyers to count.
     * @example
     * // Count the number of Buyers
     * const count = await prisma.buyers.count({
     *   where: {
     *     // ... the filter for the Buyers we want to count
     *   }
     * })
    **/
    count<T extends buyersCountArgs>(
      args?: Subset<T, buyersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BuyersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Buyers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuyersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BuyersAggregateArgs>(args: Subset<T, BuyersAggregateArgs>): Prisma.PrismaPromise<GetBuyersAggregateType<T>>

    /**
     * Group by Buyers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buyersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends buyersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: buyersGroupByArgs['orderBy'] }
        : { orderBy?: buyersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, buyersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuyersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the buyers model
   */
  readonly fields: buyersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for buyers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__buyersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buyer_attachments<T extends buyers$buyer_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, buyers$buyer_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buyer_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the buyers model
   */
  interface buyersFieldRefs {
    readonly id: FieldRef<"buyers", 'String'>
    readonly buyer_code: FieldRef<"buyers", 'String'>
    readonly company_name: FieldRef<"buyers", 'String'>
    readonly comp_registration_id: FieldRef<"buyers", 'String'>
    readonly country: FieldRef<"buyers", 'String'>
    readonly address: FieldRef<"buyers", 'String'>
    readonly title: FieldRef<"buyers", 'String'>
    readonly first_name: FieldRef<"buyers", 'String'>
    readonly middle_name: FieldRef<"buyers", 'String'>
    readonly last_name: FieldRef<"buyers", 'String'>
    readonly phone_number: FieldRef<"buyers", 'String'>
    readonly email: FieldRef<"buyers", 'String'>
    readonly whatsapp: FieldRef<"buyers", 'String'>
    readonly wechat: FieldRef<"buyers", 'String'>
    readonly line_id: FieldRef<"buyers", 'String'>
    readonly status: FieldRef<"buyers", 'String'>
    readonly created_at: FieldRef<"buyers", 'DateTime'>
    readonly created_by_id: FieldRef<"buyers", 'String'>
    readonly created_by: FieldRef<"buyers", 'String'>
    readonly updated_at: FieldRef<"buyers", 'DateTime'>
    readonly updated_by_id: FieldRef<"buyers", 'String'>
    readonly updated_by: FieldRef<"buyers", 'String'>
    readonly country_code: FieldRef<"buyers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * buyers findUnique
   */
  export type buyersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * Filter, which buyers to fetch.
     */
    where: buyersWhereUniqueInput
  }

  /**
   * buyers findUniqueOrThrow
   */
  export type buyersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * Filter, which buyers to fetch.
     */
    where: buyersWhereUniqueInput
  }

  /**
   * buyers findFirst
   */
  export type buyersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * Filter, which buyers to fetch.
     */
    where?: buyersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyers to fetch.
     */
    orderBy?: buyersOrderByWithRelationInput | buyersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buyers.
     */
    cursor?: buyersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buyers.
     */
    distinct?: BuyersScalarFieldEnum | BuyersScalarFieldEnum[]
  }

  /**
   * buyers findFirstOrThrow
   */
  export type buyersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * Filter, which buyers to fetch.
     */
    where?: buyersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyers to fetch.
     */
    orderBy?: buyersOrderByWithRelationInput | buyersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buyers.
     */
    cursor?: buyersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buyers.
     */
    distinct?: BuyersScalarFieldEnum | BuyersScalarFieldEnum[]
  }

  /**
   * buyers findMany
   */
  export type buyersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * Filter, which buyers to fetch.
     */
    where?: buyersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buyers to fetch.
     */
    orderBy?: buyersOrderByWithRelationInput | buyersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing buyers.
     */
    cursor?: buyersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buyers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buyers.
     */
    skip?: number
    distinct?: BuyersScalarFieldEnum | BuyersScalarFieldEnum[]
  }

  /**
   * buyers create
   */
  export type buyersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * The data needed to create a buyers.
     */
    data: XOR<buyersCreateInput, buyersUncheckedCreateInput>
  }

  /**
   * buyers createMany
   */
  export type buyersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many buyers.
     */
    data: buyersCreateManyInput | buyersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * buyers createManyAndReturn
   */
  export type buyersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * The data used to create many buyers.
     */
    data: buyersCreateManyInput | buyersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * buyers update
   */
  export type buyersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * The data needed to update a buyers.
     */
    data: XOR<buyersUpdateInput, buyersUncheckedUpdateInput>
    /**
     * Choose, which buyers to update.
     */
    where: buyersWhereUniqueInput
  }

  /**
   * buyers updateMany
   */
  export type buyersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update buyers.
     */
    data: XOR<buyersUpdateManyMutationInput, buyersUncheckedUpdateManyInput>
    /**
     * Filter which buyers to update
     */
    where?: buyersWhereInput
    /**
     * Limit how many buyers to update.
     */
    limit?: number
  }

  /**
   * buyers updateManyAndReturn
   */
  export type buyersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * The data used to update buyers.
     */
    data: XOR<buyersUpdateManyMutationInput, buyersUncheckedUpdateManyInput>
    /**
     * Filter which buyers to update
     */
    where?: buyersWhereInput
    /**
     * Limit how many buyers to update.
     */
    limit?: number
  }

  /**
   * buyers upsert
   */
  export type buyersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * The filter to search for the buyers to update in case it exists.
     */
    where: buyersWhereUniqueInput
    /**
     * In case the buyers found by the `where` argument doesn't exist, create a new buyers with this data.
     */
    create: XOR<buyersCreateInput, buyersUncheckedCreateInput>
    /**
     * In case the buyers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<buyersUpdateInput, buyersUncheckedUpdateInput>
  }

  /**
   * buyers delete
   */
  export type buyersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
    /**
     * Filter which buyers to delete.
     */
    where: buyersWhereUniqueInput
  }

  /**
   * buyers deleteMany
   */
  export type buyersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buyers to delete
     */
    where?: buyersWhereInput
    /**
     * Limit how many buyers to delete.
     */
    limit?: number
  }

  /**
   * buyers.buyer_attachments
   */
  export type buyers$buyer_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyer_attachments
     */
    select?: buyer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyer_attachments
     */
    omit?: buyer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyer_attachmentsInclude<ExtArgs> | null
    where?: buyer_attachmentsWhereInput
    orderBy?: buyer_attachmentsOrderByWithRelationInput | buyer_attachmentsOrderByWithRelationInput[]
    cursor?: buyer_attachmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Buyer_attachmentsScalarFieldEnum | Buyer_attachmentsScalarFieldEnum[]
  }

  /**
   * buyers without action
   */
  export type buyersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buyers
     */
    select?: buyersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the buyers
     */
    omit?: buyersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buyersInclude<ExtArgs> | null
  }


  /**
   * Model cattle_attachments
   */

  export type AggregateCattle_attachments = {
    _count: Cattle_attachmentsCountAggregateOutputType | null
    _min: Cattle_attachmentsMinAggregateOutputType | null
    _max: Cattle_attachmentsMaxAggregateOutputType | null
  }

  export type Cattle_attachmentsMinAggregateOutputType = {
    id: string | null
    cattle_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_attachmentsMaxAggregateOutputType = {
    id: string | null
    cattle_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_attachmentsCountAggregateOutputType = {
    id: number
    cattle_id: number
    file_name: number
    file_path: number
    is_public: number
    content_type: number
    description: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_attachmentsMinAggregateInputType = {
    id?: true
    cattle_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_attachmentsMaxAggregateInputType = {
    id?: true
    cattle_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_attachmentsCountAggregateInputType = {
    id?: true
    cattle_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_attachments to aggregate.
     */
    where?: cattle_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_attachments to fetch.
     */
    orderBy?: cattle_attachmentsOrderByWithRelationInput | cattle_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_attachments
    **/
    _count?: true | Cattle_attachmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_attachmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_attachmentsMaxAggregateInputType
  }

  export type GetCattle_attachmentsAggregateType<T extends Cattle_attachmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_attachments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_attachments[P]>
      : GetScalarType<T[P], AggregateCattle_attachments[P]>
  }




  export type cattle_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_attachmentsWhereInput
    orderBy?: cattle_attachmentsOrderByWithAggregationInput | cattle_attachmentsOrderByWithAggregationInput[]
    by: Cattle_attachmentsScalarFieldEnum[] | Cattle_attachmentsScalarFieldEnum
    having?: cattle_attachmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_attachmentsCountAggregateInputType | true
    _min?: Cattle_attachmentsMinAggregateInputType
    _max?: Cattle_attachmentsMaxAggregateInputType
  }

  export type Cattle_attachmentsGroupByOutputType = {
    id: string
    cattle_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_attachmentsCountAggregateOutputType | null
    _min: Cattle_attachmentsMinAggregateOutputType | null
    _max: Cattle_attachmentsMaxAggregateOutputType | null
  }

  type GetCattle_attachmentsGroupByPayload<T extends cattle_attachmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_attachmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_attachmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_attachmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_attachmentsGroupByOutputType[P]>
        }
      >
    >


  export type cattle_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_attachments"]>

  export type cattle_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_attachments"]>

  export type cattle_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_attachments"]>

  export type cattle_attachmentsSelectScalar = {
    id?: boolean
    cattle_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cattle_id" | "file_name" | "file_path" | "is_public" | "content_type" | "description" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_attachments"]>
  export type cattle_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }
  export type cattle_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }
  export type cattle_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }

  export type $cattle_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_attachments"
    objects: {
      cattles: Prisma.$cattlesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cattle_id: string
      file_name: string
      file_path: string
      is_public: boolean
      content_type: string
      description: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_attachments"]>
    composites: {}
  }

  type cattle_attachmentsGetPayload<S extends boolean | null | undefined | cattle_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$cattle_attachmentsPayload, S>

  type cattle_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_attachmentsCountAggregateInputType | true
    }

  export interface cattle_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_attachments'], meta: { name: 'cattle_attachments' } }
    /**
     * Find zero or one Cattle_attachments that matches the filter.
     * @param {cattle_attachmentsFindUniqueArgs} args - Arguments to find a Cattle_attachments
     * @example
     * // Get one Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_attachmentsFindUniqueArgs>(args: SelectSubset<T, cattle_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_attachments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Cattle_attachments
     * @example
     * // Get one Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_attachmentsFindFirstArgs} args - Arguments to find a Cattle_attachments
     * @example
     * // Get one Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_attachmentsFindFirstArgs>(args?: SelectSubset<T, cattle_attachmentsFindFirstArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_attachments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Cattle_attachments
     * @example
     * // Get one Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.findMany()
     * 
     * // Get first 10 Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_attachmentsWithIdOnly = await prisma.cattle_attachments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_attachmentsFindManyArgs>(args?: SelectSubset<T, cattle_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_attachments.
     * @param {cattle_attachmentsCreateArgs} args - Arguments to create a Cattle_attachments.
     * @example
     * // Create one Cattle_attachments
     * const Cattle_attachments = await prisma.cattle_attachments.create({
     *   data: {
     *     // ... data to create a Cattle_attachments
     *   }
     * })
     * 
     */
    create<T extends cattle_attachmentsCreateArgs>(args: SelectSubset<T, cattle_attachmentsCreateArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_attachments.
     * @param {cattle_attachmentsCreateManyArgs} args - Arguments to create many Cattle_attachments.
     * @example
     * // Create many Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_attachmentsCreateManyArgs>(args?: SelectSubset<T, cattle_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_attachments and returns the data saved in the database.
     * @param {cattle_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Cattle_attachments.
     * @example
     * // Create many Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_attachments and only return the `id`
     * const cattle_attachmentsWithIdOnly = await prisma.cattle_attachments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_attachments.
     * @param {cattle_attachmentsDeleteArgs} args - Arguments to delete one Cattle_attachments.
     * @example
     * // Delete one Cattle_attachments
     * const Cattle_attachments = await prisma.cattle_attachments.delete({
     *   where: {
     *     // ... filter to delete one Cattle_attachments
     *   }
     * })
     * 
     */
    delete<T extends cattle_attachmentsDeleteArgs>(args: SelectSubset<T, cattle_attachmentsDeleteArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_attachments.
     * @param {cattle_attachmentsUpdateArgs} args - Arguments to update one Cattle_attachments.
     * @example
     * // Update one Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_attachmentsUpdateArgs>(args: SelectSubset<T, cattle_attachmentsUpdateArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_attachments.
     * @param {cattle_attachmentsDeleteManyArgs} args - Arguments to filter Cattle_attachments to delete.
     * @example
     * // Delete a few Cattle_attachments
     * const { count } = await prisma.cattle_attachments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_attachmentsDeleteManyArgs>(args?: SelectSubset<T, cattle_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_attachmentsUpdateManyArgs>(args: SelectSubset<T, cattle_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_attachments and returns the data updated in the database.
     * @param {cattle_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Cattle_attachments.
     * @example
     * // Update many Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_attachments and only return the `id`
     * const cattle_attachmentsWithIdOnly = await prisma.cattle_attachments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_attachments.
     * @param {cattle_attachmentsUpsertArgs} args - Arguments to update or create a Cattle_attachments.
     * @example
     * // Update or create a Cattle_attachments
     * const cattle_attachments = await prisma.cattle_attachments.upsert({
     *   create: {
     *     // ... data to create a Cattle_attachments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_attachments we want to update
     *   }
     * })
     */
    upsert<T extends cattle_attachmentsUpsertArgs>(args: SelectSubset<T, cattle_attachmentsUpsertArgs<ExtArgs>>): Prisma__cattle_attachmentsClient<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_attachmentsCountArgs} args - Arguments to filter Cattle_attachments to count.
     * @example
     * // Count the number of Cattle_attachments
     * const count = await prisma.cattle_attachments.count({
     *   where: {
     *     // ... the filter for the Cattle_attachments we want to count
     *   }
     * })
    **/
    count<T extends cattle_attachmentsCountArgs>(
      args?: Subset<T, cattle_attachmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_attachmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_attachmentsAggregateArgs>(args: Subset<T, Cattle_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetCattle_attachmentsAggregateType<T>>

    /**
     * Group by Cattle_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_attachmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_attachmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_attachmentsGroupByArgs['orderBy'] }
        : { orderBy?: cattle_attachmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_attachments model
   */
  readonly fields: cattle_attachmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_attachments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattles<T extends cattlesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cattlesDefaultArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_attachments model
   */
  interface cattle_attachmentsFieldRefs {
    readonly id: FieldRef<"cattle_attachments", 'String'>
    readonly cattle_id: FieldRef<"cattle_attachments", 'String'>
    readonly file_name: FieldRef<"cattle_attachments", 'String'>
    readonly file_path: FieldRef<"cattle_attachments", 'String'>
    readonly is_public: FieldRef<"cattle_attachments", 'Boolean'>
    readonly content_type: FieldRef<"cattle_attachments", 'String'>
    readonly description: FieldRef<"cattle_attachments", 'String'>
    readonly created_at: FieldRef<"cattle_attachments", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_attachments", 'String'>
    readonly created_by: FieldRef<"cattle_attachments", 'String'>
    readonly updated_at: FieldRef<"cattle_attachments", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_attachments", 'String'>
    readonly updated_by: FieldRef<"cattle_attachments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_attachments findUnique
   */
  export type cattle_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_attachments to fetch.
     */
    where: cattle_attachmentsWhereUniqueInput
  }

  /**
   * cattle_attachments findUniqueOrThrow
   */
  export type cattle_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_attachments to fetch.
     */
    where: cattle_attachmentsWhereUniqueInput
  }

  /**
   * cattle_attachments findFirst
   */
  export type cattle_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_attachments to fetch.
     */
    where?: cattle_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_attachments to fetch.
     */
    orderBy?: cattle_attachmentsOrderByWithRelationInput | cattle_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_attachments.
     */
    cursor?: cattle_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_attachments.
     */
    distinct?: Cattle_attachmentsScalarFieldEnum | Cattle_attachmentsScalarFieldEnum[]
  }

  /**
   * cattle_attachments findFirstOrThrow
   */
  export type cattle_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_attachments to fetch.
     */
    where?: cattle_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_attachments to fetch.
     */
    orderBy?: cattle_attachmentsOrderByWithRelationInput | cattle_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_attachments.
     */
    cursor?: cattle_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_attachments.
     */
    distinct?: Cattle_attachmentsScalarFieldEnum | Cattle_attachmentsScalarFieldEnum[]
  }

  /**
   * cattle_attachments findMany
   */
  export type cattle_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_attachments to fetch.
     */
    where?: cattle_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_attachments to fetch.
     */
    orderBy?: cattle_attachmentsOrderByWithRelationInput | cattle_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_attachments.
     */
    cursor?: cattle_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_attachments.
     */
    skip?: number
    distinct?: Cattle_attachmentsScalarFieldEnum | Cattle_attachmentsScalarFieldEnum[]
  }

  /**
   * cattle_attachments create
   */
  export type cattle_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a cattle_attachments.
     */
    data: XOR<cattle_attachmentsCreateInput, cattle_attachmentsUncheckedCreateInput>
  }

  /**
   * cattle_attachments createMany
   */
  export type cattle_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_attachments.
     */
    data: cattle_attachmentsCreateManyInput | cattle_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_attachments createManyAndReturn
   */
  export type cattle_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_attachments.
     */
    data: cattle_attachmentsCreateManyInput | cattle_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_attachments update
   */
  export type cattle_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a cattle_attachments.
     */
    data: XOR<cattle_attachmentsUpdateInput, cattle_attachmentsUncheckedUpdateInput>
    /**
     * Choose, which cattle_attachments to update.
     */
    where: cattle_attachmentsWhereUniqueInput
  }

  /**
   * cattle_attachments updateMany
   */
  export type cattle_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_attachments.
     */
    data: XOR<cattle_attachmentsUpdateManyMutationInput, cattle_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_attachments to update
     */
    where?: cattle_attachmentsWhereInput
    /**
     * Limit how many cattle_attachments to update.
     */
    limit?: number
  }

  /**
   * cattle_attachments updateManyAndReturn
   */
  export type cattle_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to update cattle_attachments.
     */
    data: XOR<cattle_attachmentsUpdateManyMutationInput, cattle_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_attachments to update
     */
    where?: cattle_attachmentsWhereInput
    /**
     * Limit how many cattle_attachments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_attachments upsert
   */
  export type cattle_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the cattle_attachments to update in case it exists.
     */
    where: cattle_attachmentsWhereUniqueInput
    /**
     * In case the cattle_attachments found by the `where` argument doesn't exist, create a new cattle_attachments with this data.
     */
    create: XOR<cattle_attachmentsCreateInput, cattle_attachmentsUncheckedCreateInput>
    /**
     * In case the cattle_attachments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_attachmentsUpdateInput, cattle_attachmentsUncheckedUpdateInput>
  }

  /**
   * cattle_attachments delete
   */
  export type cattle_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    /**
     * Filter which cattle_attachments to delete.
     */
    where: cattle_attachmentsWhereUniqueInput
  }

  /**
   * cattle_attachments deleteMany
   */
  export type cattle_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_attachments to delete
     */
    where?: cattle_attachmentsWhereInput
    /**
     * Limit how many cattle_attachments to delete.
     */
    limit?: number
  }

  /**
   * cattle_attachments without action
   */
  export type cattle_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
  }


  /**
   * Model cattle_breeds
   */

  export type AggregateCattle_breeds = {
    _count: Cattle_breedsCountAggregateOutputType | null
    _min: Cattle_breedsMinAggregateOutputType | null
    _max: Cattle_breedsMaxAggregateOutputType | null
  }

  export type Cattle_breedsMinAggregateOutputType = {
    id: string | null
    name_en: string | null
    name_th: string | null
    short_name: string | null
    remark: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_breedsMaxAggregateOutputType = {
    id: string | null
    name_en: string | null
    name_th: string | null
    short_name: string | null
    remark: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_breedsCountAggregateOutputType = {
    id: number
    name_en: number
    name_th: number
    short_name: number
    remark: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_breedsMinAggregateInputType = {
    id?: true
    name_en?: true
    name_th?: true
    short_name?: true
    remark?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_breedsMaxAggregateInputType = {
    id?: true
    name_en?: true
    name_th?: true
    short_name?: true
    remark?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_breedsCountAggregateInputType = {
    id?: true
    name_en?: true
    name_th?: true
    short_name?: true
    remark?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_breedsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_breeds to aggregate.
     */
    where?: cattle_breedsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_breeds to fetch.
     */
    orderBy?: cattle_breedsOrderByWithRelationInput | cattle_breedsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_breedsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_breeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_breeds
    **/
    _count?: true | Cattle_breedsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_breedsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_breedsMaxAggregateInputType
  }

  export type GetCattle_breedsAggregateType<T extends Cattle_breedsAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_breeds]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_breeds[P]>
      : GetScalarType<T[P], AggregateCattle_breeds[P]>
  }




  export type cattle_breedsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_breedsWhereInput
    orderBy?: cattle_breedsOrderByWithAggregationInput | cattle_breedsOrderByWithAggregationInput[]
    by: Cattle_breedsScalarFieldEnum[] | Cattle_breedsScalarFieldEnum
    having?: cattle_breedsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_breedsCountAggregateInputType | true
    _min?: Cattle_breedsMinAggregateInputType
    _max?: Cattle_breedsMaxAggregateInputType
  }

  export type Cattle_breedsGroupByOutputType = {
    id: string
    name_en: string
    name_th: string
    short_name: string
    remark: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_breedsCountAggregateOutputType | null
    _min: Cattle_breedsMinAggregateOutputType | null
    _max: Cattle_breedsMaxAggregateOutputType | null
  }

  type GetCattle_breedsGroupByPayload<T extends cattle_breedsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_breedsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_breedsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_breedsGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_breedsGroupByOutputType[P]>
        }
      >
    >


  export type cattle_breedsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    short_name?: boolean
    remark?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_breeds"]>

  export type cattle_breedsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    short_name?: boolean
    remark?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_breeds"]>

  export type cattle_breedsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    short_name?: boolean
    remark?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_breeds"]>

  export type cattle_breedsSelectScalar = {
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    short_name?: boolean
    remark?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_breedsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name_en" | "name_th" | "short_name" | "remark" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_breeds"]>

  export type $cattle_breedsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_breeds"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name_en: string
      name_th: string
      short_name: string
      remark: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_breeds"]>
    composites: {}
  }

  type cattle_breedsGetPayload<S extends boolean | null | undefined | cattle_breedsDefaultArgs> = $Result.GetResult<Prisma.$cattle_breedsPayload, S>

  type cattle_breedsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_breedsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_breedsCountAggregateInputType | true
    }

  export interface cattle_breedsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_breeds'], meta: { name: 'cattle_breeds' } }
    /**
     * Find zero or one Cattle_breeds that matches the filter.
     * @param {cattle_breedsFindUniqueArgs} args - Arguments to find a Cattle_breeds
     * @example
     * // Get one Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_breedsFindUniqueArgs>(args: SelectSubset<T, cattle_breedsFindUniqueArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_breeds that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_breedsFindUniqueOrThrowArgs} args - Arguments to find a Cattle_breeds
     * @example
     * // Get one Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_breedsFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_breedsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_breeds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_breedsFindFirstArgs} args - Arguments to find a Cattle_breeds
     * @example
     * // Get one Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_breedsFindFirstArgs>(args?: SelectSubset<T, cattle_breedsFindFirstArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_breeds that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_breedsFindFirstOrThrowArgs} args - Arguments to find a Cattle_breeds
     * @example
     * // Get one Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_breedsFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_breedsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_breeds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_breedsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.findMany()
     * 
     * // Get first 10 Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_breedsWithIdOnly = await prisma.cattle_breeds.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_breedsFindManyArgs>(args?: SelectSubset<T, cattle_breedsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_breeds.
     * @param {cattle_breedsCreateArgs} args - Arguments to create a Cattle_breeds.
     * @example
     * // Create one Cattle_breeds
     * const Cattle_breeds = await prisma.cattle_breeds.create({
     *   data: {
     *     // ... data to create a Cattle_breeds
     *   }
     * })
     * 
     */
    create<T extends cattle_breedsCreateArgs>(args: SelectSubset<T, cattle_breedsCreateArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_breeds.
     * @param {cattle_breedsCreateManyArgs} args - Arguments to create many Cattle_breeds.
     * @example
     * // Create many Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_breedsCreateManyArgs>(args?: SelectSubset<T, cattle_breedsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_breeds and returns the data saved in the database.
     * @param {cattle_breedsCreateManyAndReturnArgs} args - Arguments to create many Cattle_breeds.
     * @example
     * // Create many Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_breeds and only return the `id`
     * const cattle_breedsWithIdOnly = await prisma.cattle_breeds.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_breedsCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_breedsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_breeds.
     * @param {cattle_breedsDeleteArgs} args - Arguments to delete one Cattle_breeds.
     * @example
     * // Delete one Cattle_breeds
     * const Cattle_breeds = await prisma.cattle_breeds.delete({
     *   where: {
     *     // ... filter to delete one Cattle_breeds
     *   }
     * })
     * 
     */
    delete<T extends cattle_breedsDeleteArgs>(args: SelectSubset<T, cattle_breedsDeleteArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_breeds.
     * @param {cattle_breedsUpdateArgs} args - Arguments to update one Cattle_breeds.
     * @example
     * // Update one Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_breedsUpdateArgs>(args: SelectSubset<T, cattle_breedsUpdateArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_breeds.
     * @param {cattle_breedsDeleteManyArgs} args - Arguments to filter Cattle_breeds to delete.
     * @example
     * // Delete a few Cattle_breeds
     * const { count } = await prisma.cattle_breeds.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_breedsDeleteManyArgs>(args?: SelectSubset<T, cattle_breedsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_breeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_breedsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_breedsUpdateManyArgs>(args: SelectSubset<T, cattle_breedsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_breeds and returns the data updated in the database.
     * @param {cattle_breedsUpdateManyAndReturnArgs} args - Arguments to update many Cattle_breeds.
     * @example
     * // Update many Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_breeds and only return the `id`
     * const cattle_breedsWithIdOnly = await prisma.cattle_breeds.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_breedsUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_breedsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_breeds.
     * @param {cattle_breedsUpsertArgs} args - Arguments to update or create a Cattle_breeds.
     * @example
     * // Update or create a Cattle_breeds
     * const cattle_breeds = await prisma.cattle_breeds.upsert({
     *   create: {
     *     // ... data to create a Cattle_breeds
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_breeds we want to update
     *   }
     * })
     */
    upsert<T extends cattle_breedsUpsertArgs>(args: SelectSubset<T, cattle_breedsUpsertArgs<ExtArgs>>): Prisma__cattle_breedsClient<$Result.GetResult<Prisma.$cattle_breedsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_breeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_breedsCountArgs} args - Arguments to filter Cattle_breeds to count.
     * @example
     * // Count the number of Cattle_breeds
     * const count = await prisma.cattle_breeds.count({
     *   where: {
     *     // ... the filter for the Cattle_breeds we want to count
     *   }
     * })
    **/
    count<T extends cattle_breedsCountArgs>(
      args?: Subset<T, cattle_breedsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_breedsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_breeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_breedsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_breedsAggregateArgs>(args: Subset<T, Cattle_breedsAggregateArgs>): Prisma.PrismaPromise<GetCattle_breedsAggregateType<T>>

    /**
     * Group by Cattle_breeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_breedsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_breedsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_breedsGroupByArgs['orderBy'] }
        : { orderBy?: cattle_breedsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_breedsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_breedsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_breeds model
   */
  readonly fields: cattle_breedsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_breeds.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_breedsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_breeds model
   */
  interface cattle_breedsFieldRefs {
    readonly id: FieldRef<"cattle_breeds", 'String'>
    readonly name_en: FieldRef<"cattle_breeds", 'String'>
    readonly name_th: FieldRef<"cattle_breeds", 'String'>
    readonly short_name: FieldRef<"cattle_breeds", 'String'>
    readonly remark: FieldRef<"cattle_breeds", 'String'>
    readonly created_at: FieldRef<"cattle_breeds", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_breeds", 'String'>
    readonly created_by: FieldRef<"cattle_breeds", 'String'>
    readonly updated_at: FieldRef<"cattle_breeds", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_breeds", 'String'>
    readonly updated_by: FieldRef<"cattle_breeds", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_breeds findUnique
   */
  export type cattle_breedsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * Filter, which cattle_breeds to fetch.
     */
    where: cattle_breedsWhereUniqueInput
  }

  /**
   * cattle_breeds findUniqueOrThrow
   */
  export type cattle_breedsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * Filter, which cattle_breeds to fetch.
     */
    where: cattle_breedsWhereUniqueInput
  }

  /**
   * cattle_breeds findFirst
   */
  export type cattle_breedsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * Filter, which cattle_breeds to fetch.
     */
    where?: cattle_breedsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_breeds to fetch.
     */
    orderBy?: cattle_breedsOrderByWithRelationInput | cattle_breedsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_breeds.
     */
    cursor?: cattle_breedsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_breeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_breeds.
     */
    distinct?: Cattle_breedsScalarFieldEnum | Cattle_breedsScalarFieldEnum[]
  }

  /**
   * cattle_breeds findFirstOrThrow
   */
  export type cattle_breedsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * Filter, which cattle_breeds to fetch.
     */
    where?: cattle_breedsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_breeds to fetch.
     */
    orderBy?: cattle_breedsOrderByWithRelationInput | cattle_breedsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_breeds.
     */
    cursor?: cattle_breedsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_breeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_breeds.
     */
    distinct?: Cattle_breedsScalarFieldEnum | Cattle_breedsScalarFieldEnum[]
  }

  /**
   * cattle_breeds findMany
   */
  export type cattle_breedsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * Filter, which cattle_breeds to fetch.
     */
    where?: cattle_breedsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_breeds to fetch.
     */
    orderBy?: cattle_breedsOrderByWithRelationInput | cattle_breedsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_breeds.
     */
    cursor?: cattle_breedsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_breeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_breeds.
     */
    skip?: number
    distinct?: Cattle_breedsScalarFieldEnum | Cattle_breedsScalarFieldEnum[]
  }

  /**
   * cattle_breeds create
   */
  export type cattle_breedsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * The data needed to create a cattle_breeds.
     */
    data: XOR<cattle_breedsCreateInput, cattle_breedsUncheckedCreateInput>
  }

  /**
   * cattle_breeds createMany
   */
  export type cattle_breedsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_breeds.
     */
    data: cattle_breedsCreateManyInput | cattle_breedsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_breeds createManyAndReturn
   */
  export type cattle_breedsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_breeds.
     */
    data: cattle_breedsCreateManyInput | cattle_breedsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_breeds update
   */
  export type cattle_breedsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * The data needed to update a cattle_breeds.
     */
    data: XOR<cattle_breedsUpdateInput, cattle_breedsUncheckedUpdateInput>
    /**
     * Choose, which cattle_breeds to update.
     */
    where: cattle_breedsWhereUniqueInput
  }

  /**
   * cattle_breeds updateMany
   */
  export type cattle_breedsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_breeds.
     */
    data: XOR<cattle_breedsUpdateManyMutationInput, cattle_breedsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_breeds to update
     */
    where?: cattle_breedsWhereInput
    /**
     * Limit how many cattle_breeds to update.
     */
    limit?: number
  }

  /**
   * cattle_breeds updateManyAndReturn
   */
  export type cattle_breedsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * The data used to update cattle_breeds.
     */
    data: XOR<cattle_breedsUpdateManyMutationInput, cattle_breedsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_breeds to update
     */
    where?: cattle_breedsWhereInput
    /**
     * Limit how many cattle_breeds to update.
     */
    limit?: number
  }

  /**
   * cattle_breeds upsert
   */
  export type cattle_breedsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * The filter to search for the cattle_breeds to update in case it exists.
     */
    where: cattle_breedsWhereUniqueInput
    /**
     * In case the cattle_breeds found by the `where` argument doesn't exist, create a new cattle_breeds with this data.
     */
    create: XOR<cattle_breedsCreateInput, cattle_breedsUncheckedCreateInput>
    /**
     * In case the cattle_breeds was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_breedsUpdateInput, cattle_breedsUncheckedUpdateInput>
  }

  /**
   * cattle_breeds delete
   */
  export type cattle_breedsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
    /**
     * Filter which cattle_breeds to delete.
     */
    where: cattle_breedsWhereUniqueInput
  }

  /**
   * cattle_breeds deleteMany
   */
  export type cattle_breedsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_breeds to delete
     */
    where?: cattle_breedsWhereInput
    /**
     * Limit how many cattle_breeds to delete.
     */
    limit?: number
  }

  /**
   * cattle_breeds without action
   */
  export type cattle_breedsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_breeds
     */
    select?: cattle_breedsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_breeds
     */
    omit?: cattle_breedsOmit<ExtArgs> | null
  }


  /**
   * Model cattle_create_staged
   */

  export type AggregateCattle_create_staged = {
    _count: Cattle_create_stagedCountAggregateOutputType | null
    _avg: Cattle_create_stagedAvgAggregateOutputType | null
    _sum: Cattle_create_stagedSumAggregateOutputType | null
    _min: Cattle_create_stagedMinAggregateOutputType | null
    _max: Cattle_create_stagedMaxAggregateOutputType | null
  }

  export type Cattle_create_stagedAvgAggregateOutputType = {
    weight: Decimal | null
    health_dosage: Decimal | null
  }

  export type Cattle_create_stagedSumAggregateOutputType = {
    weight: Decimal | null
    health_dosage: Decimal | null
  }

  export type Cattle_create_stagedMinAggregateOutputType = {
    id: string | null
    staged_id: string | null
    order_request_id: string | null
    farm_sourcing_id: string | null
    farm_id: string | null
    pen_id: string | null
    cattle_type_id: string | null
    nid: string | null
    gender: string | null
    castration_status: string | null
    pregnant_status: string | null
    birthdate: Date | null
    passport_no: string | null
    color: string | null
    ear: string | null
    horn: string | null
    weight: Decimal | null
    date_weight: Date | null
    tracer_tag: string | null
    country_code: string | null
    health_treatment_date: Date | null
    health_veterinary_name: string | null
    health_health_condition: string | null
    health_symptom: string | null
    health_cause_of_death: string | null
    health_treatment: string | null
    health_drug_name: string | null
    health_dosage: Decimal | null
    health_period_residue: string | null
    vaccination_vaccination_date: Date | null
    vaccination_veterinary_name: string | null
    vaccination_vaccine_type: string | null
    vaccination_remark: string | null
    vaccination_vaccine_id: string | null
    vaccination_vaccine_lot_no: string | null
    vaccination_vaccine_expiry_date: Date | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_create_stagedMaxAggregateOutputType = {
    id: string | null
    staged_id: string | null
    order_request_id: string | null
    farm_sourcing_id: string | null
    farm_id: string | null
    pen_id: string | null
    cattle_type_id: string | null
    nid: string | null
    gender: string | null
    castration_status: string | null
    pregnant_status: string | null
    birthdate: Date | null
    passport_no: string | null
    color: string | null
    ear: string | null
    horn: string | null
    weight: Decimal | null
    date_weight: Date | null
    tracer_tag: string | null
    country_code: string | null
    health_treatment_date: Date | null
    health_veterinary_name: string | null
    health_health_condition: string | null
    health_symptom: string | null
    health_cause_of_death: string | null
    health_treatment: string | null
    health_drug_name: string | null
    health_dosage: Decimal | null
    health_period_residue: string | null
    vaccination_vaccination_date: Date | null
    vaccination_veterinary_name: string | null
    vaccination_vaccine_type: string | null
    vaccination_remark: string | null
    vaccination_vaccine_id: string | null
    vaccination_vaccine_lot_no: string | null
    vaccination_vaccine_expiry_date: Date | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_create_stagedCountAggregateOutputType = {
    id: number
    staged_id: number
    order_request_id: number
    farm_sourcing_id: number
    farm_id: number
    pen_id: number
    cattle_type_id: number
    cattle_breed_ids: number
    nid: number
    gender: number
    castration_status: number
    pregnant_status: number
    birthdate: number
    passport_no: number
    color: number
    ear: number
    horn: number
    weight: number
    date_weight: number
    tracer_tag: number
    breed_sire: number
    breed_dam: number
    breed_pgs: number
    breed_pgd: number
    breed_mgs: number
    breed_mgd: number
    country_code: number
    health_treatment_date: number
    health_veterinary_name: number
    health_health_condition: number
    health_symptom: number
    health_cause_of_death: number
    health_treatment: number
    health_drug_name: number
    health_dosage: number
    health_period_residue: number
    vaccination_vaccination_date: number
    vaccination_veterinary_name: number
    vaccination_vaccine_type: number
    vaccination_remark: number
    vaccination_vaccine_id: number
    vaccination_vaccine_lot_no: number
    vaccination_vaccine_expiry_date: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_create_stagedAvgAggregateInputType = {
    weight?: true
    health_dosage?: true
  }

  export type Cattle_create_stagedSumAggregateInputType = {
    weight?: true
    health_dosage?: true
  }

  export type Cattle_create_stagedMinAggregateInputType = {
    id?: true
    staged_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    farm_id?: true
    pen_id?: true
    cattle_type_id?: true
    nid?: true
    gender?: true
    castration_status?: true
    pregnant_status?: true
    birthdate?: true
    passport_no?: true
    color?: true
    ear?: true
    horn?: true
    weight?: true
    date_weight?: true
    tracer_tag?: true
    country_code?: true
    health_treatment_date?: true
    health_veterinary_name?: true
    health_health_condition?: true
    health_symptom?: true
    health_cause_of_death?: true
    health_treatment?: true
    health_drug_name?: true
    health_dosage?: true
    health_period_residue?: true
    vaccination_vaccination_date?: true
    vaccination_veterinary_name?: true
    vaccination_vaccine_type?: true
    vaccination_remark?: true
    vaccination_vaccine_id?: true
    vaccination_vaccine_lot_no?: true
    vaccination_vaccine_expiry_date?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_create_stagedMaxAggregateInputType = {
    id?: true
    staged_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    farm_id?: true
    pen_id?: true
    cattle_type_id?: true
    nid?: true
    gender?: true
    castration_status?: true
    pregnant_status?: true
    birthdate?: true
    passport_no?: true
    color?: true
    ear?: true
    horn?: true
    weight?: true
    date_weight?: true
    tracer_tag?: true
    country_code?: true
    health_treatment_date?: true
    health_veterinary_name?: true
    health_health_condition?: true
    health_symptom?: true
    health_cause_of_death?: true
    health_treatment?: true
    health_drug_name?: true
    health_dosage?: true
    health_period_residue?: true
    vaccination_vaccination_date?: true
    vaccination_veterinary_name?: true
    vaccination_vaccine_type?: true
    vaccination_remark?: true
    vaccination_vaccine_id?: true
    vaccination_vaccine_lot_no?: true
    vaccination_vaccine_expiry_date?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_create_stagedCountAggregateInputType = {
    id?: true
    staged_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    farm_id?: true
    pen_id?: true
    cattle_type_id?: true
    cattle_breed_ids?: true
    nid?: true
    gender?: true
    castration_status?: true
    pregnant_status?: true
    birthdate?: true
    passport_no?: true
    color?: true
    ear?: true
    horn?: true
    weight?: true
    date_weight?: true
    tracer_tag?: true
    breed_sire?: true
    breed_dam?: true
    breed_pgs?: true
    breed_pgd?: true
    breed_mgs?: true
    breed_mgd?: true
    country_code?: true
    health_treatment_date?: true
    health_veterinary_name?: true
    health_health_condition?: true
    health_symptom?: true
    health_cause_of_death?: true
    health_treatment?: true
    health_drug_name?: true
    health_dosage?: true
    health_period_residue?: true
    vaccination_vaccination_date?: true
    vaccination_veterinary_name?: true
    vaccination_vaccine_type?: true
    vaccination_remark?: true
    vaccination_vaccine_id?: true
    vaccination_vaccine_lot_no?: true
    vaccination_vaccine_expiry_date?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_create_stagedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_create_staged to aggregate.
     */
    where?: cattle_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_create_stageds to fetch.
     */
    orderBy?: cattle_create_stagedOrderByWithRelationInput | cattle_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_create_stageds
    **/
    _count?: true | Cattle_create_stagedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cattle_create_stagedAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cattle_create_stagedSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_create_stagedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_create_stagedMaxAggregateInputType
  }

  export type GetCattle_create_stagedAggregateType<T extends Cattle_create_stagedAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_create_staged]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_create_staged[P]>
      : GetScalarType<T[P], AggregateCattle_create_staged[P]>
  }




  export type cattle_create_stagedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_create_stagedWhereInput
    orderBy?: cattle_create_stagedOrderByWithAggregationInput | cattle_create_stagedOrderByWithAggregationInput[]
    by: Cattle_create_stagedScalarFieldEnum[] | Cattle_create_stagedScalarFieldEnum
    having?: cattle_create_stagedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_create_stagedCountAggregateInputType | true
    _avg?: Cattle_create_stagedAvgAggregateInputType
    _sum?: Cattle_create_stagedSumAggregateInputType
    _min?: Cattle_create_stagedMinAggregateInputType
    _max?: Cattle_create_stagedMaxAggregateInputType
  }

  export type Cattle_create_stagedGroupByOutputType = {
    id: string
    staged_id: string
    order_request_id: string | null
    farm_sourcing_id: string | null
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids: string[]
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date
    passport_no: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal
    date_weight: Date
    tracer_tag: string
    breed_sire: string[]
    breed_dam: string[]
    breed_pgs: string[]
    breed_pgd: string[]
    breed_mgs: string[]
    breed_mgd: string[]
    country_code: string
    health_treatment_date: Date
    health_veterinary_name: string
    health_health_condition: string
    health_symptom: string | null
    health_cause_of_death: string | null
    health_treatment: string | null
    health_drug_name: string | null
    health_dosage: Decimal | null
    health_period_residue: string | null
    vaccination_vaccination_date: Date | null
    vaccination_veterinary_name: string | null
    vaccination_vaccine_type: string | null
    vaccination_remark: string | null
    vaccination_vaccine_id: string | null
    vaccination_vaccine_lot_no: string | null
    vaccination_vaccine_expiry_date: Date | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_create_stagedCountAggregateOutputType | null
    _avg: Cattle_create_stagedAvgAggregateOutputType | null
    _sum: Cattle_create_stagedSumAggregateOutputType | null
    _min: Cattle_create_stagedMinAggregateOutputType | null
    _max: Cattle_create_stagedMaxAggregateOutputType | null
  }

  type GetCattle_create_stagedGroupByPayload<T extends cattle_create_stagedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_create_stagedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_create_stagedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_create_stagedGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_create_stagedGroupByOutputType[P]>
        }
      >
    >


  export type cattle_create_stagedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    country_code?: boolean
    health_treatment_date?: boolean
    health_veterinary_name?: boolean
    health_health_condition?: boolean
    health_symptom?: boolean
    health_cause_of_death?: boolean
    health_treatment?: boolean
    health_drug_name?: boolean
    health_dosage?: boolean
    health_period_residue?: boolean
    vaccination_vaccination_date?: boolean
    vaccination_veterinary_name?: boolean
    vaccination_vaccine_type?: boolean
    vaccination_remark?: boolean
    vaccination_vaccine_id?: boolean
    vaccination_vaccine_lot_no?: boolean
    vaccination_vaccine_expiry_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_create_staged"]>

  export type cattle_create_stagedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    country_code?: boolean
    health_treatment_date?: boolean
    health_veterinary_name?: boolean
    health_health_condition?: boolean
    health_symptom?: boolean
    health_cause_of_death?: boolean
    health_treatment?: boolean
    health_drug_name?: boolean
    health_dosage?: boolean
    health_period_residue?: boolean
    vaccination_vaccination_date?: boolean
    vaccination_veterinary_name?: boolean
    vaccination_vaccine_type?: boolean
    vaccination_remark?: boolean
    vaccination_vaccine_id?: boolean
    vaccination_vaccine_lot_no?: boolean
    vaccination_vaccine_expiry_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_create_staged"]>

  export type cattle_create_stagedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    country_code?: boolean
    health_treatment_date?: boolean
    health_veterinary_name?: boolean
    health_health_condition?: boolean
    health_symptom?: boolean
    health_cause_of_death?: boolean
    health_treatment?: boolean
    health_drug_name?: boolean
    health_dosage?: boolean
    health_period_residue?: boolean
    vaccination_vaccination_date?: boolean
    vaccination_veterinary_name?: boolean
    vaccination_vaccine_type?: boolean
    vaccination_remark?: boolean
    vaccination_vaccine_id?: boolean
    vaccination_vaccine_lot_no?: boolean
    vaccination_vaccine_expiry_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_create_staged"]>

  export type cattle_create_stagedSelectScalar = {
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    country_code?: boolean
    health_treatment_date?: boolean
    health_veterinary_name?: boolean
    health_health_condition?: boolean
    health_symptom?: boolean
    health_cause_of_death?: boolean
    health_treatment?: boolean
    health_drug_name?: boolean
    health_dosage?: boolean
    health_period_residue?: boolean
    vaccination_vaccination_date?: boolean
    vaccination_veterinary_name?: boolean
    vaccination_vaccine_type?: boolean
    vaccination_remark?: boolean
    vaccination_vaccine_id?: boolean
    vaccination_vaccine_lot_no?: boolean
    vaccination_vaccine_expiry_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_create_stagedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staged_id" | "order_request_id" | "farm_sourcing_id" | "farm_id" | "pen_id" | "cattle_type_id" | "cattle_breed_ids" | "nid" | "gender" | "castration_status" | "pregnant_status" | "birthdate" | "passport_no" | "color" | "ear" | "horn" | "weight" | "date_weight" | "tracer_tag" | "breed_sire" | "breed_dam" | "breed_pgs" | "breed_pgd" | "breed_mgs" | "breed_mgd" | "country_code" | "health_treatment_date" | "health_veterinary_name" | "health_health_condition" | "health_symptom" | "health_cause_of_death" | "health_treatment" | "health_drug_name" | "health_dosage" | "health_period_residue" | "vaccination_vaccination_date" | "vaccination_veterinary_name" | "vaccination_vaccine_type" | "vaccination_remark" | "vaccination_vaccine_id" | "vaccination_vaccine_lot_no" | "vaccination_vaccine_expiry_date" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_create_staged"]>

  export type $cattle_create_stagedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_create_staged"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      staged_id: string
      order_request_id: string | null
      farm_sourcing_id: string | null
      farm_id: string
      pen_id: string
      cattle_type_id: string
      cattle_breed_ids: string[]
      nid: string
      gender: string
      castration_status: string
      pregnant_status: string
      birthdate: Date
      passport_no: string | null
      color: string
      ear: string
      horn: string
      weight: Prisma.Decimal
      date_weight: Date
      tracer_tag: string
      breed_sire: string[]
      breed_dam: string[]
      breed_pgs: string[]
      breed_pgd: string[]
      breed_mgs: string[]
      breed_mgd: string[]
      country_code: string
      health_treatment_date: Date
      health_veterinary_name: string
      health_health_condition: string
      health_symptom: string | null
      health_cause_of_death: string | null
      health_treatment: string | null
      health_drug_name: string | null
      health_dosage: Prisma.Decimal | null
      health_period_residue: string | null
      vaccination_vaccination_date: Date | null
      vaccination_veterinary_name: string | null
      vaccination_vaccine_type: string | null
      vaccination_remark: string | null
      vaccination_vaccine_id: string | null
      vaccination_vaccine_lot_no: string | null
      vaccination_vaccine_expiry_date: Date | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_create_staged"]>
    composites: {}
  }

  type cattle_create_stagedGetPayload<S extends boolean | null | undefined | cattle_create_stagedDefaultArgs> = $Result.GetResult<Prisma.$cattle_create_stagedPayload, S>

  type cattle_create_stagedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_create_stagedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_create_stagedCountAggregateInputType | true
    }

  export interface cattle_create_stagedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_create_staged'], meta: { name: 'cattle_create_staged' } }
    /**
     * Find zero or one Cattle_create_staged that matches the filter.
     * @param {cattle_create_stagedFindUniqueArgs} args - Arguments to find a Cattle_create_staged
     * @example
     * // Get one Cattle_create_staged
     * const cattle_create_staged = await prisma.cattle_create_staged.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_create_stagedFindUniqueArgs>(args: SelectSubset<T, cattle_create_stagedFindUniqueArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_create_staged that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_create_stagedFindUniqueOrThrowArgs} args - Arguments to find a Cattle_create_staged
     * @example
     * // Get one Cattle_create_staged
     * const cattle_create_staged = await prisma.cattle_create_staged.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_create_stagedFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_create_stagedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_create_staged that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_create_stagedFindFirstArgs} args - Arguments to find a Cattle_create_staged
     * @example
     * // Get one Cattle_create_staged
     * const cattle_create_staged = await prisma.cattle_create_staged.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_create_stagedFindFirstArgs>(args?: SelectSubset<T, cattle_create_stagedFindFirstArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_create_staged that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_create_stagedFindFirstOrThrowArgs} args - Arguments to find a Cattle_create_staged
     * @example
     * // Get one Cattle_create_staged
     * const cattle_create_staged = await prisma.cattle_create_staged.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_create_stagedFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_create_stagedFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_create_stageds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_create_stagedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_create_stageds
     * const cattle_create_stageds = await prisma.cattle_create_staged.findMany()
     * 
     * // Get first 10 Cattle_create_stageds
     * const cattle_create_stageds = await prisma.cattle_create_staged.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_create_stagedWithIdOnly = await prisma.cattle_create_staged.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_create_stagedFindManyArgs>(args?: SelectSubset<T, cattle_create_stagedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_create_staged.
     * @param {cattle_create_stagedCreateArgs} args - Arguments to create a Cattle_create_staged.
     * @example
     * // Create one Cattle_create_staged
     * const Cattle_create_staged = await prisma.cattle_create_staged.create({
     *   data: {
     *     // ... data to create a Cattle_create_staged
     *   }
     * })
     * 
     */
    create<T extends cattle_create_stagedCreateArgs>(args: SelectSubset<T, cattle_create_stagedCreateArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_create_stageds.
     * @param {cattle_create_stagedCreateManyArgs} args - Arguments to create many Cattle_create_stageds.
     * @example
     * // Create many Cattle_create_stageds
     * const cattle_create_staged = await prisma.cattle_create_staged.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_create_stagedCreateManyArgs>(args?: SelectSubset<T, cattle_create_stagedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_create_stageds and returns the data saved in the database.
     * @param {cattle_create_stagedCreateManyAndReturnArgs} args - Arguments to create many Cattle_create_stageds.
     * @example
     * // Create many Cattle_create_stageds
     * const cattle_create_staged = await prisma.cattle_create_staged.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_create_stageds and only return the `id`
     * const cattle_create_stagedWithIdOnly = await prisma.cattle_create_staged.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_create_stagedCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_create_stagedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_create_staged.
     * @param {cattle_create_stagedDeleteArgs} args - Arguments to delete one Cattle_create_staged.
     * @example
     * // Delete one Cattle_create_staged
     * const Cattle_create_staged = await prisma.cattle_create_staged.delete({
     *   where: {
     *     // ... filter to delete one Cattle_create_staged
     *   }
     * })
     * 
     */
    delete<T extends cattle_create_stagedDeleteArgs>(args: SelectSubset<T, cattle_create_stagedDeleteArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_create_staged.
     * @param {cattle_create_stagedUpdateArgs} args - Arguments to update one Cattle_create_staged.
     * @example
     * // Update one Cattle_create_staged
     * const cattle_create_staged = await prisma.cattle_create_staged.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_create_stagedUpdateArgs>(args: SelectSubset<T, cattle_create_stagedUpdateArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_create_stageds.
     * @param {cattle_create_stagedDeleteManyArgs} args - Arguments to filter Cattle_create_stageds to delete.
     * @example
     * // Delete a few Cattle_create_stageds
     * const { count } = await prisma.cattle_create_staged.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_create_stagedDeleteManyArgs>(args?: SelectSubset<T, cattle_create_stagedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_create_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_create_stagedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_create_stageds
     * const cattle_create_staged = await prisma.cattle_create_staged.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_create_stagedUpdateManyArgs>(args: SelectSubset<T, cattle_create_stagedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_create_stageds and returns the data updated in the database.
     * @param {cattle_create_stagedUpdateManyAndReturnArgs} args - Arguments to update many Cattle_create_stageds.
     * @example
     * // Update many Cattle_create_stageds
     * const cattle_create_staged = await prisma.cattle_create_staged.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_create_stageds and only return the `id`
     * const cattle_create_stagedWithIdOnly = await prisma.cattle_create_staged.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_create_stagedUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_create_stagedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_create_staged.
     * @param {cattle_create_stagedUpsertArgs} args - Arguments to update or create a Cattle_create_staged.
     * @example
     * // Update or create a Cattle_create_staged
     * const cattle_create_staged = await prisma.cattle_create_staged.upsert({
     *   create: {
     *     // ... data to create a Cattle_create_staged
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_create_staged we want to update
     *   }
     * })
     */
    upsert<T extends cattle_create_stagedUpsertArgs>(args: SelectSubset<T, cattle_create_stagedUpsertArgs<ExtArgs>>): Prisma__cattle_create_stagedClient<$Result.GetResult<Prisma.$cattle_create_stagedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_create_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_create_stagedCountArgs} args - Arguments to filter Cattle_create_stageds to count.
     * @example
     * // Count the number of Cattle_create_stageds
     * const count = await prisma.cattle_create_staged.count({
     *   where: {
     *     // ... the filter for the Cattle_create_stageds we want to count
     *   }
     * })
    **/
    count<T extends cattle_create_stagedCountArgs>(
      args?: Subset<T, cattle_create_stagedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_create_stagedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_create_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_create_stagedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_create_stagedAggregateArgs>(args: Subset<T, Cattle_create_stagedAggregateArgs>): Prisma.PrismaPromise<GetCattle_create_stagedAggregateType<T>>

    /**
     * Group by Cattle_create_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_create_stagedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_create_stagedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_create_stagedGroupByArgs['orderBy'] }
        : { orderBy?: cattle_create_stagedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_create_stagedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_create_stagedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_create_staged model
   */
  readonly fields: cattle_create_stagedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_create_staged.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_create_stagedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_create_staged model
   */
  interface cattle_create_stagedFieldRefs {
    readonly id: FieldRef<"cattle_create_staged", 'String'>
    readonly staged_id: FieldRef<"cattle_create_staged", 'String'>
    readonly order_request_id: FieldRef<"cattle_create_staged", 'String'>
    readonly farm_sourcing_id: FieldRef<"cattle_create_staged", 'String'>
    readonly farm_id: FieldRef<"cattle_create_staged", 'String'>
    readonly pen_id: FieldRef<"cattle_create_staged", 'String'>
    readonly cattle_type_id: FieldRef<"cattle_create_staged", 'String'>
    readonly cattle_breed_ids: FieldRef<"cattle_create_staged", 'String[]'>
    readonly nid: FieldRef<"cattle_create_staged", 'String'>
    readonly gender: FieldRef<"cattle_create_staged", 'String'>
    readonly castration_status: FieldRef<"cattle_create_staged", 'String'>
    readonly pregnant_status: FieldRef<"cattle_create_staged", 'String'>
    readonly birthdate: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly passport_no: FieldRef<"cattle_create_staged", 'String'>
    readonly color: FieldRef<"cattle_create_staged", 'String'>
    readonly ear: FieldRef<"cattle_create_staged", 'String'>
    readonly horn: FieldRef<"cattle_create_staged", 'String'>
    readonly weight: FieldRef<"cattle_create_staged", 'Decimal'>
    readonly date_weight: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly tracer_tag: FieldRef<"cattle_create_staged", 'String'>
    readonly breed_sire: FieldRef<"cattle_create_staged", 'String[]'>
    readonly breed_dam: FieldRef<"cattle_create_staged", 'String[]'>
    readonly breed_pgs: FieldRef<"cattle_create_staged", 'String[]'>
    readonly breed_pgd: FieldRef<"cattle_create_staged", 'String[]'>
    readonly breed_mgs: FieldRef<"cattle_create_staged", 'String[]'>
    readonly breed_mgd: FieldRef<"cattle_create_staged", 'String[]'>
    readonly country_code: FieldRef<"cattle_create_staged", 'String'>
    readonly health_treatment_date: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly health_veterinary_name: FieldRef<"cattle_create_staged", 'String'>
    readonly health_health_condition: FieldRef<"cattle_create_staged", 'String'>
    readonly health_symptom: FieldRef<"cattle_create_staged", 'String'>
    readonly health_cause_of_death: FieldRef<"cattle_create_staged", 'String'>
    readonly health_treatment: FieldRef<"cattle_create_staged", 'String'>
    readonly health_drug_name: FieldRef<"cattle_create_staged", 'String'>
    readonly health_dosage: FieldRef<"cattle_create_staged", 'Decimal'>
    readonly health_period_residue: FieldRef<"cattle_create_staged", 'String'>
    readonly vaccination_vaccination_date: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly vaccination_veterinary_name: FieldRef<"cattle_create_staged", 'String'>
    readonly vaccination_vaccine_type: FieldRef<"cattle_create_staged", 'String'>
    readonly vaccination_remark: FieldRef<"cattle_create_staged", 'String'>
    readonly vaccination_vaccine_id: FieldRef<"cattle_create_staged", 'String'>
    readonly vaccination_vaccine_lot_no: FieldRef<"cattle_create_staged", 'String'>
    readonly vaccination_vaccine_expiry_date: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly created_at: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_create_staged", 'String'>
    readonly created_by: FieldRef<"cattle_create_staged", 'String'>
    readonly updated_at: FieldRef<"cattle_create_staged", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_create_staged", 'String'>
    readonly updated_by: FieldRef<"cattle_create_staged", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_create_staged findUnique
   */
  export type cattle_create_stagedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_create_staged to fetch.
     */
    where: cattle_create_stagedWhereUniqueInput
  }

  /**
   * cattle_create_staged findUniqueOrThrow
   */
  export type cattle_create_stagedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_create_staged to fetch.
     */
    where: cattle_create_stagedWhereUniqueInput
  }

  /**
   * cattle_create_staged findFirst
   */
  export type cattle_create_stagedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_create_staged to fetch.
     */
    where?: cattle_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_create_stageds to fetch.
     */
    orderBy?: cattle_create_stagedOrderByWithRelationInput | cattle_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_create_stageds.
     */
    cursor?: cattle_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_create_stageds.
     */
    distinct?: Cattle_create_stagedScalarFieldEnum | Cattle_create_stagedScalarFieldEnum[]
  }

  /**
   * cattle_create_staged findFirstOrThrow
   */
  export type cattle_create_stagedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_create_staged to fetch.
     */
    where?: cattle_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_create_stageds to fetch.
     */
    orderBy?: cattle_create_stagedOrderByWithRelationInput | cattle_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_create_stageds.
     */
    cursor?: cattle_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_create_stageds.
     */
    distinct?: Cattle_create_stagedScalarFieldEnum | Cattle_create_stagedScalarFieldEnum[]
  }

  /**
   * cattle_create_staged findMany
   */
  export type cattle_create_stagedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_create_stageds to fetch.
     */
    where?: cattle_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_create_stageds to fetch.
     */
    orderBy?: cattle_create_stagedOrderByWithRelationInput | cattle_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_create_stageds.
     */
    cursor?: cattle_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_create_stageds.
     */
    skip?: number
    distinct?: Cattle_create_stagedScalarFieldEnum | Cattle_create_stagedScalarFieldEnum[]
  }

  /**
   * cattle_create_staged create
   */
  export type cattle_create_stagedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * The data needed to create a cattle_create_staged.
     */
    data: XOR<cattle_create_stagedCreateInput, cattle_create_stagedUncheckedCreateInput>
  }

  /**
   * cattle_create_staged createMany
   */
  export type cattle_create_stagedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_create_stageds.
     */
    data: cattle_create_stagedCreateManyInput | cattle_create_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_create_staged createManyAndReturn
   */
  export type cattle_create_stagedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_create_stageds.
     */
    data: cattle_create_stagedCreateManyInput | cattle_create_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_create_staged update
   */
  export type cattle_create_stagedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * The data needed to update a cattle_create_staged.
     */
    data: XOR<cattle_create_stagedUpdateInput, cattle_create_stagedUncheckedUpdateInput>
    /**
     * Choose, which cattle_create_staged to update.
     */
    where: cattle_create_stagedWhereUniqueInput
  }

  /**
   * cattle_create_staged updateMany
   */
  export type cattle_create_stagedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_create_stageds.
     */
    data: XOR<cattle_create_stagedUpdateManyMutationInput, cattle_create_stagedUncheckedUpdateManyInput>
    /**
     * Filter which cattle_create_stageds to update
     */
    where?: cattle_create_stagedWhereInput
    /**
     * Limit how many cattle_create_stageds to update.
     */
    limit?: number
  }

  /**
   * cattle_create_staged updateManyAndReturn
   */
  export type cattle_create_stagedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * The data used to update cattle_create_stageds.
     */
    data: XOR<cattle_create_stagedUpdateManyMutationInput, cattle_create_stagedUncheckedUpdateManyInput>
    /**
     * Filter which cattle_create_stageds to update
     */
    where?: cattle_create_stagedWhereInput
    /**
     * Limit how many cattle_create_stageds to update.
     */
    limit?: number
  }

  /**
   * cattle_create_staged upsert
   */
  export type cattle_create_stagedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * The filter to search for the cattle_create_staged to update in case it exists.
     */
    where: cattle_create_stagedWhereUniqueInput
    /**
     * In case the cattle_create_staged found by the `where` argument doesn't exist, create a new cattle_create_staged with this data.
     */
    create: XOR<cattle_create_stagedCreateInput, cattle_create_stagedUncheckedCreateInput>
    /**
     * In case the cattle_create_staged was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_create_stagedUpdateInput, cattle_create_stagedUncheckedUpdateInput>
  }

  /**
   * cattle_create_staged delete
   */
  export type cattle_create_stagedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
    /**
     * Filter which cattle_create_staged to delete.
     */
    where: cattle_create_stagedWhereUniqueInput
  }

  /**
   * cattle_create_staged deleteMany
   */
  export type cattle_create_stagedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_create_stageds to delete
     */
    where?: cattle_create_stagedWhereInput
    /**
     * Limit how many cattle_create_stageds to delete.
     */
    limit?: number
  }

  /**
   * cattle_create_staged without action
   */
  export type cattle_create_stagedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_create_staged
     */
    select?: cattle_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_create_staged
     */
    omit?: cattle_create_stagedOmit<ExtArgs> | null
  }


  /**
   * Model cattle_healths
   */

  export type AggregateCattle_healths = {
    _count: Cattle_healthsCountAggregateOutputType | null
    _avg: Cattle_healthsAvgAggregateOutputType | null
    _sum: Cattle_healthsSumAggregateOutputType | null
    _min: Cattle_healthsMinAggregateOutputType | null
    _max: Cattle_healthsMaxAggregateOutputType | null
  }

  export type Cattle_healthsAvgAggregateOutputType = {
    dosage: Decimal | null
  }

  export type Cattle_healthsSumAggregateOutputType = {
    dosage: Decimal | null
  }

  export type Cattle_healthsMinAggregateOutputType = {
    id: string | null
    cattle_id: string | null
    treatment_date: Date | null
    veterinary_name: string | null
    health_condition: string | null
    symptom: string | null
    cause_of_death: string | null
    treatment: string | null
    drug_name: string | null
    dosage: Decimal | null
    period_residue: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_healthsMaxAggregateOutputType = {
    id: string | null
    cattle_id: string | null
    treatment_date: Date | null
    veterinary_name: string | null
    health_condition: string | null
    symptom: string | null
    cause_of_death: string | null
    treatment: string | null
    drug_name: string | null
    dosage: Decimal | null
    period_residue: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_healthsCountAggregateOutputType = {
    id: number
    cattle_id: number
    treatment_date: number
    veterinary_name: number
    health_condition: number
    symptom: number
    cause_of_death: number
    treatment: number
    drug_name: number
    dosage: number
    period_residue: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_healthsAvgAggregateInputType = {
    dosage?: true
  }

  export type Cattle_healthsSumAggregateInputType = {
    dosage?: true
  }

  export type Cattle_healthsMinAggregateInputType = {
    id?: true
    cattle_id?: true
    treatment_date?: true
    veterinary_name?: true
    health_condition?: true
    symptom?: true
    cause_of_death?: true
    treatment?: true
    drug_name?: true
    dosage?: true
    period_residue?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_healthsMaxAggregateInputType = {
    id?: true
    cattle_id?: true
    treatment_date?: true
    veterinary_name?: true
    health_condition?: true
    symptom?: true
    cause_of_death?: true
    treatment?: true
    drug_name?: true
    dosage?: true
    period_residue?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_healthsCountAggregateInputType = {
    id?: true
    cattle_id?: true
    treatment_date?: true
    veterinary_name?: true
    health_condition?: true
    symptom?: true
    cause_of_death?: true
    treatment?: true
    drug_name?: true
    dosage?: true
    period_residue?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_healthsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_healths to aggregate.
     */
    where?: cattle_healthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_healths to fetch.
     */
    orderBy?: cattle_healthsOrderByWithRelationInput | cattle_healthsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_healthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_healths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_healths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_healths
    **/
    _count?: true | Cattle_healthsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cattle_healthsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cattle_healthsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_healthsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_healthsMaxAggregateInputType
  }

  export type GetCattle_healthsAggregateType<T extends Cattle_healthsAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_healths]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_healths[P]>
      : GetScalarType<T[P], AggregateCattle_healths[P]>
  }




  export type cattle_healthsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_healthsWhereInput
    orderBy?: cattle_healthsOrderByWithAggregationInput | cattle_healthsOrderByWithAggregationInput[]
    by: Cattle_healthsScalarFieldEnum[] | Cattle_healthsScalarFieldEnum
    having?: cattle_healthsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_healthsCountAggregateInputType | true
    _avg?: Cattle_healthsAvgAggregateInputType
    _sum?: Cattle_healthsSumAggregateInputType
    _min?: Cattle_healthsMinAggregateInputType
    _max?: Cattle_healthsMaxAggregateInputType
  }

  export type Cattle_healthsGroupByOutputType = {
    id: string
    cattle_id: string
    treatment_date: Date
    veterinary_name: string
    health_condition: string
    symptom: string | null
    cause_of_death: string | null
    treatment: string | null
    drug_name: string | null
    dosage: Decimal | null
    period_residue: string | null
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_healthsCountAggregateOutputType | null
    _avg: Cattle_healthsAvgAggregateOutputType | null
    _sum: Cattle_healthsSumAggregateOutputType | null
    _min: Cattle_healthsMinAggregateOutputType | null
    _max: Cattle_healthsMaxAggregateOutputType | null
  }

  type GetCattle_healthsGroupByPayload<T extends cattle_healthsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_healthsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_healthsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_healthsGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_healthsGroupByOutputType[P]>
        }
      >
    >


  export type cattle_healthsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    treatment_date?: boolean
    veterinary_name?: boolean
    health_condition?: boolean
    symptom?: boolean
    cause_of_death?: boolean
    treatment?: boolean
    drug_name?: boolean
    dosage?: boolean
    period_residue?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_healths"]>

  export type cattle_healthsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    treatment_date?: boolean
    veterinary_name?: boolean
    health_condition?: boolean
    symptom?: boolean
    cause_of_death?: boolean
    treatment?: boolean
    drug_name?: boolean
    dosage?: boolean
    period_residue?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_healths"]>

  export type cattle_healthsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    treatment_date?: boolean
    veterinary_name?: boolean
    health_condition?: boolean
    symptom?: boolean
    cause_of_death?: boolean
    treatment?: boolean
    drug_name?: boolean
    dosage?: boolean
    period_residue?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_healths"]>

  export type cattle_healthsSelectScalar = {
    id?: boolean
    cattle_id?: boolean
    treatment_date?: boolean
    veterinary_name?: boolean
    health_condition?: boolean
    symptom?: boolean
    cause_of_death?: boolean
    treatment?: boolean
    drug_name?: boolean
    dosage?: boolean
    period_residue?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_healthsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cattle_id" | "treatment_date" | "veterinary_name" | "health_condition" | "symptom" | "cause_of_death" | "treatment" | "drug_name" | "dosage" | "period_residue" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_healths"]>
  export type cattle_healthsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }
  export type cattle_healthsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }
  export type cattle_healthsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }

  export type $cattle_healthsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_healths"
    objects: {
      cattles: Prisma.$cattlesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cattle_id: string
      treatment_date: Date
      veterinary_name: string
      health_condition: string
      symptom: string | null
      cause_of_death: string | null
      treatment: string | null
      drug_name: string | null
      dosage: Prisma.Decimal | null
      period_residue: string | null
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_healths"]>
    composites: {}
  }

  type cattle_healthsGetPayload<S extends boolean | null | undefined | cattle_healthsDefaultArgs> = $Result.GetResult<Prisma.$cattle_healthsPayload, S>

  type cattle_healthsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_healthsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_healthsCountAggregateInputType | true
    }

  export interface cattle_healthsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_healths'], meta: { name: 'cattle_healths' } }
    /**
     * Find zero or one Cattle_healths that matches the filter.
     * @param {cattle_healthsFindUniqueArgs} args - Arguments to find a Cattle_healths
     * @example
     * // Get one Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_healthsFindUniqueArgs>(args: SelectSubset<T, cattle_healthsFindUniqueArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_healths that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_healthsFindUniqueOrThrowArgs} args - Arguments to find a Cattle_healths
     * @example
     * // Get one Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_healthsFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_healthsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_healths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_healthsFindFirstArgs} args - Arguments to find a Cattle_healths
     * @example
     * // Get one Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_healthsFindFirstArgs>(args?: SelectSubset<T, cattle_healthsFindFirstArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_healths that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_healthsFindFirstOrThrowArgs} args - Arguments to find a Cattle_healths
     * @example
     * // Get one Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_healthsFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_healthsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_healths that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_healthsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.findMany()
     * 
     * // Get first 10 Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_healthsWithIdOnly = await prisma.cattle_healths.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_healthsFindManyArgs>(args?: SelectSubset<T, cattle_healthsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_healths.
     * @param {cattle_healthsCreateArgs} args - Arguments to create a Cattle_healths.
     * @example
     * // Create one Cattle_healths
     * const Cattle_healths = await prisma.cattle_healths.create({
     *   data: {
     *     // ... data to create a Cattle_healths
     *   }
     * })
     * 
     */
    create<T extends cattle_healthsCreateArgs>(args: SelectSubset<T, cattle_healthsCreateArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_healths.
     * @param {cattle_healthsCreateManyArgs} args - Arguments to create many Cattle_healths.
     * @example
     * // Create many Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_healthsCreateManyArgs>(args?: SelectSubset<T, cattle_healthsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_healths and returns the data saved in the database.
     * @param {cattle_healthsCreateManyAndReturnArgs} args - Arguments to create many Cattle_healths.
     * @example
     * // Create many Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_healths and only return the `id`
     * const cattle_healthsWithIdOnly = await prisma.cattle_healths.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_healthsCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_healthsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_healths.
     * @param {cattle_healthsDeleteArgs} args - Arguments to delete one Cattle_healths.
     * @example
     * // Delete one Cattle_healths
     * const Cattle_healths = await prisma.cattle_healths.delete({
     *   where: {
     *     // ... filter to delete one Cattle_healths
     *   }
     * })
     * 
     */
    delete<T extends cattle_healthsDeleteArgs>(args: SelectSubset<T, cattle_healthsDeleteArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_healths.
     * @param {cattle_healthsUpdateArgs} args - Arguments to update one Cattle_healths.
     * @example
     * // Update one Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_healthsUpdateArgs>(args: SelectSubset<T, cattle_healthsUpdateArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_healths.
     * @param {cattle_healthsDeleteManyArgs} args - Arguments to filter Cattle_healths to delete.
     * @example
     * // Delete a few Cattle_healths
     * const { count } = await prisma.cattle_healths.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_healthsDeleteManyArgs>(args?: SelectSubset<T, cattle_healthsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_healths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_healthsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_healthsUpdateManyArgs>(args: SelectSubset<T, cattle_healthsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_healths and returns the data updated in the database.
     * @param {cattle_healthsUpdateManyAndReturnArgs} args - Arguments to update many Cattle_healths.
     * @example
     * // Update many Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_healths and only return the `id`
     * const cattle_healthsWithIdOnly = await prisma.cattle_healths.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_healthsUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_healthsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_healths.
     * @param {cattle_healthsUpsertArgs} args - Arguments to update or create a Cattle_healths.
     * @example
     * // Update or create a Cattle_healths
     * const cattle_healths = await prisma.cattle_healths.upsert({
     *   create: {
     *     // ... data to create a Cattle_healths
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_healths we want to update
     *   }
     * })
     */
    upsert<T extends cattle_healthsUpsertArgs>(args: SelectSubset<T, cattle_healthsUpsertArgs<ExtArgs>>): Prisma__cattle_healthsClient<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_healths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_healthsCountArgs} args - Arguments to filter Cattle_healths to count.
     * @example
     * // Count the number of Cattle_healths
     * const count = await prisma.cattle_healths.count({
     *   where: {
     *     // ... the filter for the Cattle_healths we want to count
     *   }
     * })
    **/
    count<T extends cattle_healthsCountArgs>(
      args?: Subset<T, cattle_healthsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_healthsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_healths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_healthsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_healthsAggregateArgs>(args: Subset<T, Cattle_healthsAggregateArgs>): Prisma.PrismaPromise<GetCattle_healthsAggregateType<T>>

    /**
     * Group by Cattle_healths.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_healthsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_healthsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_healthsGroupByArgs['orderBy'] }
        : { orderBy?: cattle_healthsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_healthsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_healthsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_healths model
   */
  readonly fields: cattle_healthsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_healths.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_healthsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattles<T extends cattlesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cattlesDefaultArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_healths model
   */
  interface cattle_healthsFieldRefs {
    readonly id: FieldRef<"cattle_healths", 'String'>
    readonly cattle_id: FieldRef<"cattle_healths", 'String'>
    readonly treatment_date: FieldRef<"cattle_healths", 'DateTime'>
    readonly veterinary_name: FieldRef<"cattle_healths", 'String'>
    readonly health_condition: FieldRef<"cattle_healths", 'String'>
    readonly symptom: FieldRef<"cattle_healths", 'String'>
    readonly cause_of_death: FieldRef<"cattle_healths", 'String'>
    readonly treatment: FieldRef<"cattle_healths", 'String'>
    readonly drug_name: FieldRef<"cattle_healths", 'String'>
    readonly dosage: FieldRef<"cattle_healths", 'Decimal'>
    readonly period_residue: FieldRef<"cattle_healths", 'String'>
    readonly status: FieldRef<"cattle_healths", 'String'>
    readonly created_at: FieldRef<"cattle_healths", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_healths", 'String'>
    readonly created_by: FieldRef<"cattle_healths", 'String'>
    readonly updated_at: FieldRef<"cattle_healths", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_healths", 'String'>
    readonly updated_by: FieldRef<"cattle_healths", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_healths findUnique
   */
  export type cattle_healthsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_healths to fetch.
     */
    where: cattle_healthsWhereUniqueInput
  }

  /**
   * cattle_healths findUniqueOrThrow
   */
  export type cattle_healthsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_healths to fetch.
     */
    where: cattle_healthsWhereUniqueInput
  }

  /**
   * cattle_healths findFirst
   */
  export type cattle_healthsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_healths to fetch.
     */
    where?: cattle_healthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_healths to fetch.
     */
    orderBy?: cattle_healthsOrderByWithRelationInput | cattle_healthsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_healths.
     */
    cursor?: cattle_healthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_healths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_healths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_healths.
     */
    distinct?: Cattle_healthsScalarFieldEnum | Cattle_healthsScalarFieldEnum[]
  }

  /**
   * cattle_healths findFirstOrThrow
   */
  export type cattle_healthsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_healths to fetch.
     */
    where?: cattle_healthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_healths to fetch.
     */
    orderBy?: cattle_healthsOrderByWithRelationInput | cattle_healthsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_healths.
     */
    cursor?: cattle_healthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_healths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_healths.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_healths.
     */
    distinct?: Cattle_healthsScalarFieldEnum | Cattle_healthsScalarFieldEnum[]
  }

  /**
   * cattle_healths findMany
   */
  export type cattle_healthsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_healths to fetch.
     */
    where?: cattle_healthsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_healths to fetch.
     */
    orderBy?: cattle_healthsOrderByWithRelationInput | cattle_healthsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_healths.
     */
    cursor?: cattle_healthsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_healths from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_healths.
     */
    skip?: number
    distinct?: Cattle_healthsScalarFieldEnum | Cattle_healthsScalarFieldEnum[]
  }

  /**
   * cattle_healths create
   */
  export type cattle_healthsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * The data needed to create a cattle_healths.
     */
    data: XOR<cattle_healthsCreateInput, cattle_healthsUncheckedCreateInput>
  }

  /**
   * cattle_healths createMany
   */
  export type cattle_healthsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_healths.
     */
    data: cattle_healthsCreateManyInput | cattle_healthsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_healths createManyAndReturn
   */
  export type cattle_healthsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_healths.
     */
    data: cattle_healthsCreateManyInput | cattle_healthsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_healths update
   */
  export type cattle_healthsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * The data needed to update a cattle_healths.
     */
    data: XOR<cattle_healthsUpdateInput, cattle_healthsUncheckedUpdateInput>
    /**
     * Choose, which cattle_healths to update.
     */
    where: cattle_healthsWhereUniqueInput
  }

  /**
   * cattle_healths updateMany
   */
  export type cattle_healthsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_healths.
     */
    data: XOR<cattle_healthsUpdateManyMutationInput, cattle_healthsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_healths to update
     */
    where?: cattle_healthsWhereInput
    /**
     * Limit how many cattle_healths to update.
     */
    limit?: number
  }

  /**
   * cattle_healths updateManyAndReturn
   */
  export type cattle_healthsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * The data used to update cattle_healths.
     */
    data: XOR<cattle_healthsUpdateManyMutationInput, cattle_healthsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_healths to update
     */
    where?: cattle_healthsWhereInput
    /**
     * Limit how many cattle_healths to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_healths upsert
   */
  export type cattle_healthsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * The filter to search for the cattle_healths to update in case it exists.
     */
    where: cattle_healthsWhereUniqueInput
    /**
     * In case the cattle_healths found by the `where` argument doesn't exist, create a new cattle_healths with this data.
     */
    create: XOR<cattle_healthsCreateInput, cattle_healthsUncheckedCreateInput>
    /**
     * In case the cattle_healths was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_healthsUpdateInput, cattle_healthsUncheckedUpdateInput>
  }

  /**
   * cattle_healths delete
   */
  export type cattle_healthsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    /**
     * Filter which cattle_healths to delete.
     */
    where: cattle_healthsWhereUniqueInput
  }

  /**
   * cattle_healths deleteMany
   */
  export type cattle_healthsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_healths to delete
     */
    where?: cattle_healthsWhereInput
    /**
     * Limit how many cattle_healths to delete.
     */
    limit?: number
  }

  /**
   * cattle_healths without action
   */
  export type cattle_healthsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
  }


  /**
   * Model cattle_matching_order_staged
   */

  export type AggregateCattle_matching_order_staged = {
    _count: Cattle_matching_order_stagedCountAggregateOutputType | null
    _min: Cattle_matching_order_stagedMinAggregateOutputType | null
    _max: Cattle_matching_order_stagedMaxAggregateOutputType | null
  }

  export type Cattle_matching_order_stagedMinAggregateOutputType = {
    id: string | null
    staged_id: string | null
    order_request_id: string | null
    farm_sourcing_id: string | null
    is_exists_all: boolean | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_matching_order_stagedMaxAggregateOutputType = {
    id: string | null
    staged_id: string | null
    order_request_id: string | null
    farm_sourcing_id: string | null
    is_exists_all: boolean | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_matching_order_stagedCountAggregateOutputType = {
    id: number
    staged_id: number
    order_request_id: number
    farm_sourcing_id: number
    cattle_ids: number
    is_exists_all: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_matching_order_stagedMinAggregateInputType = {
    id?: true
    staged_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    is_exists_all?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_matching_order_stagedMaxAggregateInputType = {
    id?: true
    staged_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    is_exists_all?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_matching_order_stagedCountAggregateInputType = {
    id?: true
    staged_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    cattle_ids?: true
    is_exists_all?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_matching_order_stagedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_matching_order_staged to aggregate.
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_matching_order_stageds to fetch.
     */
    orderBy?: cattle_matching_order_stagedOrderByWithRelationInput | cattle_matching_order_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_matching_order_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_matching_order_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_matching_order_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_matching_order_stageds
    **/
    _count?: true | Cattle_matching_order_stagedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_matching_order_stagedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_matching_order_stagedMaxAggregateInputType
  }

  export type GetCattle_matching_order_stagedAggregateType<T extends Cattle_matching_order_stagedAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_matching_order_staged]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_matching_order_staged[P]>
      : GetScalarType<T[P], AggregateCattle_matching_order_staged[P]>
  }




  export type cattle_matching_order_stagedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_matching_order_stagedWhereInput
    orderBy?: cattle_matching_order_stagedOrderByWithAggregationInput | cattle_matching_order_stagedOrderByWithAggregationInput[]
    by: Cattle_matching_order_stagedScalarFieldEnum[] | Cattle_matching_order_stagedScalarFieldEnum
    having?: cattle_matching_order_stagedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_matching_order_stagedCountAggregateInputType | true
    _min?: Cattle_matching_order_stagedMinAggregateInputType
    _max?: Cattle_matching_order_stagedMaxAggregateInputType
  }

  export type Cattle_matching_order_stagedGroupByOutputType = {
    id: string
    staged_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_ids: string[]
    is_exists_all: boolean
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_matching_order_stagedCountAggregateOutputType | null
    _min: Cattle_matching_order_stagedMinAggregateOutputType | null
    _max: Cattle_matching_order_stagedMaxAggregateOutputType | null
  }

  type GetCattle_matching_order_stagedGroupByPayload<T extends cattle_matching_order_stagedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_matching_order_stagedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_matching_order_stagedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_matching_order_stagedGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_matching_order_stagedGroupByOutputType[P]>
        }
      >
    >


  export type cattle_matching_order_stagedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_ids?: boolean
    is_exists_all?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_matching_order_staged"]>

  export type cattle_matching_order_stagedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_ids?: boolean
    is_exists_all?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_matching_order_staged"]>

  export type cattle_matching_order_stagedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_ids?: boolean
    is_exists_all?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_matching_order_staged"]>

  export type cattle_matching_order_stagedSelectScalar = {
    id?: boolean
    staged_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_ids?: boolean
    is_exists_all?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_matching_order_stagedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staged_id" | "order_request_id" | "farm_sourcing_id" | "cattle_ids" | "is_exists_all" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_matching_order_staged"]>

  export type $cattle_matching_order_stagedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_matching_order_staged"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      staged_id: string
      order_request_id: string
      farm_sourcing_id: string
      cattle_ids: string[]
      is_exists_all: boolean
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_matching_order_staged"]>
    composites: {}
  }

  type cattle_matching_order_stagedGetPayload<S extends boolean | null | undefined | cattle_matching_order_stagedDefaultArgs> = $Result.GetResult<Prisma.$cattle_matching_order_stagedPayload, S>

  type cattle_matching_order_stagedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_matching_order_stagedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_matching_order_stagedCountAggregateInputType | true
    }

  export interface cattle_matching_order_stagedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_matching_order_staged'], meta: { name: 'cattle_matching_order_staged' } }
    /**
     * Find zero or one Cattle_matching_order_staged that matches the filter.
     * @param {cattle_matching_order_stagedFindUniqueArgs} args - Arguments to find a Cattle_matching_order_staged
     * @example
     * // Get one Cattle_matching_order_staged
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_matching_order_stagedFindUniqueArgs>(args: SelectSubset<T, cattle_matching_order_stagedFindUniqueArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_matching_order_staged that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_matching_order_stagedFindUniqueOrThrowArgs} args - Arguments to find a Cattle_matching_order_staged
     * @example
     * // Get one Cattle_matching_order_staged
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_matching_order_stagedFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_matching_order_stagedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_matching_order_staged that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_matching_order_stagedFindFirstArgs} args - Arguments to find a Cattle_matching_order_staged
     * @example
     * // Get one Cattle_matching_order_staged
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_matching_order_stagedFindFirstArgs>(args?: SelectSubset<T, cattle_matching_order_stagedFindFirstArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_matching_order_staged that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_matching_order_stagedFindFirstOrThrowArgs} args - Arguments to find a Cattle_matching_order_staged
     * @example
     * // Get one Cattle_matching_order_staged
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_matching_order_stagedFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_matching_order_stagedFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_matching_order_stageds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_matching_order_stagedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_matching_order_stageds
     * const cattle_matching_order_stageds = await prisma.cattle_matching_order_staged.findMany()
     * 
     * // Get first 10 Cattle_matching_order_stageds
     * const cattle_matching_order_stageds = await prisma.cattle_matching_order_staged.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_matching_order_stagedWithIdOnly = await prisma.cattle_matching_order_staged.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_matching_order_stagedFindManyArgs>(args?: SelectSubset<T, cattle_matching_order_stagedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_matching_order_staged.
     * @param {cattle_matching_order_stagedCreateArgs} args - Arguments to create a Cattle_matching_order_staged.
     * @example
     * // Create one Cattle_matching_order_staged
     * const Cattle_matching_order_staged = await prisma.cattle_matching_order_staged.create({
     *   data: {
     *     // ... data to create a Cattle_matching_order_staged
     *   }
     * })
     * 
     */
    create<T extends cattle_matching_order_stagedCreateArgs>(args: SelectSubset<T, cattle_matching_order_stagedCreateArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_matching_order_stageds.
     * @param {cattle_matching_order_stagedCreateManyArgs} args - Arguments to create many Cattle_matching_order_stageds.
     * @example
     * // Create many Cattle_matching_order_stageds
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_matching_order_stagedCreateManyArgs>(args?: SelectSubset<T, cattle_matching_order_stagedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_matching_order_stageds and returns the data saved in the database.
     * @param {cattle_matching_order_stagedCreateManyAndReturnArgs} args - Arguments to create many Cattle_matching_order_stageds.
     * @example
     * // Create many Cattle_matching_order_stageds
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_matching_order_stageds and only return the `id`
     * const cattle_matching_order_stagedWithIdOnly = await prisma.cattle_matching_order_staged.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_matching_order_stagedCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_matching_order_stagedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_matching_order_staged.
     * @param {cattle_matching_order_stagedDeleteArgs} args - Arguments to delete one Cattle_matching_order_staged.
     * @example
     * // Delete one Cattle_matching_order_staged
     * const Cattle_matching_order_staged = await prisma.cattle_matching_order_staged.delete({
     *   where: {
     *     // ... filter to delete one Cattle_matching_order_staged
     *   }
     * })
     * 
     */
    delete<T extends cattle_matching_order_stagedDeleteArgs>(args: SelectSubset<T, cattle_matching_order_stagedDeleteArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_matching_order_staged.
     * @param {cattle_matching_order_stagedUpdateArgs} args - Arguments to update one Cattle_matching_order_staged.
     * @example
     * // Update one Cattle_matching_order_staged
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_matching_order_stagedUpdateArgs>(args: SelectSubset<T, cattle_matching_order_stagedUpdateArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_matching_order_stageds.
     * @param {cattle_matching_order_stagedDeleteManyArgs} args - Arguments to filter Cattle_matching_order_stageds to delete.
     * @example
     * // Delete a few Cattle_matching_order_stageds
     * const { count } = await prisma.cattle_matching_order_staged.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_matching_order_stagedDeleteManyArgs>(args?: SelectSubset<T, cattle_matching_order_stagedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_matching_order_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_matching_order_stagedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_matching_order_stageds
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_matching_order_stagedUpdateManyArgs>(args: SelectSubset<T, cattle_matching_order_stagedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_matching_order_stageds and returns the data updated in the database.
     * @param {cattle_matching_order_stagedUpdateManyAndReturnArgs} args - Arguments to update many Cattle_matching_order_stageds.
     * @example
     * // Update many Cattle_matching_order_stageds
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_matching_order_stageds and only return the `id`
     * const cattle_matching_order_stagedWithIdOnly = await prisma.cattle_matching_order_staged.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_matching_order_stagedUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_matching_order_stagedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_matching_order_staged.
     * @param {cattle_matching_order_stagedUpsertArgs} args - Arguments to update or create a Cattle_matching_order_staged.
     * @example
     * // Update or create a Cattle_matching_order_staged
     * const cattle_matching_order_staged = await prisma.cattle_matching_order_staged.upsert({
     *   create: {
     *     // ... data to create a Cattle_matching_order_staged
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_matching_order_staged we want to update
     *   }
     * })
     */
    upsert<T extends cattle_matching_order_stagedUpsertArgs>(args: SelectSubset<T, cattle_matching_order_stagedUpsertArgs<ExtArgs>>): Prisma__cattle_matching_order_stagedClient<$Result.GetResult<Prisma.$cattle_matching_order_stagedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_matching_order_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_matching_order_stagedCountArgs} args - Arguments to filter Cattle_matching_order_stageds to count.
     * @example
     * // Count the number of Cattle_matching_order_stageds
     * const count = await prisma.cattle_matching_order_staged.count({
     *   where: {
     *     // ... the filter for the Cattle_matching_order_stageds we want to count
     *   }
     * })
    **/
    count<T extends cattle_matching_order_stagedCountArgs>(
      args?: Subset<T, cattle_matching_order_stagedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_matching_order_stagedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_matching_order_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_matching_order_stagedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_matching_order_stagedAggregateArgs>(args: Subset<T, Cattle_matching_order_stagedAggregateArgs>): Prisma.PrismaPromise<GetCattle_matching_order_stagedAggregateType<T>>

    /**
     * Group by Cattle_matching_order_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_matching_order_stagedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_matching_order_stagedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_matching_order_stagedGroupByArgs['orderBy'] }
        : { orderBy?: cattle_matching_order_stagedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_matching_order_stagedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_matching_order_stagedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_matching_order_staged model
   */
  readonly fields: cattle_matching_order_stagedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_matching_order_staged.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_matching_order_stagedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_matching_order_staged model
   */
  interface cattle_matching_order_stagedFieldRefs {
    readonly id: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly staged_id: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly order_request_id: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly farm_sourcing_id: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly cattle_ids: FieldRef<"cattle_matching_order_staged", 'String[]'>
    readonly is_exists_all: FieldRef<"cattle_matching_order_staged", 'Boolean'>
    readonly created_at: FieldRef<"cattle_matching_order_staged", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly created_by: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly updated_at: FieldRef<"cattle_matching_order_staged", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_matching_order_staged", 'String'>
    readonly updated_by: FieldRef<"cattle_matching_order_staged", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_matching_order_staged findUnique
   */
  export type cattle_matching_order_stagedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_matching_order_staged to fetch.
     */
    where: cattle_matching_order_stagedWhereUniqueInput
  }

  /**
   * cattle_matching_order_staged findUniqueOrThrow
   */
  export type cattle_matching_order_stagedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_matching_order_staged to fetch.
     */
    where: cattle_matching_order_stagedWhereUniqueInput
  }

  /**
   * cattle_matching_order_staged findFirst
   */
  export type cattle_matching_order_stagedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_matching_order_staged to fetch.
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_matching_order_stageds to fetch.
     */
    orderBy?: cattle_matching_order_stagedOrderByWithRelationInput | cattle_matching_order_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_matching_order_stageds.
     */
    cursor?: cattle_matching_order_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_matching_order_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_matching_order_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_matching_order_stageds.
     */
    distinct?: Cattle_matching_order_stagedScalarFieldEnum | Cattle_matching_order_stagedScalarFieldEnum[]
  }

  /**
   * cattle_matching_order_staged findFirstOrThrow
   */
  export type cattle_matching_order_stagedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_matching_order_staged to fetch.
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_matching_order_stageds to fetch.
     */
    orderBy?: cattle_matching_order_stagedOrderByWithRelationInput | cattle_matching_order_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_matching_order_stageds.
     */
    cursor?: cattle_matching_order_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_matching_order_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_matching_order_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_matching_order_stageds.
     */
    distinct?: Cattle_matching_order_stagedScalarFieldEnum | Cattle_matching_order_stagedScalarFieldEnum[]
  }

  /**
   * cattle_matching_order_staged findMany
   */
  export type cattle_matching_order_stagedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * Filter, which cattle_matching_order_stageds to fetch.
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_matching_order_stageds to fetch.
     */
    orderBy?: cattle_matching_order_stagedOrderByWithRelationInput | cattle_matching_order_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_matching_order_stageds.
     */
    cursor?: cattle_matching_order_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_matching_order_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_matching_order_stageds.
     */
    skip?: number
    distinct?: Cattle_matching_order_stagedScalarFieldEnum | Cattle_matching_order_stagedScalarFieldEnum[]
  }

  /**
   * cattle_matching_order_staged create
   */
  export type cattle_matching_order_stagedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * The data needed to create a cattle_matching_order_staged.
     */
    data: XOR<cattle_matching_order_stagedCreateInput, cattle_matching_order_stagedUncheckedCreateInput>
  }

  /**
   * cattle_matching_order_staged createMany
   */
  export type cattle_matching_order_stagedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_matching_order_stageds.
     */
    data: cattle_matching_order_stagedCreateManyInput | cattle_matching_order_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_matching_order_staged createManyAndReturn
   */
  export type cattle_matching_order_stagedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_matching_order_stageds.
     */
    data: cattle_matching_order_stagedCreateManyInput | cattle_matching_order_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_matching_order_staged update
   */
  export type cattle_matching_order_stagedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * The data needed to update a cattle_matching_order_staged.
     */
    data: XOR<cattle_matching_order_stagedUpdateInput, cattle_matching_order_stagedUncheckedUpdateInput>
    /**
     * Choose, which cattle_matching_order_staged to update.
     */
    where: cattle_matching_order_stagedWhereUniqueInput
  }

  /**
   * cattle_matching_order_staged updateMany
   */
  export type cattle_matching_order_stagedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_matching_order_stageds.
     */
    data: XOR<cattle_matching_order_stagedUpdateManyMutationInput, cattle_matching_order_stagedUncheckedUpdateManyInput>
    /**
     * Filter which cattle_matching_order_stageds to update
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * Limit how many cattle_matching_order_stageds to update.
     */
    limit?: number
  }

  /**
   * cattle_matching_order_staged updateManyAndReturn
   */
  export type cattle_matching_order_stagedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * The data used to update cattle_matching_order_stageds.
     */
    data: XOR<cattle_matching_order_stagedUpdateManyMutationInput, cattle_matching_order_stagedUncheckedUpdateManyInput>
    /**
     * Filter which cattle_matching_order_stageds to update
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * Limit how many cattle_matching_order_stageds to update.
     */
    limit?: number
  }

  /**
   * cattle_matching_order_staged upsert
   */
  export type cattle_matching_order_stagedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * The filter to search for the cattle_matching_order_staged to update in case it exists.
     */
    where: cattle_matching_order_stagedWhereUniqueInput
    /**
     * In case the cattle_matching_order_staged found by the `where` argument doesn't exist, create a new cattle_matching_order_staged with this data.
     */
    create: XOR<cattle_matching_order_stagedCreateInput, cattle_matching_order_stagedUncheckedCreateInput>
    /**
     * In case the cattle_matching_order_staged was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_matching_order_stagedUpdateInput, cattle_matching_order_stagedUncheckedUpdateInput>
  }

  /**
   * cattle_matching_order_staged delete
   */
  export type cattle_matching_order_stagedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
    /**
     * Filter which cattle_matching_order_staged to delete.
     */
    where: cattle_matching_order_stagedWhereUniqueInput
  }

  /**
   * cattle_matching_order_staged deleteMany
   */
  export type cattle_matching_order_stagedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_matching_order_stageds to delete
     */
    where?: cattle_matching_order_stagedWhereInput
    /**
     * Limit how many cattle_matching_order_stageds to delete.
     */
    limit?: number
  }

  /**
   * cattle_matching_order_staged without action
   */
  export type cattle_matching_order_stagedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_matching_order_staged
     */
    select?: cattle_matching_order_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_matching_order_staged
     */
    omit?: cattle_matching_order_stagedOmit<ExtArgs> | null
  }


  /**
   * Model cattle_sourcing
   */

  export type AggregateCattle_sourcing = {
    _count: Cattle_sourcingCountAggregateOutputType | null
    _min: Cattle_sourcingMinAggregateOutputType | null
    _max: Cattle_sourcingMaxAggregateOutputType | null
  }

  export type Cattle_sourcingMinAggregateOutputType = {
    id: string | null
    order_id: string | null
    order_request_id: string | null
    farm_sourcing_id: string | null
    cattle_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_sourcingMaxAggregateOutputType = {
    id: string | null
    order_id: string | null
    order_request_id: string | null
    farm_sourcing_id: string | null
    cattle_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_sourcingCountAggregateOutputType = {
    id: number
    order_id: number
    order_request_id: number
    farm_sourcing_id: number
    cattle_id: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_sourcingMinAggregateInputType = {
    id?: true
    order_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    cattle_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_sourcingMaxAggregateInputType = {
    id?: true
    order_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    cattle_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_sourcingCountAggregateInputType = {
    id?: true
    order_id?: true
    order_request_id?: true
    farm_sourcing_id?: true
    cattle_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_sourcingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_sourcing to aggregate.
     */
    where?: cattle_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_sourcings to fetch.
     */
    orderBy?: cattle_sourcingOrderByWithRelationInput | cattle_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_sourcings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_sourcings
    **/
    _count?: true | Cattle_sourcingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_sourcingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_sourcingMaxAggregateInputType
  }

  export type GetCattle_sourcingAggregateType<T extends Cattle_sourcingAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_sourcing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_sourcing[P]>
      : GetScalarType<T[P], AggregateCattle_sourcing[P]>
  }




  export type cattle_sourcingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_sourcingWhereInput
    orderBy?: cattle_sourcingOrderByWithAggregationInput | cattle_sourcingOrderByWithAggregationInput[]
    by: Cattle_sourcingScalarFieldEnum[] | Cattle_sourcingScalarFieldEnum
    having?: cattle_sourcingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_sourcingCountAggregateInputType | true
    _min?: Cattle_sourcingMinAggregateInputType
    _max?: Cattle_sourcingMaxAggregateInputType
  }

  export type Cattle_sourcingGroupByOutputType = {
    id: string
    order_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_id: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_sourcingCountAggregateOutputType | null
    _min: Cattle_sourcingMinAggregateOutputType | null
    _max: Cattle_sourcingMaxAggregateOutputType | null
  }

  type GetCattle_sourcingGroupByPayload<T extends cattle_sourcingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_sourcingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_sourcingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_sourcingGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_sourcingGroupByOutputType[P]>
        }
      >
    >


  export type cattle_sourcingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farm_sourcing?: boolean | farm_sourcingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_sourcing"]>

  export type cattle_sourcingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farm_sourcing?: boolean | farm_sourcingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_sourcing"]>

  export type cattle_sourcingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farm_sourcing?: boolean | farm_sourcingDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_sourcing"]>

  export type cattle_sourcingSelectScalar = {
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_sourcing_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_sourcingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "order_request_id" | "farm_sourcing_id" | "cattle_id" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_sourcing"]>
  export type cattle_sourcingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farm_sourcing?: boolean | farm_sourcingDefaultArgs<ExtArgs>
  }
  export type cattle_sourcingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farm_sourcing?: boolean | farm_sourcingDefaultArgs<ExtArgs>
  }
  export type cattle_sourcingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farm_sourcing?: boolean | farm_sourcingDefaultArgs<ExtArgs>
  }

  export type $cattle_sourcingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_sourcing"
    objects: {
      farm_sourcing: Prisma.$farm_sourcingPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order_id: string
      order_request_id: string
      farm_sourcing_id: string
      cattle_id: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_sourcing"]>
    composites: {}
  }

  type cattle_sourcingGetPayload<S extends boolean | null | undefined | cattle_sourcingDefaultArgs> = $Result.GetResult<Prisma.$cattle_sourcingPayload, S>

  type cattle_sourcingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_sourcingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_sourcingCountAggregateInputType | true
    }

  export interface cattle_sourcingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_sourcing'], meta: { name: 'cattle_sourcing' } }
    /**
     * Find zero or one Cattle_sourcing that matches the filter.
     * @param {cattle_sourcingFindUniqueArgs} args - Arguments to find a Cattle_sourcing
     * @example
     * // Get one Cattle_sourcing
     * const cattle_sourcing = await prisma.cattle_sourcing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_sourcingFindUniqueArgs>(args: SelectSubset<T, cattle_sourcingFindUniqueArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_sourcing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_sourcingFindUniqueOrThrowArgs} args - Arguments to find a Cattle_sourcing
     * @example
     * // Get one Cattle_sourcing
     * const cattle_sourcing = await prisma.cattle_sourcing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_sourcingFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_sourcingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_sourcing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_sourcingFindFirstArgs} args - Arguments to find a Cattle_sourcing
     * @example
     * // Get one Cattle_sourcing
     * const cattle_sourcing = await prisma.cattle_sourcing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_sourcingFindFirstArgs>(args?: SelectSubset<T, cattle_sourcingFindFirstArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_sourcing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_sourcingFindFirstOrThrowArgs} args - Arguments to find a Cattle_sourcing
     * @example
     * // Get one Cattle_sourcing
     * const cattle_sourcing = await prisma.cattle_sourcing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_sourcingFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_sourcingFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_sourcings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_sourcingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_sourcings
     * const cattle_sourcings = await prisma.cattle_sourcing.findMany()
     * 
     * // Get first 10 Cattle_sourcings
     * const cattle_sourcings = await prisma.cattle_sourcing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_sourcingWithIdOnly = await prisma.cattle_sourcing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_sourcingFindManyArgs>(args?: SelectSubset<T, cattle_sourcingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_sourcing.
     * @param {cattle_sourcingCreateArgs} args - Arguments to create a Cattle_sourcing.
     * @example
     * // Create one Cattle_sourcing
     * const Cattle_sourcing = await prisma.cattle_sourcing.create({
     *   data: {
     *     // ... data to create a Cattle_sourcing
     *   }
     * })
     * 
     */
    create<T extends cattle_sourcingCreateArgs>(args: SelectSubset<T, cattle_sourcingCreateArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_sourcings.
     * @param {cattle_sourcingCreateManyArgs} args - Arguments to create many Cattle_sourcings.
     * @example
     * // Create many Cattle_sourcings
     * const cattle_sourcing = await prisma.cattle_sourcing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_sourcingCreateManyArgs>(args?: SelectSubset<T, cattle_sourcingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_sourcings and returns the data saved in the database.
     * @param {cattle_sourcingCreateManyAndReturnArgs} args - Arguments to create many Cattle_sourcings.
     * @example
     * // Create many Cattle_sourcings
     * const cattle_sourcing = await prisma.cattle_sourcing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_sourcings and only return the `id`
     * const cattle_sourcingWithIdOnly = await prisma.cattle_sourcing.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_sourcingCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_sourcingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_sourcing.
     * @param {cattle_sourcingDeleteArgs} args - Arguments to delete one Cattle_sourcing.
     * @example
     * // Delete one Cattle_sourcing
     * const Cattle_sourcing = await prisma.cattle_sourcing.delete({
     *   where: {
     *     // ... filter to delete one Cattle_sourcing
     *   }
     * })
     * 
     */
    delete<T extends cattle_sourcingDeleteArgs>(args: SelectSubset<T, cattle_sourcingDeleteArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_sourcing.
     * @param {cattle_sourcingUpdateArgs} args - Arguments to update one Cattle_sourcing.
     * @example
     * // Update one Cattle_sourcing
     * const cattle_sourcing = await prisma.cattle_sourcing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_sourcingUpdateArgs>(args: SelectSubset<T, cattle_sourcingUpdateArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_sourcings.
     * @param {cattle_sourcingDeleteManyArgs} args - Arguments to filter Cattle_sourcings to delete.
     * @example
     * // Delete a few Cattle_sourcings
     * const { count } = await prisma.cattle_sourcing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_sourcingDeleteManyArgs>(args?: SelectSubset<T, cattle_sourcingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_sourcings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_sourcingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_sourcings
     * const cattle_sourcing = await prisma.cattle_sourcing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_sourcingUpdateManyArgs>(args: SelectSubset<T, cattle_sourcingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_sourcings and returns the data updated in the database.
     * @param {cattle_sourcingUpdateManyAndReturnArgs} args - Arguments to update many Cattle_sourcings.
     * @example
     * // Update many Cattle_sourcings
     * const cattle_sourcing = await prisma.cattle_sourcing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_sourcings and only return the `id`
     * const cattle_sourcingWithIdOnly = await prisma.cattle_sourcing.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_sourcingUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_sourcingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_sourcing.
     * @param {cattle_sourcingUpsertArgs} args - Arguments to update or create a Cattle_sourcing.
     * @example
     * // Update or create a Cattle_sourcing
     * const cattle_sourcing = await prisma.cattle_sourcing.upsert({
     *   create: {
     *     // ... data to create a Cattle_sourcing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_sourcing we want to update
     *   }
     * })
     */
    upsert<T extends cattle_sourcingUpsertArgs>(args: SelectSubset<T, cattle_sourcingUpsertArgs<ExtArgs>>): Prisma__cattle_sourcingClient<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_sourcings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_sourcingCountArgs} args - Arguments to filter Cattle_sourcings to count.
     * @example
     * // Count the number of Cattle_sourcings
     * const count = await prisma.cattle_sourcing.count({
     *   where: {
     *     // ... the filter for the Cattle_sourcings we want to count
     *   }
     * })
    **/
    count<T extends cattle_sourcingCountArgs>(
      args?: Subset<T, cattle_sourcingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_sourcingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_sourcing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_sourcingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_sourcingAggregateArgs>(args: Subset<T, Cattle_sourcingAggregateArgs>): Prisma.PrismaPromise<GetCattle_sourcingAggregateType<T>>

    /**
     * Group by Cattle_sourcing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_sourcingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_sourcingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_sourcingGroupByArgs['orderBy'] }
        : { orderBy?: cattle_sourcingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_sourcingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_sourcingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_sourcing model
   */
  readonly fields: cattle_sourcingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_sourcing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_sourcingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farm_sourcing<T extends farm_sourcingDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farm_sourcingDefaultArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_sourcing model
   */
  interface cattle_sourcingFieldRefs {
    readonly id: FieldRef<"cattle_sourcing", 'String'>
    readonly order_id: FieldRef<"cattle_sourcing", 'String'>
    readonly order_request_id: FieldRef<"cattle_sourcing", 'String'>
    readonly farm_sourcing_id: FieldRef<"cattle_sourcing", 'String'>
    readonly cattle_id: FieldRef<"cattle_sourcing", 'String'>
    readonly created_at: FieldRef<"cattle_sourcing", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_sourcing", 'String'>
    readonly created_by: FieldRef<"cattle_sourcing", 'String'>
    readonly updated_at: FieldRef<"cattle_sourcing", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_sourcing", 'String'>
    readonly updated_by: FieldRef<"cattle_sourcing", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_sourcing findUnique
   */
  export type cattle_sourcingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which cattle_sourcing to fetch.
     */
    where: cattle_sourcingWhereUniqueInput
  }

  /**
   * cattle_sourcing findUniqueOrThrow
   */
  export type cattle_sourcingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which cattle_sourcing to fetch.
     */
    where: cattle_sourcingWhereUniqueInput
  }

  /**
   * cattle_sourcing findFirst
   */
  export type cattle_sourcingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which cattle_sourcing to fetch.
     */
    where?: cattle_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_sourcings to fetch.
     */
    orderBy?: cattle_sourcingOrderByWithRelationInput | cattle_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_sourcings.
     */
    cursor?: cattle_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_sourcings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_sourcings.
     */
    distinct?: Cattle_sourcingScalarFieldEnum | Cattle_sourcingScalarFieldEnum[]
  }

  /**
   * cattle_sourcing findFirstOrThrow
   */
  export type cattle_sourcingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which cattle_sourcing to fetch.
     */
    where?: cattle_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_sourcings to fetch.
     */
    orderBy?: cattle_sourcingOrderByWithRelationInput | cattle_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_sourcings.
     */
    cursor?: cattle_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_sourcings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_sourcings.
     */
    distinct?: Cattle_sourcingScalarFieldEnum | Cattle_sourcingScalarFieldEnum[]
  }

  /**
   * cattle_sourcing findMany
   */
  export type cattle_sourcingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which cattle_sourcings to fetch.
     */
    where?: cattle_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_sourcings to fetch.
     */
    orderBy?: cattle_sourcingOrderByWithRelationInput | cattle_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_sourcings.
     */
    cursor?: cattle_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_sourcings.
     */
    skip?: number
    distinct?: Cattle_sourcingScalarFieldEnum | Cattle_sourcingScalarFieldEnum[]
  }

  /**
   * cattle_sourcing create
   */
  export type cattle_sourcingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * The data needed to create a cattle_sourcing.
     */
    data: XOR<cattle_sourcingCreateInput, cattle_sourcingUncheckedCreateInput>
  }

  /**
   * cattle_sourcing createMany
   */
  export type cattle_sourcingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_sourcings.
     */
    data: cattle_sourcingCreateManyInput | cattle_sourcingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_sourcing createManyAndReturn
   */
  export type cattle_sourcingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_sourcings.
     */
    data: cattle_sourcingCreateManyInput | cattle_sourcingCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_sourcing update
   */
  export type cattle_sourcingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * The data needed to update a cattle_sourcing.
     */
    data: XOR<cattle_sourcingUpdateInput, cattle_sourcingUncheckedUpdateInput>
    /**
     * Choose, which cattle_sourcing to update.
     */
    where: cattle_sourcingWhereUniqueInput
  }

  /**
   * cattle_sourcing updateMany
   */
  export type cattle_sourcingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_sourcings.
     */
    data: XOR<cattle_sourcingUpdateManyMutationInput, cattle_sourcingUncheckedUpdateManyInput>
    /**
     * Filter which cattle_sourcings to update
     */
    where?: cattle_sourcingWhereInput
    /**
     * Limit how many cattle_sourcings to update.
     */
    limit?: number
  }

  /**
   * cattle_sourcing updateManyAndReturn
   */
  export type cattle_sourcingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * The data used to update cattle_sourcings.
     */
    data: XOR<cattle_sourcingUpdateManyMutationInput, cattle_sourcingUncheckedUpdateManyInput>
    /**
     * Filter which cattle_sourcings to update
     */
    where?: cattle_sourcingWhereInput
    /**
     * Limit how many cattle_sourcings to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_sourcing upsert
   */
  export type cattle_sourcingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * The filter to search for the cattle_sourcing to update in case it exists.
     */
    where: cattle_sourcingWhereUniqueInput
    /**
     * In case the cattle_sourcing found by the `where` argument doesn't exist, create a new cattle_sourcing with this data.
     */
    create: XOR<cattle_sourcingCreateInput, cattle_sourcingUncheckedCreateInput>
    /**
     * In case the cattle_sourcing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_sourcingUpdateInput, cattle_sourcingUncheckedUpdateInput>
  }

  /**
   * cattle_sourcing delete
   */
  export type cattle_sourcingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    /**
     * Filter which cattle_sourcing to delete.
     */
    where: cattle_sourcingWhereUniqueInput
  }

  /**
   * cattle_sourcing deleteMany
   */
  export type cattle_sourcingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_sourcings to delete
     */
    where?: cattle_sourcingWhereInput
    /**
     * Limit how many cattle_sourcings to delete.
     */
    limit?: number
  }

  /**
   * cattle_sourcing without action
   */
  export type cattle_sourcingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
  }


  /**
   * Model cattle_types
   */

  export type AggregateCattle_types = {
    _count: Cattle_typesCountAggregateOutputType | null
    _min: Cattle_typesMinAggregateOutputType | null
    _max: Cattle_typesMaxAggregateOutputType | null
  }

  export type Cattle_typesMinAggregateOutputType = {
    id: string | null
    name_en: string | null
    name_th: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_typesMaxAggregateOutputType = {
    id: string | null
    name_en: string | null
    name_th: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_typesCountAggregateOutputType = {
    id: number
    name_en: number
    name_th: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_typesMinAggregateInputType = {
    id?: true
    name_en?: true
    name_th?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_typesMaxAggregateInputType = {
    id?: true
    name_en?: true
    name_th?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_typesCountAggregateInputType = {
    id?: true
    name_en?: true
    name_th?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_typesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_types to aggregate.
     */
    where?: cattle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_types to fetch.
     */
    orderBy?: cattle_typesOrderByWithRelationInput | cattle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_types
    **/
    _count?: true | Cattle_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_typesMaxAggregateInputType
  }

  export type GetCattle_typesAggregateType<T extends Cattle_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_types[P]>
      : GetScalarType<T[P], AggregateCattle_types[P]>
  }




  export type cattle_typesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_typesWhereInput
    orderBy?: cattle_typesOrderByWithAggregationInput | cattle_typesOrderByWithAggregationInput[]
    by: Cattle_typesScalarFieldEnum[] | Cattle_typesScalarFieldEnum
    having?: cattle_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_typesCountAggregateInputType | true
    _min?: Cattle_typesMinAggregateInputType
    _max?: Cattle_typesMaxAggregateInputType
  }

  export type Cattle_typesGroupByOutputType = {
    id: string
    name_en: string
    name_th: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_typesCountAggregateOutputType | null
    _min: Cattle_typesMinAggregateOutputType | null
    _max: Cattle_typesMaxAggregateOutputType | null
  }

  type GetCattle_typesGroupByPayload<T extends cattle_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_typesGroupByOutputType[P]>
        }
      >
    >


  export type cattle_typesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_types"]>

  export type cattle_typesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_types"]>

  export type cattle_typesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["cattle_types"]>

  export type cattle_typesSelectScalar = {
    id?: boolean
    name_en?: boolean
    name_th?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_typesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name_en" | "name_th" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_types"]>

  export type $cattle_typesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_types"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name_en: string
      name_th: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_types"]>
    composites: {}
  }

  type cattle_typesGetPayload<S extends boolean | null | undefined | cattle_typesDefaultArgs> = $Result.GetResult<Prisma.$cattle_typesPayload, S>

  type cattle_typesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_typesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_typesCountAggregateInputType | true
    }

  export interface cattle_typesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_types'], meta: { name: 'cattle_types' } }
    /**
     * Find zero or one Cattle_types that matches the filter.
     * @param {cattle_typesFindUniqueArgs} args - Arguments to find a Cattle_types
     * @example
     * // Get one Cattle_types
     * const cattle_types = await prisma.cattle_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_typesFindUniqueArgs>(args: SelectSubset<T, cattle_typesFindUniqueArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_types that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_typesFindUniqueOrThrowArgs} args - Arguments to find a Cattle_types
     * @example
     * // Get one Cattle_types
     * const cattle_types = await prisma.cattle_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_typesFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_typesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_typesFindFirstArgs} args - Arguments to find a Cattle_types
     * @example
     * // Get one Cattle_types
     * const cattle_types = await prisma.cattle_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_typesFindFirstArgs>(args?: SelectSubset<T, cattle_typesFindFirstArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_types that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_typesFindFirstOrThrowArgs} args - Arguments to find a Cattle_types
     * @example
     * // Get one Cattle_types
     * const cattle_types = await prisma.cattle_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_typesFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_typesFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_typesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_types
     * const cattle_types = await prisma.cattle_types.findMany()
     * 
     * // Get first 10 Cattle_types
     * const cattle_types = await prisma.cattle_types.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_typesWithIdOnly = await prisma.cattle_types.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_typesFindManyArgs>(args?: SelectSubset<T, cattle_typesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_types.
     * @param {cattle_typesCreateArgs} args - Arguments to create a Cattle_types.
     * @example
     * // Create one Cattle_types
     * const Cattle_types = await prisma.cattle_types.create({
     *   data: {
     *     // ... data to create a Cattle_types
     *   }
     * })
     * 
     */
    create<T extends cattle_typesCreateArgs>(args: SelectSubset<T, cattle_typesCreateArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_types.
     * @param {cattle_typesCreateManyArgs} args - Arguments to create many Cattle_types.
     * @example
     * // Create many Cattle_types
     * const cattle_types = await prisma.cattle_types.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_typesCreateManyArgs>(args?: SelectSubset<T, cattle_typesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_types and returns the data saved in the database.
     * @param {cattle_typesCreateManyAndReturnArgs} args - Arguments to create many Cattle_types.
     * @example
     * // Create many Cattle_types
     * const cattle_types = await prisma.cattle_types.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_types and only return the `id`
     * const cattle_typesWithIdOnly = await prisma.cattle_types.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_typesCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_typesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_types.
     * @param {cattle_typesDeleteArgs} args - Arguments to delete one Cattle_types.
     * @example
     * // Delete one Cattle_types
     * const Cattle_types = await prisma.cattle_types.delete({
     *   where: {
     *     // ... filter to delete one Cattle_types
     *   }
     * })
     * 
     */
    delete<T extends cattle_typesDeleteArgs>(args: SelectSubset<T, cattle_typesDeleteArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_types.
     * @param {cattle_typesUpdateArgs} args - Arguments to update one Cattle_types.
     * @example
     * // Update one Cattle_types
     * const cattle_types = await prisma.cattle_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_typesUpdateArgs>(args: SelectSubset<T, cattle_typesUpdateArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_types.
     * @param {cattle_typesDeleteManyArgs} args - Arguments to filter Cattle_types to delete.
     * @example
     * // Delete a few Cattle_types
     * const { count } = await prisma.cattle_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_typesDeleteManyArgs>(args?: SelectSubset<T, cattle_typesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_types
     * const cattle_types = await prisma.cattle_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_typesUpdateManyArgs>(args: SelectSubset<T, cattle_typesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_types and returns the data updated in the database.
     * @param {cattle_typesUpdateManyAndReturnArgs} args - Arguments to update many Cattle_types.
     * @example
     * // Update many Cattle_types
     * const cattle_types = await prisma.cattle_types.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_types and only return the `id`
     * const cattle_typesWithIdOnly = await prisma.cattle_types.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_typesUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_typesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_types.
     * @param {cattle_typesUpsertArgs} args - Arguments to update or create a Cattle_types.
     * @example
     * // Update or create a Cattle_types
     * const cattle_types = await prisma.cattle_types.upsert({
     *   create: {
     *     // ... data to create a Cattle_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_types we want to update
     *   }
     * })
     */
    upsert<T extends cattle_typesUpsertArgs>(args: SelectSubset<T, cattle_typesUpsertArgs<ExtArgs>>): Prisma__cattle_typesClient<$Result.GetResult<Prisma.$cattle_typesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_typesCountArgs} args - Arguments to filter Cattle_types to count.
     * @example
     * // Count the number of Cattle_types
     * const count = await prisma.cattle_types.count({
     *   where: {
     *     // ... the filter for the Cattle_types we want to count
     *   }
     * })
    **/
    count<T extends cattle_typesCountArgs>(
      args?: Subset<T, cattle_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_typesAggregateArgs>(args: Subset<T, Cattle_typesAggregateArgs>): Prisma.PrismaPromise<GetCattle_typesAggregateType<T>>

    /**
     * Group by Cattle_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_typesGroupByArgs['orderBy'] }
        : { orderBy?: cattle_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_types model
   */
  readonly fields: cattle_typesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_typesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_types model
   */
  interface cattle_typesFieldRefs {
    readonly id: FieldRef<"cattle_types", 'String'>
    readonly name_en: FieldRef<"cattle_types", 'String'>
    readonly name_th: FieldRef<"cattle_types", 'String'>
    readonly created_at: FieldRef<"cattle_types", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_types", 'String'>
    readonly created_by: FieldRef<"cattle_types", 'String'>
    readonly updated_at: FieldRef<"cattle_types", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_types", 'String'>
    readonly updated_by: FieldRef<"cattle_types", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_types findUnique
   */
  export type cattle_typesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * Filter, which cattle_types to fetch.
     */
    where: cattle_typesWhereUniqueInput
  }

  /**
   * cattle_types findUniqueOrThrow
   */
  export type cattle_typesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * Filter, which cattle_types to fetch.
     */
    where: cattle_typesWhereUniqueInput
  }

  /**
   * cattle_types findFirst
   */
  export type cattle_typesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * Filter, which cattle_types to fetch.
     */
    where?: cattle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_types to fetch.
     */
    orderBy?: cattle_typesOrderByWithRelationInput | cattle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_types.
     */
    cursor?: cattle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_types.
     */
    distinct?: Cattle_typesScalarFieldEnum | Cattle_typesScalarFieldEnum[]
  }

  /**
   * cattle_types findFirstOrThrow
   */
  export type cattle_typesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * Filter, which cattle_types to fetch.
     */
    where?: cattle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_types to fetch.
     */
    orderBy?: cattle_typesOrderByWithRelationInput | cattle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_types.
     */
    cursor?: cattle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_types.
     */
    distinct?: Cattle_typesScalarFieldEnum | Cattle_typesScalarFieldEnum[]
  }

  /**
   * cattle_types findMany
   */
  export type cattle_typesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * Filter, which cattle_types to fetch.
     */
    where?: cattle_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_types to fetch.
     */
    orderBy?: cattle_typesOrderByWithRelationInput | cattle_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_types.
     */
    cursor?: cattle_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_types.
     */
    skip?: number
    distinct?: Cattle_typesScalarFieldEnum | Cattle_typesScalarFieldEnum[]
  }

  /**
   * cattle_types create
   */
  export type cattle_typesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * The data needed to create a cattle_types.
     */
    data: XOR<cattle_typesCreateInput, cattle_typesUncheckedCreateInput>
  }

  /**
   * cattle_types createMany
   */
  export type cattle_typesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_types.
     */
    data: cattle_typesCreateManyInput | cattle_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_types createManyAndReturn
   */
  export type cattle_typesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_types.
     */
    data: cattle_typesCreateManyInput | cattle_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_types update
   */
  export type cattle_typesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * The data needed to update a cattle_types.
     */
    data: XOR<cattle_typesUpdateInput, cattle_typesUncheckedUpdateInput>
    /**
     * Choose, which cattle_types to update.
     */
    where: cattle_typesWhereUniqueInput
  }

  /**
   * cattle_types updateMany
   */
  export type cattle_typesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_types.
     */
    data: XOR<cattle_typesUpdateManyMutationInput, cattle_typesUncheckedUpdateManyInput>
    /**
     * Filter which cattle_types to update
     */
    where?: cattle_typesWhereInput
    /**
     * Limit how many cattle_types to update.
     */
    limit?: number
  }

  /**
   * cattle_types updateManyAndReturn
   */
  export type cattle_typesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * The data used to update cattle_types.
     */
    data: XOR<cattle_typesUpdateManyMutationInput, cattle_typesUncheckedUpdateManyInput>
    /**
     * Filter which cattle_types to update
     */
    where?: cattle_typesWhereInput
    /**
     * Limit how many cattle_types to update.
     */
    limit?: number
  }

  /**
   * cattle_types upsert
   */
  export type cattle_typesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * The filter to search for the cattle_types to update in case it exists.
     */
    where: cattle_typesWhereUniqueInput
    /**
     * In case the cattle_types found by the `where` argument doesn't exist, create a new cattle_types with this data.
     */
    create: XOR<cattle_typesCreateInput, cattle_typesUncheckedCreateInput>
    /**
     * In case the cattle_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_typesUpdateInput, cattle_typesUncheckedUpdateInput>
  }

  /**
   * cattle_types delete
   */
  export type cattle_typesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
    /**
     * Filter which cattle_types to delete.
     */
    where: cattle_typesWhereUniqueInput
  }

  /**
   * cattle_types deleteMany
   */
  export type cattle_typesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_types to delete
     */
    where?: cattle_typesWhereInput
    /**
     * Limit how many cattle_types to delete.
     */
    limit?: number
  }

  /**
   * cattle_types without action
   */
  export type cattle_typesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_types
     */
    select?: cattle_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_types
     */
    omit?: cattle_typesOmit<ExtArgs> | null
  }


  /**
   * Model cattle_vaccinations
   */

  export type AggregateCattle_vaccinations = {
    _count: Cattle_vaccinationsCountAggregateOutputType | null
    _min: Cattle_vaccinationsMinAggregateOutputType | null
    _max: Cattle_vaccinationsMaxAggregateOutputType | null
  }

  export type Cattle_vaccinationsMinAggregateOutputType = {
    id: string | null
    cattle_id: string | null
    vaccination_date: Date | null
    veterinary_name: string | null
    vaccine_type: string | null
    remark: string | null
    vaccine_id: string | null
    vaccine_lot_no: string | null
    vaccine_expiry_date: Date | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_vaccinationsMaxAggregateOutputType = {
    id: string | null
    cattle_id: string | null
    vaccination_date: Date | null
    veterinary_name: string | null
    vaccine_type: string | null
    remark: string | null
    vaccine_id: string | null
    vaccine_lot_no: string | null
    vaccine_expiry_date: Date | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Cattle_vaccinationsCountAggregateOutputType = {
    id: number
    cattle_id: number
    vaccination_date: number
    veterinary_name: number
    vaccine_type: number
    remark: number
    vaccine_id: number
    vaccine_lot_no: number
    vaccine_expiry_date: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Cattle_vaccinationsMinAggregateInputType = {
    id?: true
    cattle_id?: true
    vaccination_date?: true
    veterinary_name?: true
    vaccine_type?: true
    remark?: true
    vaccine_id?: true
    vaccine_lot_no?: true
    vaccine_expiry_date?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_vaccinationsMaxAggregateInputType = {
    id?: true
    cattle_id?: true
    vaccination_date?: true
    veterinary_name?: true
    vaccine_type?: true
    remark?: true
    vaccine_id?: true
    vaccine_lot_no?: true
    vaccine_expiry_date?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Cattle_vaccinationsCountAggregateInputType = {
    id?: true
    cattle_id?: true
    vaccination_date?: true
    veterinary_name?: true
    vaccine_type?: true
    remark?: true
    vaccine_id?: true
    vaccine_lot_no?: true
    vaccine_expiry_date?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Cattle_vaccinationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_vaccinations to aggregate.
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_vaccinations to fetch.
     */
    orderBy?: cattle_vaccinationsOrderByWithRelationInput | cattle_vaccinationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattle_vaccinationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_vaccinations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_vaccinations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattle_vaccinations
    **/
    _count?: true | Cattle_vaccinationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cattle_vaccinationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cattle_vaccinationsMaxAggregateInputType
  }

  export type GetCattle_vaccinationsAggregateType<T extends Cattle_vaccinationsAggregateArgs> = {
        [P in keyof T & keyof AggregateCattle_vaccinations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattle_vaccinations[P]>
      : GetScalarType<T[P], AggregateCattle_vaccinations[P]>
  }




  export type cattle_vaccinationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattle_vaccinationsWhereInput
    orderBy?: cattle_vaccinationsOrderByWithAggregationInput | cattle_vaccinationsOrderByWithAggregationInput[]
    by: Cattle_vaccinationsScalarFieldEnum[] | Cattle_vaccinationsScalarFieldEnum
    having?: cattle_vaccinationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cattle_vaccinationsCountAggregateInputType | true
    _min?: Cattle_vaccinationsMinAggregateInputType
    _max?: Cattle_vaccinationsMaxAggregateInputType
  }

  export type Cattle_vaccinationsGroupByOutputType = {
    id: string
    cattle_id: string
    vaccination_date: Date | null
    veterinary_name: string | null
    vaccine_type: string | null
    remark: string | null
    vaccine_id: string | null
    vaccine_lot_no: string | null
    vaccine_expiry_date: Date | null
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Cattle_vaccinationsCountAggregateOutputType | null
    _min: Cattle_vaccinationsMinAggregateOutputType | null
    _max: Cattle_vaccinationsMaxAggregateOutputType | null
  }

  type GetCattle_vaccinationsGroupByPayload<T extends cattle_vaccinationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cattle_vaccinationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cattle_vaccinationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cattle_vaccinationsGroupByOutputType[P]>
            : GetScalarType<T[P], Cattle_vaccinationsGroupByOutputType[P]>
        }
      >
    >


  export type cattle_vaccinationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    vaccination_date?: boolean
    veterinary_name?: boolean
    vaccine_type?: boolean
    remark?: boolean
    vaccine_id?: boolean
    vaccine_lot_no?: boolean
    vaccine_expiry_date?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_vaccinations"]>

  export type cattle_vaccinationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    vaccination_date?: boolean
    veterinary_name?: boolean
    vaccine_type?: boolean
    remark?: boolean
    vaccine_id?: boolean
    vaccine_lot_no?: boolean
    vaccine_expiry_date?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_vaccinations"]>

  export type cattle_vaccinationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cattle_id?: boolean
    vaccination_date?: boolean
    veterinary_name?: boolean
    vaccine_type?: boolean
    remark?: boolean
    vaccine_id?: boolean
    vaccine_lot_no?: boolean
    vaccine_expiry_date?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattle_vaccinations"]>

  export type cattle_vaccinationsSelectScalar = {
    id?: boolean
    cattle_id?: boolean
    vaccination_date?: boolean
    veterinary_name?: boolean
    vaccine_type?: boolean
    remark?: boolean
    vaccine_id?: boolean
    vaccine_lot_no?: boolean
    vaccine_expiry_date?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattle_vaccinationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cattle_id" | "vaccination_date" | "veterinary_name" | "vaccine_type" | "remark" | "vaccine_id" | "vaccine_lot_no" | "vaccine_expiry_date" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattle_vaccinations"]>
  export type cattle_vaccinationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }
  export type cattle_vaccinationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }
  export type cattle_vaccinationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | cattlesDefaultArgs<ExtArgs>
  }

  export type $cattle_vaccinationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattle_vaccinations"
    objects: {
      cattles: Prisma.$cattlesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cattle_id: string
      vaccination_date: Date | null
      veterinary_name: string | null
      vaccine_type: string | null
      remark: string | null
      vaccine_id: string | null
      vaccine_lot_no: string | null
      vaccine_expiry_date: Date | null
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattle_vaccinations"]>
    composites: {}
  }

  type cattle_vaccinationsGetPayload<S extends boolean | null | undefined | cattle_vaccinationsDefaultArgs> = $Result.GetResult<Prisma.$cattle_vaccinationsPayload, S>

  type cattle_vaccinationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattle_vaccinationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cattle_vaccinationsCountAggregateInputType | true
    }

  export interface cattle_vaccinationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattle_vaccinations'], meta: { name: 'cattle_vaccinations' } }
    /**
     * Find zero or one Cattle_vaccinations that matches the filter.
     * @param {cattle_vaccinationsFindUniqueArgs} args - Arguments to find a Cattle_vaccinations
     * @example
     * // Get one Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattle_vaccinationsFindUniqueArgs>(args: SelectSubset<T, cattle_vaccinationsFindUniqueArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattle_vaccinations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattle_vaccinationsFindUniqueOrThrowArgs} args - Arguments to find a Cattle_vaccinations
     * @example
     * // Get one Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattle_vaccinationsFindUniqueOrThrowArgs>(args: SelectSubset<T, cattle_vaccinationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_vaccinations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_vaccinationsFindFirstArgs} args - Arguments to find a Cattle_vaccinations
     * @example
     * // Get one Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattle_vaccinationsFindFirstArgs>(args?: SelectSubset<T, cattle_vaccinationsFindFirstArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattle_vaccinations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_vaccinationsFindFirstOrThrowArgs} args - Arguments to find a Cattle_vaccinations
     * @example
     * // Get one Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattle_vaccinationsFindFirstOrThrowArgs>(args?: SelectSubset<T, cattle_vaccinationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattle_vaccinations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_vaccinationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.findMany()
     * 
     * // Get first 10 Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattle_vaccinationsWithIdOnly = await prisma.cattle_vaccinations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattle_vaccinationsFindManyArgs>(args?: SelectSubset<T, cattle_vaccinationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattle_vaccinations.
     * @param {cattle_vaccinationsCreateArgs} args - Arguments to create a Cattle_vaccinations.
     * @example
     * // Create one Cattle_vaccinations
     * const Cattle_vaccinations = await prisma.cattle_vaccinations.create({
     *   data: {
     *     // ... data to create a Cattle_vaccinations
     *   }
     * })
     * 
     */
    create<T extends cattle_vaccinationsCreateArgs>(args: SelectSubset<T, cattle_vaccinationsCreateArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattle_vaccinations.
     * @param {cattle_vaccinationsCreateManyArgs} args - Arguments to create many Cattle_vaccinations.
     * @example
     * // Create many Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattle_vaccinationsCreateManyArgs>(args?: SelectSubset<T, cattle_vaccinationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattle_vaccinations and returns the data saved in the database.
     * @param {cattle_vaccinationsCreateManyAndReturnArgs} args - Arguments to create many Cattle_vaccinations.
     * @example
     * // Create many Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattle_vaccinations and only return the `id`
     * const cattle_vaccinationsWithIdOnly = await prisma.cattle_vaccinations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattle_vaccinationsCreateManyAndReturnArgs>(args?: SelectSubset<T, cattle_vaccinationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattle_vaccinations.
     * @param {cattle_vaccinationsDeleteArgs} args - Arguments to delete one Cattle_vaccinations.
     * @example
     * // Delete one Cattle_vaccinations
     * const Cattle_vaccinations = await prisma.cattle_vaccinations.delete({
     *   where: {
     *     // ... filter to delete one Cattle_vaccinations
     *   }
     * })
     * 
     */
    delete<T extends cattle_vaccinationsDeleteArgs>(args: SelectSubset<T, cattle_vaccinationsDeleteArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattle_vaccinations.
     * @param {cattle_vaccinationsUpdateArgs} args - Arguments to update one Cattle_vaccinations.
     * @example
     * // Update one Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattle_vaccinationsUpdateArgs>(args: SelectSubset<T, cattle_vaccinationsUpdateArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattle_vaccinations.
     * @param {cattle_vaccinationsDeleteManyArgs} args - Arguments to filter Cattle_vaccinations to delete.
     * @example
     * // Delete a few Cattle_vaccinations
     * const { count } = await prisma.cattle_vaccinations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattle_vaccinationsDeleteManyArgs>(args?: SelectSubset<T, cattle_vaccinationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_vaccinations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_vaccinationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattle_vaccinationsUpdateManyArgs>(args: SelectSubset<T, cattle_vaccinationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattle_vaccinations and returns the data updated in the database.
     * @param {cattle_vaccinationsUpdateManyAndReturnArgs} args - Arguments to update many Cattle_vaccinations.
     * @example
     * // Update many Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattle_vaccinations and only return the `id`
     * const cattle_vaccinationsWithIdOnly = await prisma.cattle_vaccinations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattle_vaccinationsUpdateManyAndReturnArgs>(args: SelectSubset<T, cattle_vaccinationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattle_vaccinations.
     * @param {cattle_vaccinationsUpsertArgs} args - Arguments to update or create a Cattle_vaccinations.
     * @example
     * // Update or create a Cattle_vaccinations
     * const cattle_vaccinations = await prisma.cattle_vaccinations.upsert({
     *   create: {
     *     // ... data to create a Cattle_vaccinations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattle_vaccinations we want to update
     *   }
     * })
     */
    upsert<T extends cattle_vaccinationsUpsertArgs>(args: SelectSubset<T, cattle_vaccinationsUpsertArgs<ExtArgs>>): Prisma__cattle_vaccinationsClient<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattle_vaccinations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_vaccinationsCountArgs} args - Arguments to filter Cattle_vaccinations to count.
     * @example
     * // Count the number of Cattle_vaccinations
     * const count = await prisma.cattle_vaccinations.count({
     *   where: {
     *     // ... the filter for the Cattle_vaccinations we want to count
     *   }
     * })
    **/
    count<T extends cattle_vaccinationsCountArgs>(
      args?: Subset<T, cattle_vaccinationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cattle_vaccinationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattle_vaccinations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cattle_vaccinationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cattle_vaccinationsAggregateArgs>(args: Subset<T, Cattle_vaccinationsAggregateArgs>): Prisma.PrismaPromise<GetCattle_vaccinationsAggregateType<T>>

    /**
     * Group by Cattle_vaccinations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattle_vaccinationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattle_vaccinationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattle_vaccinationsGroupByArgs['orderBy'] }
        : { orderBy?: cattle_vaccinationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattle_vaccinationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattle_vaccinationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattle_vaccinations model
   */
  readonly fields: cattle_vaccinationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattle_vaccinations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattle_vaccinationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattles<T extends cattlesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cattlesDefaultArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattle_vaccinations model
   */
  interface cattle_vaccinationsFieldRefs {
    readonly id: FieldRef<"cattle_vaccinations", 'String'>
    readonly cattle_id: FieldRef<"cattle_vaccinations", 'String'>
    readonly vaccination_date: FieldRef<"cattle_vaccinations", 'DateTime'>
    readonly veterinary_name: FieldRef<"cattle_vaccinations", 'String'>
    readonly vaccine_type: FieldRef<"cattle_vaccinations", 'String'>
    readonly remark: FieldRef<"cattle_vaccinations", 'String'>
    readonly vaccine_id: FieldRef<"cattle_vaccinations", 'String'>
    readonly vaccine_lot_no: FieldRef<"cattle_vaccinations", 'String'>
    readonly vaccine_expiry_date: FieldRef<"cattle_vaccinations", 'DateTime'>
    readonly status: FieldRef<"cattle_vaccinations", 'String'>
    readonly created_at: FieldRef<"cattle_vaccinations", 'DateTime'>
    readonly created_by_id: FieldRef<"cattle_vaccinations", 'String'>
    readonly created_by: FieldRef<"cattle_vaccinations", 'String'>
    readonly updated_at: FieldRef<"cattle_vaccinations", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattle_vaccinations", 'String'>
    readonly updated_by: FieldRef<"cattle_vaccinations", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattle_vaccinations findUnique
   */
  export type cattle_vaccinationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_vaccinations to fetch.
     */
    where: cattle_vaccinationsWhereUniqueInput
  }

  /**
   * cattle_vaccinations findUniqueOrThrow
   */
  export type cattle_vaccinationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_vaccinations to fetch.
     */
    where: cattle_vaccinationsWhereUniqueInput
  }

  /**
   * cattle_vaccinations findFirst
   */
  export type cattle_vaccinationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_vaccinations to fetch.
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_vaccinations to fetch.
     */
    orderBy?: cattle_vaccinationsOrderByWithRelationInput | cattle_vaccinationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_vaccinations.
     */
    cursor?: cattle_vaccinationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_vaccinations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_vaccinations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_vaccinations.
     */
    distinct?: Cattle_vaccinationsScalarFieldEnum | Cattle_vaccinationsScalarFieldEnum[]
  }

  /**
   * cattle_vaccinations findFirstOrThrow
   */
  export type cattle_vaccinationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_vaccinations to fetch.
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_vaccinations to fetch.
     */
    orderBy?: cattle_vaccinationsOrderByWithRelationInput | cattle_vaccinationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattle_vaccinations.
     */
    cursor?: cattle_vaccinationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_vaccinations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_vaccinations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattle_vaccinations.
     */
    distinct?: Cattle_vaccinationsScalarFieldEnum | Cattle_vaccinationsScalarFieldEnum[]
  }

  /**
   * cattle_vaccinations findMany
   */
  export type cattle_vaccinationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * Filter, which cattle_vaccinations to fetch.
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattle_vaccinations to fetch.
     */
    orderBy?: cattle_vaccinationsOrderByWithRelationInput | cattle_vaccinationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattle_vaccinations.
     */
    cursor?: cattle_vaccinationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattle_vaccinations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattle_vaccinations.
     */
    skip?: number
    distinct?: Cattle_vaccinationsScalarFieldEnum | Cattle_vaccinationsScalarFieldEnum[]
  }

  /**
   * cattle_vaccinations create
   */
  export type cattle_vaccinationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * The data needed to create a cattle_vaccinations.
     */
    data: XOR<cattle_vaccinationsCreateInput, cattle_vaccinationsUncheckedCreateInput>
  }

  /**
   * cattle_vaccinations createMany
   */
  export type cattle_vaccinationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattle_vaccinations.
     */
    data: cattle_vaccinationsCreateManyInput | cattle_vaccinationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattle_vaccinations createManyAndReturn
   */
  export type cattle_vaccinationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * The data used to create many cattle_vaccinations.
     */
    data: cattle_vaccinationsCreateManyInput | cattle_vaccinationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_vaccinations update
   */
  export type cattle_vaccinationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * The data needed to update a cattle_vaccinations.
     */
    data: XOR<cattle_vaccinationsUpdateInput, cattle_vaccinationsUncheckedUpdateInput>
    /**
     * Choose, which cattle_vaccinations to update.
     */
    where: cattle_vaccinationsWhereUniqueInput
  }

  /**
   * cattle_vaccinations updateMany
   */
  export type cattle_vaccinationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattle_vaccinations.
     */
    data: XOR<cattle_vaccinationsUpdateManyMutationInput, cattle_vaccinationsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_vaccinations to update
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * Limit how many cattle_vaccinations to update.
     */
    limit?: number
  }

  /**
   * cattle_vaccinations updateManyAndReturn
   */
  export type cattle_vaccinationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * The data used to update cattle_vaccinations.
     */
    data: XOR<cattle_vaccinationsUpdateManyMutationInput, cattle_vaccinationsUncheckedUpdateManyInput>
    /**
     * Filter which cattle_vaccinations to update
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * Limit how many cattle_vaccinations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattle_vaccinations upsert
   */
  export type cattle_vaccinationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * The filter to search for the cattle_vaccinations to update in case it exists.
     */
    where: cattle_vaccinationsWhereUniqueInput
    /**
     * In case the cattle_vaccinations found by the `where` argument doesn't exist, create a new cattle_vaccinations with this data.
     */
    create: XOR<cattle_vaccinationsCreateInput, cattle_vaccinationsUncheckedCreateInput>
    /**
     * In case the cattle_vaccinations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattle_vaccinationsUpdateInput, cattle_vaccinationsUncheckedUpdateInput>
  }

  /**
   * cattle_vaccinations delete
   */
  export type cattle_vaccinationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    /**
     * Filter which cattle_vaccinations to delete.
     */
    where: cattle_vaccinationsWhereUniqueInput
  }

  /**
   * cattle_vaccinations deleteMany
   */
  export type cattle_vaccinationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattle_vaccinations to delete
     */
    where?: cattle_vaccinationsWhereInput
    /**
     * Limit how many cattle_vaccinations to delete.
     */
    limit?: number
  }

  /**
   * cattle_vaccinations without action
   */
  export type cattle_vaccinationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
  }


  /**
   * Model cattles
   */

  export type AggregateCattles = {
    _count: CattlesCountAggregateOutputType | null
    _avg: CattlesAvgAggregateOutputType | null
    _sum: CattlesSumAggregateOutputType | null
    _min: CattlesMinAggregateOutputType | null
    _max: CattlesMaxAggregateOutputType | null
  }

  export type CattlesAvgAggregateOutputType = {
    weight: Decimal | null
  }

  export type CattlesSumAggregateOutputType = {
    weight: Decimal | null
  }

  export type CattlesMinAggregateOutputType = {
    id: string | null
    tracer_id: string | null
    farm_id: string | null
    pen_id: string | null
    cattle_type_id: string | null
    traceability_id: string | null
    nid: string | null
    gender: string | null
    castration_status: string | null
    pregnant_status: string | null
    birthdate: Date | null
    passport_no: string | null
    color: string | null
    ear: string | null
    horn: string | null
    weight: Decimal | null
    date_weight: Date | null
    tracer_tag: string | null
    is_sourcing: boolean | null
    is_tracing: boolean | null
    country_code: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type CattlesMaxAggregateOutputType = {
    id: string | null
    tracer_id: string | null
    farm_id: string | null
    pen_id: string | null
    cattle_type_id: string | null
    traceability_id: string | null
    nid: string | null
    gender: string | null
    castration_status: string | null
    pregnant_status: string | null
    birthdate: Date | null
    passport_no: string | null
    color: string | null
    ear: string | null
    horn: string | null
    weight: Decimal | null
    date_weight: Date | null
    tracer_tag: string | null
    is_sourcing: boolean | null
    is_tracing: boolean | null
    country_code: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type CattlesCountAggregateOutputType = {
    id: number
    tracer_id: number
    farm_id: number
    pen_id: number
    cattle_type_id: number
    cattle_breed_ids: number
    traceability_id: number
    nid: number
    gender: number
    castration_status: number
    pregnant_status: number
    birthdate: number
    passport_no: number
    color: number
    ear: number
    horn: number
    weight: number
    date_weight: number
    tracer_tag: number
    ear_tag: number
    breed_sire: number
    breed_dam: number
    breed_pgs: number
    breed_pgd: number
    breed_mgs: number
    breed_mgd: number
    is_sourcing: number
    is_tracing: number
    country_code: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type CattlesAvgAggregateInputType = {
    weight?: true
  }

  export type CattlesSumAggregateInputType = {
    weight?: true
  }

  export type CattlesMinAggregateInputType = {
    id?: true
    tracer_id?: true
    farm_id?: true
    pen_id?: true
    cattle_type_id?: true
    traceability_id?: true
    nid?: true
    gender?: true
    castration_status?: true
    pregnant_status?: true
    birthdate?: true
    passport_no?: true
    color?: true
    ear?: true
    horn?: true
    weight?: true
    date_weight?: true
    tracer_tag?: true
    is_sourcing?: true
    is_tracing?: true
    country_code?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type CattlesMaxAggregateInputType = {
    id?: true
    tracer_id?: true
    farm_id?: true
    pen_id?: true
    cattle_type_id?: true
    traceability_id?: true
    nid?: true
    gender?: true
    castration_status?: true
    pregnant_status?: true
    birthdate?: true
    passport_no?: true
    color?: true
    ear?: true
    horn?: true
    weight?: true
    date_weight?: true
    tracer_tag?: true
    is_sourcing?: true
    is_tracing?: true
    country_code?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type CattlesCountAggregateInputType = {
    id?: true
    tracer_id?: true
    farm_id?: true
    pen_id?: true
    cattle_type_id?: true
    cattle_breed_ids?: true
    traceability_id?: true
    nid?: true
    gender?: true
    castration_status?: true
    pregnant_status?: true
    birthdate?: true
    passport_no?: true
    color?: true
    ear?: true
    horn?: true
    weight?: true
    date_weight?: true
    tracer_tag?: true
    ear_tag?: true
    breed_sire?: true
    breed_dam?: true
    breed_pgs?: true
    breed_pgd?: true
    breed_mgs?: true
    breed_mgd?: true
    is_sourcing?: true
    is_tracing?: true
    country_code?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type CattlesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattles to aggregate.
     */
    where?: cattlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattles to fetch.
     */
    orderBy?: cattlesOrderByWithRelationInput | cattlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cattlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cattles
    **/
    _count?: true | CattlesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CattlesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CattlesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CattlesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CattlesMaxAggregateInputType
  }

  export type GetCattlesAggregateType<T extends CattlesAggregateArgs> = {
        [P in keyof T & keyof AggregateCattles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCattles[P]>
      : GetScalarType<T[P], AggregateCattles[P]>
  }




  export type cattlesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cattlesWhereInput
    orderBy?: cattlesOrderByWithAggregationInput | cattlesOrderByWithAggregationInput[]
    by: CattlesScalarFieldEnum[] | CattlesScalarFieldEnum
    having?: cattlesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CattlesCountAggregateInputType | true
    _avg?: CattlesAvgAggregateInputType
    _sum?: CattlesSumAggregateInputType
    _min?: CattlesMinAggregateInputType
    _max?: CattlesMaxAggregateInputType
  }

  export type CattlesGroupByOutputType = {
    id: string
    tracer_id: string
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids: string[]
    traceability_id: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date
    passport_no: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal
    date_weight: Date
    tracer_tag: string
    ear_tag: string[]
    breed_sire: string[]
    breed_dam: string[]
    breed_pgs: string[]
    breed_pgd: string[]
    breed_mgs: string[]
    breed_mgd: string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: CattlesCountAggregateOutputType | null
    _avg: CattlesAvgAggregateOutputType | null
    _sum: CattlesSumAggregateOutputType | null
    _min: CattlesMinAggregateOutputType | null
    _max: CattlesMaxAggregateOutputType | null
  }

  type GetCattlesGroupByPayload<T extends cattlesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CattlesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CattlesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CattlesGroupByOutputType[P]>
            : GetScalarType<T[P], CattlesGroupByOutputType[P]>
        }
      >
    >


  export type cattlesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    traceability_id?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    ear_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    is_sourcing?: boolean
    is_tracing?: boolean
    country_code?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattle_attachments?: boolean | cattles$cattle_attachmentsArgs<ExtArgs>
    cattle_healths?: boolean | cattles$cattle_healthsArgs<ExtArgs>
    cattle_vaccinations?: boolean | cattles$cattle_vaccinationsArgs<ExtArgs>
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    pens?: boolean | pensDefaultArgs<ExtArgs>
    _count?: boolean | CattlesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattles"]>

  export type cattlesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    traceability_id?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    ear_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    is_sourcing?: boolean
    is_tracing?: boolean
    country_code?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattles"]>

  export type cattlesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    traceability_id?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    ear_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    is_sourcing?: boolean
    is_tracing?: boolean
    country_code?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cattles"]>

  export type cattlesSelectScalar = {
    id?: boolean
    tracer_id?: boolean
    farm_id?: boolean
    pen_id?: boolean
    cattle_type_id?: boolean
    cattle_breed_ids?: boolean
    traceability_id?: boolean
    nid?: boolean
    gender?: boolean
    castration_status?: boolean
    pregnant_status?: boolean
    birthdate?: boolean
    passport_no?: boolean
    color?: boolean
    ear?: boolean
    horn?: boolean
    weight?: boolean
    date_weight?: boolean
    tracer_tag?: boolean
    ear_tag?: boolean
    breed_sire?: boolean
    breed_dam?: boolean
    breed_pgs?: boolean
    breed_pgd?: boolean
    breed_mgs?: boolean
    breed_mgd?: boolean
    is_sourcing?: boolean
    is_tracing?: boolean
    country_code?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type cattlesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tracer_id" | "farm_id" | "pen_id" | "cattle_type_id" | "cattle_breed_ids" | "traceability_id" | "nid" | "gender" | "castration_status" | "pregnant_status" | "birthdate" | "passport_no" | "color" | "ear" | "horn" | "weight" | "date_weight" | "tracer_tag" | "ear_tag" | "breed_sire" | "breed_dam" | "breed_pgs" | "breed_pgd" | "breed_mgs" | "breed_mgd" | "is_sourcing" | "is_tracing" | "country_code" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["cattles"]>
  export type cattlesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattle_attachments?: boolean | cattles$cattle_attachmentsArgs<ExtArgs>
    cattle_healths?: boolean | cattles$cattle_healthsArgs<ExtArgs>
    cattle_vaccinations?: boolean | cattles$cattle_vaccinationsArgs<ExtArgs>
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    pens?: boolean | pensDefaultArgs<ExtArgs>
    _count?: boolean | CattlesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cattlesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }
  export type cattlesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }

  export type $cattlesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cattles"
    objects: {
      cattle_attachments: Prisma.$cattle_attachmentsPayload<ExtArgs>[]
      cattle_healths: Prisma.$cattle_healthsPayload<ExtArgs>[]
      cattle_vaccinations: Prisma.$cattle_vaccinationsPayload<ExtArgs>[]
      farms: Prisma.$farmsPayload<ExtArgs>
      pens: Prisma.$pensPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tracer_id: string
      farm_id: string
      pen_id: string
      cattle_type_id: string
      cattle_breed_ids: string[]
      traceability_id: string | null
      nid: string
      gender: string
      castration_status: string
      pregnant_status: string
      birthdate: Date
      passport_no: string | null
      color: string
      ear: string
      horn: string
      weight: Prisma.Decimal
      date_weight: Date
      tracer_tag: string
      ear_tag: string[]
      breed_sire: string[]
      breed_dam: string[]
      breed_pgs: string[]
      breed_pgd: string[]
      breed_mgs: string[]
      breed_mgd: string[]
      is_sourcing: boolean
      is_tracing: boolean
      country_code: string
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["cattles"]>
    composites: {}
  }

  type cattlesGetPayload<S extends boolean | null | undefined | cattlesDefaultArgs> = $Result.GetResult<Prisma.$cattlesPayload, S>

  type cattlesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cattlesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CattlesCountAggregateInputType | true
    }

  export interface cattlesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cattles'], meta: { name: 'cattles' } }
    /**
     * Find zero or one Cattles that matches the filter.
     * @param {cattlesFindUniqueArgs} args - Arguments to find a Cattles
     * @example
     * // Get one Cattles
     * const cattles = await prisma.cattles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cattlesFindUniqueArgs>(args: SelectSubset<T, cattlesFindUniqueArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cattles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cattlesFindUniqueOrThrowArgs} args - Arguments to find a Cattles
     * @example
     * // Get one Cattles
     * const cattles = await prisma.cattles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cattlesFindUniqueOrThrowArgs>(args: SelectSubset<T, cattlesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattlesFindFirstArgs} args - Arguments to find a Cattles
     * @example
     * // Get one Cattles
     * const cattles = await prisma.cattles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cattlesFindFirstArgs>(args?: SelectSubset<T, cattlesFindFirstArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cattles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattlesFindFirstOrThrowArgs} args - Arguments to find a Cattles
     * @example
     * // Get one Cattles
     * const cattles = await prisma.cattles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cattlesFindFirstOrThrowArgs>(args?: SelectSubset<T, cattlesFindFirstOrThrowArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cattles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattlesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cattles
     * const cattles = await prisma.cattles.findMany()
     * 
     * // Get first 10 Cattles
     * const cattles = await prisma.cattles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cattlesWithIdOnly = await prisma.cattles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cattlesFindManyArgs>(args?: SelectSubset<T, cattlesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cattles.
     * @param {cattlesCreateArgs} args - Arguments to create a Cattles.
     * @example
     * // Create one Cattles
     * const Cattles = await prisma.cattles.create({
     *   data: {
     *     // ... data to create a Cattles
     *   }
     * })
     * 
     */
    create<T extends cattlesCreateArgs>(args: SelectSubset<T, cattlesCreateArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cattles.
     * @param {cattlesCreateManyArgs} args - Arguments to create many Cattles.
     * @example
     * // Create many Cattles
     * const cattles = await prisma.cattles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cattlesCreateManyArgs>(args?: SelectSubset<T, cattlesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cattles and returns the data saved in the database.
     * @param {cattlesCreateManyAndReturnArgs} args - Arguments to create many Cattles.
     * @example
     * // Create many Cattles
     * const cattles = await prisma.cattles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cattles and only return the `id`
     * const cattlesWithIdOnly = await prisma.cattles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cattlesCreateManyAndReturnArgs>(args?: SelectSubset<T, cattlesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cattles.
     * @param {cattlesDeleteArgs} args - Arguments to delete one Cattles.
     * @example
     * // Delete one Cattles
     * const Cattles = await prisma.cattles.delete({
     *   where: {
     *     // ... filter to delete one Cattles
     *   }
     * })
     * 
     */
    delete<T extends cattlesDeleteArgs>(args: SelectSubset<T, cattlesDeleteArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cattles.
     * @param {cattlesUpdateArgs} args - Arguments to update one Cattles.
     * @example
     * // Update one Cattles
     * const cattles = await prisma.cattles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cattlesUpdateArgs>(args: SelectSubset<T, cattlesUpdateArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cattles.
     * @param {cattlesDeleteManyArgs} args - Arguments to filter Cattles to delete.
     * @example
     * // Delete a few Cattles
     * const { count } = await prisma.cattles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cattlesDeleteManyArgs>(args?: SelectSubset<T, cattlesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattlesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cattles
     * const cattles = await prisma.cattles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cattlesUpdateManyArgs>(args: SelectSubset<T, cattlesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cattles and returns the data updated in the database.
     * @param {cattlesUpdateManyAndReturnArgs} args - Arguments to update many Cattles.
     * @example
     * // Update many Cattles
     * const cattles = await prisma.cattles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cattles and only return the `id`
     * const cattlesWithIdOnly = await prisma.cattles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cattlesUpdateManyAndReturnArgs>(args: SelectSubset<T, cattlesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cattles.
     * @param {cattlesUpsertArgs} args - Arguments to update or create a Cattles.
     * @example
     * // Update or create a Cattles
     * const cattles = await prisma.cattles.upsert({
     *   create: {
     *     // ... data to create a Cattles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cattles we want to update
     *   }
     * })
     */
    upsert<T extends cattlesUpsertArgs>(args: SelectSubset<T, cattlesUpsertArgs<ExtArgs>>): Prisma__cattlesClient<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cattles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattlesCountArgs} args - Arguments to filter Cattles to count.
     * @example
     * // Count the number of Cattles
     * const count = await prisma.cattles.count({
     *   where: {
     *     // ... the filter for the Cattles we want to count
     *   }
     * })
    **/
    count<T extends cattlesCountArgs>(
      args?: Subset<T, cattlesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CattlesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cattles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CattlesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CattlesAggregateArgs>(args: Subset<T, CattlesAggregateArgs>): Prisma.PrismaPromise<GetCattlesAggregateType<T>>

    /**
     * Group by Cattles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cattlesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cattlesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cattlesGroupByArgs['orderBy'] }
        : { orderBy?: cattlesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cattlesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCattlesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cattles model
   */
  readonly fields: cattlesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cattles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cattlesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattle_attachments<T extends cattles$cattle_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, cattles$cattle_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cattle_healths<T extends cattles$cattle_healthsArgs<ExtArgs> = {}>(args?: Subset<T, cattles$cattle_healthsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_healthsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cattle_vaccinations<T extends cattles$cattle_vaccinationsArgs<ExtArgs> = {}>(args?: Subset<T, cattles$cattle_vaccinationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_vaccinationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    farms<T extends farmsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmsDefaultArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pens<T extends pensDefaultArgs<ExtArgs> = {}>(args?: Subset<T, pensDefaultArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cattles model
   */
  interface cattlesFieldRefs {
    readonly id: FieldRef<"cattles", 'String'>
    readonly tracer_id: FieldRef<"cattles", 'String'>
    readonly farm_id: FieldRef<"cattles", 'String'>
    readonly pen_id: FieldRef<"cattles", 'String'>
    readonly cattle_type_id: FieldRef<"cattles", 'String'>
    readonly cattle_breed_ids: FieldRef<"cattles", 'String[]'>
    readonly traceability_id: FieldRef<"cattles", 'String'>
    readonly nid: FieldRef<"cattles", 'String'>
    readonly gender: FieldRef<"cattles", 'String'>
    readonly castration_status: FieldRef<"cattles", 'String'>
    readonly pregnant_status: FieldRef<"cattles", 'String'>
    readonly birthdate: FieldRef<"cattles", 'DateTime'>
    readonly passport_no: FieldRef<"cattles", 'String'>
    readonly color: FieldRef<"cattles", 'String'>
    readonly ear: FieldRef<"cattles", 'String'>
    readonly horn: FieldRef<"cattles", 'String'>
    readonly weight: FieldRef<"cattles", 'Decimal'>
    readonly date_weight: FieldRef<"cattles", 'DateTime'>
    readonly tracer_tag: FieldRef<"cattles", 'String'>
    readonly ear_tag: FieldRef<"cattles", 'String[]'>
    readonly breed_sire: FieldRef<"cattles", 'String[]'>
    readonly breed_dam: FieldRef<"cattles", 'String[]'>
    readonly breed_pgs: FieldRef<"cattles", 'String[]'>
    readonly breed_pgd: FieldRef<"cattles", 'String[]'>
    readonly breed_mgs: FieldRef<"cattles", 'String[]'>
    readonly breed_mgd: FieldRef<"cattles", 'String[]'>
    readonly is_sourcing: FieldRef<"cattles", 'Boolean'>
    readonly is_tracing: FieldRef<"cattles", 'Boolean'>
    readonly country_code: FieldRef<"cattles", 'String'>
    readonly status: FieldRef<"cattles", 'String'>
    readonly created_at: FieldRef<"cattles", 'DateTime'>
    readonly created_by_id: FieldRef<"cattles", 'String'>
    readonly created_by: FieldRef<"cattles", 'String'>
    readonly updated_at: FieldRef<"cattles", 'DateTime'>
    readonly updated_by_id: FieldRef<"cattles", 'String'>
    readonly updated_by: FieldRef<"cattles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * cattles findUnique
   */
  export type cattlesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * Filter, which cattles to fetch.
     */
    where: cattlesWhereUniqueInput
  }

  /**
   * cattles findUniqueOrThrow
   */
  export type cattlesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * Filter, which cattles to fetch.
     */
    where: cattlesWhereUniqueInput
  }

  /**
   * cattles findFirst
   */
  export type cattlesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * Filter, which cattles to fetch.
     */
    where?: cattlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattles to fetch.
     */
    orderBy?: cattlesOrderByWithRelationInput | cattlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattles.
     */
    cursor?: cattlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattles.
     */
    distinct?: CattlesScalarFieldEnum | CattlesScalarFieldEnum[]
  }

  /**
   * cattles findFirstOrThrow
   */
  export type cattlesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * Filter, which cattles to fetch.
     */
    where?: cattlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattles to fetch.
     */
    orderBy?: cattlesOrderByWithRelationInput | cattlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cattles.
     */
    cursor?: cattlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cattles.
     */
    distinct?: CattlesScalarFieldEnum | CattlesScalarFieldEnum[]
  }

  /**
   * cattles findMany
   */
  export type cattlesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * Filter, which cattles to fetch.
     */
    where?: cattlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cattles to fetch.
     */
    orderBy?: cattlesOrderByWithRelationInput | cattlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cattles.
     */
    cursor?: cattlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cattles.
     */
    skip?: number
    distinct?: CattlesScalarFieldEnum | CattlesScalarFieldEnum[]
  }

  /**
   * cattles create
   */
  export type cattlesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * The data needed to create a cattles.
     */
    data: XOR<cattlesCreateInput, cattlesUncheckedCreateInput>
  }

  /**
   * cattles createMany
   */
  export type cattlesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cattles.
     */
    data: cattlesCreateManyInput | cattlesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cattles createManyAndReturn
   */
  export type cattlesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * The data used to create many cattles.
     */
    data: cattlesCreateManyInput | cattlesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattles update
   */
  export type cattlesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * The data needed to update a cattles.
     */
    data: XOR<cattlesUpdateInput, cattlesUncheckedUpdateInput>
    /**
     * Choose, which cattles to update.
     */
    where: cattlesWhereUniqueInput
  }

  /**
   * cattles updateMany
   */
  export type cattlesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cattles.
     */
    data: XOR<cattlesUpdateManyMutationInput, cattlesUncheckedUpdateManyInput>
    /**
     * Filter which cattles to update
     */
    where?: cattlesWhereInput
    /**
     * Limit how many cattles to update.
     */
    limit?: number
  }

  /**
   * cattles updateManyAndReturn
   */
  export type cattlesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * The data used to update cattles.
     */
    data: XOR<cattlesUpdateManyMutationInput, cattlesUncheckedUpdateManyInput>
    /**
     * Filter which cattles to update
     */
    where?: cattlesWhereInput
    /**
     * Limit how many cattles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cattles upsert
   */
  export type cattlesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * The filter to search for the cattles to update in case it exists.
     */
    where: cattlesWhereUniqueInput
    /**
     * In case the cattles found by the `where` argument doesn't exist, create a new cattles with this data.
     */
    create: XOR<cattlesCreateInput, cattlesUncheckedCreateInput>
    /**
     * In case the cattles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cattlesUpdateInput, cattlesUncheckedUpdateInput>
  }

  /**
   * cattles delete
   */
  export type cattlesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    /**
     * Filter which cattles to delete.
     */
    where: cattlesWhereUniqueInput
  }

  /**
   * cattles deleteMany
   */
  export type cattlesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cattles to delete
     */
    where?: cattlesWhereInput
    /**
     * Limit how many cattles to delete.
     */
    limit?: number
  }

  /**
   * cattles.cattle_attachments
   */
  export type cattles$cattle_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_attachments
     */
    select?: cattle_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_attachments
     */
    omit?: cattle_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_attachmentsInclude<ExtArgs> | null
    where?: cattle_attachmentsWhereInput
    orderBy?: cattle_attachmentsOrderByWithRelationInput | cattle_attachmentsOrderByWithRelationInput[]
    cursor?: cattle_attachmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cattle_attachmentsScalarFieldEnum | Cattle_attachmentsScalarFieldEnum[]
  }

  /**
   * cattles.cattle_healths
   */
  export type cattles$cattle_healthsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_healths
     */
    select?: cattle_healthsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_healths
     */
    omit?: cattle_healthsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_healthsInclude<ExtArgs> | null
    where?: cattle_healthsWhereInput
    orderBy?: cattle_healthsOrderByWithRelationInput | cattle_healthsOrderByWithRelationInput[]
    cursor?: cattle_healthsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cattle_healthsScalarFieldEnum | Cattle_healthsScalarFieldEnum[]
  }

  /**
   * cattles.cattle_vaccinations
   */
  export type cattles$cattle_vaccinationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_vaccinations
     */
    select?: cattle_vaccinationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_vaccinations
     */
    omit?: cattle_vaccinationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_vaccinationsInclude<ExtArgs> | null
    where?: cattle_vaccinationsWhereInput
    orderBy?: cattle_vaccinationsOrderByWithRelationInput | cattle_vaccinationsOrderByWithRelationInput[]
    cursor?: cattle_vaccinationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cattle_vaccinationsScalarFieldEnum | Cattle_vaccinationsScalarFieldEnum[]
  }

  /**
   * cattles without action
   */
  export type cattlesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
  }


  /**
   * Model data_migrations
   */

  export type AggregateData_migrations = {
    _count: Data_migrationsCountAggregateOutputType | null
    _avg: Data_migrationsAvgAggregateOutputType | null
    _sum: Data_migrationsSumAggregateOutputType | null
    _min: Data_migrationsMinAggregateOutputType | null
    _max: Data_migrationsMaxAggregateOutputType | null
  }

  export type Data_migrationsAvgAggregateOutputType = {
    version: number | null
  }

  export type Data_migrationsSumAggregateOutputType = {
    version: bigint | null
  }

  export type Data_migrationsMinAggregateOutputType = {
    version: bigint | null
    dirty: boolean | null
  }

  export type Data_migrationsMaxAggregateOutputType = {
    version: bigint | null
    dirty: boolean | null
  }

  export type Data_migrationsCountAggregateOutputType = {
    version: number
    dirty: number
    _all: number
  }


  export type Data_migrationsAvgAggregateInputType = {
    version?: true
  }

  export type Data_migrationsSumAggregateInputType = {
    version?: true
  }

  export type Data_migrationsMinAggregateInputType = {
    version?: true
    dirty?: true
  }

  export type Data_migrationsMaxAggregateInputType = {
    version?: true
    dirty?: true
  }

  export type Data_migrationsCountAggregateInputType = {
    version?: true
    dirty?: true
    _all?: true
  }

  export type Data_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which data_migrations to aggregate.
     */
    where?: data_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_migrations to fetch.
     */
    orderBy?: data_migrationsOrderByWithRelationInput | data_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: data_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned data_migrations
    **/
    _count?: true | Data_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Data_migrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Data_migrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Data_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Data_migrationsMaxAggregateInputType
  }

  export type GetData_migrationsAggregateType<T extends Data_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateData_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateData_migrations[P]>
      : GetScalarType<T[P], AggregateData_migrations[P]>
  }




  export type data_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: data_migrationsWhereInput
    orderBy?: data_migrationsOrderByWithAggregationInput | data_migrationsOrderByWithAggregationInput[]
    by: Data_migrationsScalarFieldEnum[] | Data_migrationsScalarFieldEnum
    having?: data_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Data_migrationsCountAggregateInputType | true
    _avg?: Data_migrationsAvgAggregateInputType
    _sum?: Data_migrationsSumAggregateInputType
    _min?: Data_migrationsMinAggregateInputType
    _max?: Data_migrationsMaxAggregateInputType
  }

  export type Data_migrationsGroupByOutputType = {
    version: bigint
    dirty: boolean
    _count: Data_migrationsCountAggregateOutputType | null
    _avg: Data_migrationsAvgAggregateOutputType | null
    _sum: Data_migrationsSumAggregateOutputType | null
    _min: Data_migrationsMinAggregateOutputType | null
    _max: Data_migrationsMaxAggregateOutputType | null
  }

  type GetData_migrationsGroupByPayload<T extends data_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Data_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Data_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Data_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Data_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type data_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
  }, ExtArgs["result"]["data_migrations"]>

  export type data_migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
  }, ExtArgs["result"]["data_migrations"]>

  export type data_migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
  }, ExtArgs["result"]["data_migrations"]>

  export type data_migrationsSelectScalar = {
    version?: boolean
    dirty?: boolean
  }

  export type data_migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"version" | "dirty", ExtArgs["result"]["data_migrations"]>

  export type $data_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "data_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      version: bigint
      dirty: boolean
    }, ExtArgs["result"]["data_migrations"]>
    composites: {}
  }

  type data_migrationsGetPayload<S extends boolean | null | undefined | data_migrationsDefaultArgs> = $Result.GetResult<Prisma.$data_migrationsPayload, S>

  type data_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<data_migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Data_migrationsCountAggregateInputType | true
    }

  export interface data_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['data_migrations'], meta: { name: 'data_migrations' } }
    /**
     * Find zero or one Data_migrations that matches the filter.
     * @param {data_migrationsFindUniqueArgs} args - Arguments to find a Data_migrations
     * @example
     * // Get one Data_migrations
     * const data_migrations = await prisma.data_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends data_migrationsFindUniqueArgs>(args: SelectSubset<T, data_migrationsFindUniqueArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Data_migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {data_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Data_migrations
     * @example
     * // Get one Data_migrations
     * const data_migrations = await prisma.data_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends data_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, data_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Data_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_migrationsFindFirstArgs} args - Arguments to find a Data_migrations
     * @example
     * // Get one Data_migrations
     * const data_migrations = await prisma.data_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends data_migrationsFindFirstArgs>(args?: SelectSubset<T, data_migrationsFindFirstArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Data_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_migrationsFindFirstOrThrowArgs} args - Arguments to find a Data_migrations
     * @example
     * // Get one Data_migrations
     * const data_migrations = await prisma.data_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends data_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, data_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Data_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Data_migrations
     * const data_migrations = await prisma.data_migrations.findMany()
     * 
     * // Get first 10 Data_migrations
     * const data_migrations = await prisma.data_migrations.findMany({ take: 10 })
     * 
     * // Only select the `version`
     * const data_migrationsWithVersionOnly = await prisma.data_migrations.findMany({ select: { version: true } })
     * 
     */
    findMany<T extends data_migrationsFindManyArgs>(args?: SelectSubset<T, data_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Data_migrations.
     * @param {data_migrationsCreateArgs} args - Arguments to create a Data_migrations.
     * @example
     * // Create one Data_migrations
     * const Data_migrations = await prisma.data_migrations.create({
     *   data: {
     *     // ... data to create a Data_migrations
     *   }
     * })
     * 
     */
    create<T extends data_migrationsCreateArgs>(args: SelectSubset<T, data_migrationsCreateArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Data_migrations.
     * @param {data_migrationsCreateManyArgs} args - Arguments to create many Data_migrations.
     * @example
     * // Create many Data_migrations
     * const data_migrations = await prisma.data_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends data_migrationsCreateManyArgs>(args?: SelectSubset<T, data_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Data_migrations and returns the data saved in the database.
     * @param {data_migrationsCreateManyAndReturnArgs} args - Arguments to create many Data_migrations.
     * @example
     * // Create many Data_migrations
     * const data_migrations = await prisma.data_migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Data_migrations and only return the `version`
     * const data_migrationsWithVersionOnly = await prisma.data_migrations.createManyAndReturn({
     *   select: { version: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends data_migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, data_migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Data_migrations.
     * @param {data_migrationsDeleteArgs} args - Arguments to delete one Data_migrations.
     * @example
     * // Delete one Data_migrations
     * const Data_migrations = await prisma.data_migrations.delete({
     *   where: {
     *     // ... filter to delete one Data_migrations
     *   }
     * })
     * 
     */
    delete<T extends data_migrationsDeleteArgs>(args: SelectSubset<T, data_migrationsDeleteArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Data_migrations.
     * @param {data_migrationsUpdateArgs} args - Arguments to update one Data_migrations.
     * @example
     * // Update one Data_migrations
     * const data_migrations = await prisma.data_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends data_migrationsUpdateArgs>(args: SelectSubset<T, data_migrationsUpdateArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Data_migrations.
     * @param {data_migrationsDeleteManyArgs} args - Arguments to filter Data_migrations to delete.
     * @example
     * // Delete a few Data_migrations
     * const { count } = await prisma.data_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends data_migrationsDeleteManyArgs>(args?: SelectSubset<T, data_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Data_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Data_migrations
     * const data_migrations = await prisma.data_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends data_migrationsUpdateManyArgs>(args: SelectSubset<T, data_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Data_migrations and returns the data updated in the database.
     * @param {data_migrationsUpdateManyAndReturnArgs} args - Arguments to update many Data_migrations.
     * @example
     * // Update many Data_migrations
     * const data_migrations = await prisma.data_migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Data_migrations and only return the `version`
     * const data_migrationsWithVersionOnly = await prisma.data_migrations.updateManyAndReturn({
     *   select: { version: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends data_migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, data_migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Data_migrations.
     * @param {data_migrationsUpsertArgs} args - Arguments to update or create a Data_migrations.
     * @example
     * // Update or create a Data_migrations
     * const data_migrations = await prisma.data_migrations.upsert({
     *   create: {
     *     // ... data to create a Data_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Data_migrations we want to update
     *   }
     * })
     */
    upsert<T extends data_migrationsUpsertArgs>(args: SelectSubset<T, data_migrationsUpsertArgs<ExtArgs>>): Prisma__data_migrationsClient<$Result.GetResult<Prisma.$data_migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Data_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_migrationsCountArgs} args - Arguments to filter Data_migrations to count.
     * @example
     * // Count the number of Data_migrations
     * const count = await prisma.data_migrations.count({
     *   where: {
     *     // ... the filter for the Data_migrations we want to count
     *   }
     * })
    **/
    count<T extends data_migrationsCountArgs>(
      args?: Subset<T, data_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Data_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Data_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Data_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Data_migrationsAggregateArgs>(args: Subset<T, Data_migrationsAggregateArgs>): Prisma.PrismaPromise<GetData_migrationsAggregateType<T>>

    /**
     * Group by Data_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {data_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends data_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: data_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: data_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, data_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetData_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the data_migrations model
   */
  readonly fields: data_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for data_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__data_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the data_migrations model
   */
  interface data_migrationsFieldRefs {
    readonly version: FieldRef<"data_migrations", 'BigInt'>
    readonly dirty: FieldRef<"data_migrations", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * data_migrations findUnique
   */
  export type data_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which data_migrations to fetch.
     */
    where: data_migrationsWhereUniqueInput
  }

  /**
   * data_migrations findUniqueOrThrow
   */
  export type data_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which data_migrations to fetch.
     */
    where: data_migrationsWhereUniqueInput
  }

  /**
   * data_migrations findFirst
   */
  export type data_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which data_migrations to fetch.
     */
    where?: data_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_migrations to fetch.
     */
    orderBy?: data_migrationsOrderByWithRelationInput | data_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for data_migrations.
     */
    cursor?: data_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of data_migrations.
     */
    distinct?: Data_migrationsScalarFieldEnum | Data_migrationsScalarFieldEnum[]
  }

  /**
   * data_migrations findFirstOrThrow
   */
  export type data_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which data_migrations to fetch.
     */
    where?: data_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_migrations to fetch.
     */
    orderBy?: data_migrationsOrderByWithRelationInput | data_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for data_migrations.
     */
    cursor?: data_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of data_migrations.
     */
    distinct?: Data_migrationsScalarFieldEnum | Data_migrationsScalarFieldEnum[]
  }

  /**
   * data_migrations findMany
   */
  export type data_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which data_migrations to fetch.
     */
    where?: data_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of data_migrations to fetch.
     */
    orderBy?: data_migrationsOrderByWithRelationInput | data_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing data_migrations.
     */
    cursor?: data_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` data_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` data_migrations.
     */
    skip?: number
    distinct?: Data_migrationsScalarFieldEnum | Data_migrationsScalarFieldEnum[]
  }

  /**
   * data_migrations create
   */
  export type data_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a data_migrations.
     */
    data: XOR<data_migrationsCreateInput, data_migrationsUncheckedCreateInput>
  }

  /**
   * data_migrations createMany
   */
  export type data_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many data_migrations.
     */
    data: data_migrationsCreateManyInput | data_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * data_migrations createManyAndReturn
   */
  export type data_migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many data_migrations.
     */
    data: data_migrationsCreateManyInput | data_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * data_migrations update
   */
  export type data_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a data_migrations.
     */
    data: XOR<data_migrationsUpdateInput, data_migrationsUncheckedUpdateInput>
    /**
     * Choose, which data_migrations to update.
     */
    where: data_migrationsWhereUniqueInput
  }

  /**
   * data_migrations updateMany
   */
  export type data_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update data_migrations.
     */
    data: XOR<data_migrationsUpdateManyMutationInput, data_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which data_migrations to update
     */
    where?: data_migrationsWhereInput
    /**
     * Limit how many data_migrations to update.
     */
    limit?: number
  }

  /**
   * data_migrations updateManyAndReturn
   */
  export type data_migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * The data used to update data_migrations.
     */
    data: XOR<data_migrationsUpdateManyMutationInput, data_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which data_migrations to update
     */
    where?: data_migrationsWhereInput
    /**
     * Limit how many data_migrations to update.
     */
    limit?: number
  }

  /**
   * data_migrations upsert
   */
  export type data_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the data_migrations to update in case it exists.
     */
    where: data_migrationsWhereUniqueInput
    /**
     * In case the data_migrations found by the `where` argument doesn't exist, create a new data_migrations with this data.
     */
    create: XOR<data_migrationsCreateInput, data_migrationsUncheckedCreateInput>
    /**
     * In case the data_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<data_migrationsUpdateInput, data_migrationsUncheckedUpdateInput>
  }

  /**
   * data_migrations delete
   */
  export type data_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
    /**
     * Filter which data_migrations to delete.
     */
    where: data_migrationsWhereUniqueInput
  }

  /**
   * data_migrations deleteMany
   */
  export type data_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which data_migrations to delete
     */
    where?: data_migrationsWhereInput
    /**
     * Limit how many data_migrations to delete.
     */
    limit?: number
  }

  /**
   * data_migrations without action
   */
  export type data_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the data_migrations
     */
    select?: data_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the data_migrations
     */
    omit?: data_migrationsOmit<ExtArgs> | null
  }


  /**
   * Model farm_attachments
   */

  export type AggregateFarm_attachments = {
    _count: Farm_attachmentsCountAggregateOutputType | null
    _min: Farm_attachmentsMinAggregateOutputType | null
    _max: Farm_attachmentsMaxAggregateOutputType | null
  }

  export type Farm_attachmentsMinAggregateOutputType = {
    id: string | null
    farm_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    encrypted_key: string | null
  }

  export type Farm_attachmentsMaxAggregateOutputType = {
    id: string | null
    farm_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    encrypted_key: string | null
  }

  export type Farm_attachmentsCountAggregateOutputType = {
    id: number
    farm_id: number
    file_name: number
    file_path: number
    is_public: number
    content_type: number
    description: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    encrypted_key: number
    _all: number
  }


  export type Farm_attachmentsMinAggregateInputType = {
    id?: true
    farm_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    encrypted_key?: true
  }

  export type Farm_attachmentsMaxAggregateInputType = {
    id?: true
    farm_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    encrypted_key?: true
  }

  export type Farm_attachmentsCountAggregateInputType = {
    id?: true
    farm_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    encrypted_key?: true
    _all?: true
  }

  export type Farm_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_attachments to aggregate.
     */
    where?: farm_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_attachments to fetch.
     */
    orderBy?: farm_attachmentsOrderByWithRelationInput | farm_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farm_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farm_attachments
    **/
    _count?: true | Farm_attachmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farm_attachmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farm_attachmentsMaxAggregateInputType
  }

  export type GetFarm_attachmentsAggregateType<T extends Farm_attachmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateFarm_attachments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarm_attachments[P]>
      : GetScalarType<T[P], AggregateFarm_attachments[P]>
  }




  export type farm_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_attachmentsWhereInput
    orderBy?: farm_attachmentsOrderByWithAggregationInput | farm_attachmentsOrderByWithAggregationInput[]
    by: Farm_attachmentsScalarFieldEnum[] | Farm_attachmentsScalarFieldEnum
    having?: farm_attachmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farm_attachmentsCountAggregateInputType | true
    _min?: Farm_attachmentsMinAggregateInputType
    _max?: Farm_attachmentsMaxAggregateInputType
  }

  export type Farm_attachmentsGroupByOutputType = {
    id: string
    farm_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    encrypted_key: string | null
    _count: Farm_attachmentsCountAggregateOutputType | null
    _min: Farm_attachmentsMinAggregateOutputType | null
    _max: Farm_attachmentsMaxAggregateOutputType | null
  }

  type GetFarm_attachmentsGroupByPayload<T extends farm_attachmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farm_attachmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farm_attachmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farm_attachmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Farm_attachmentsGroupByOutputType[P]>
        }
      >
    >


  export type farm_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_attachments"]>

  export type farm_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_attachments"]>

  export type farm_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_attachments"]>

  export type farm_attachmentsSelectScalar = {
    id?: boolean
    farm_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
  }

  export type farm_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "farm_id" | "file_name" | "file_path" | "is_public" | "content_type" | "description" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by" | "encrypted_key", ExtArgs["result"]["farm_attachments"]>
  export type farm_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type farm_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type farm_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }

  export type $farm_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farm_attachments"
    objects: {
      farms: Prisma.$farmsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      farm_id: string
      file_name: string
      file_path: string
      is_public: boolean
      content_type: string
      description: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
      encrypted_key: string | null
    }, ExtArgs["result"]["farm_attachments"]>
    composites: {}
  }

  type farm_attachmentsGetPayload<S extends boolean | null | undefined | farm_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$farm_attachmentsPayload, S>

  type farm_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farm_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farm_attachmentsCountAggregateInputType | true
    }

  export interface farm_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farm_attachments'], meta: { name: 'farm_attachments' } }
    /**
     * Find zero or one Farm_attachments that matches the filter.
     * @param {farm_attachmentsFindUniqueArgs} args - Arguments to find a Farm_attachments
     * @example
     * // Get one Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farm_attachmentsFindUniqueArgs>(args: SelectSubset<T, farm_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farm_attachments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farm_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Farm_attachments
     * @example
     * // Get one Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farm_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, farm_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_attachmentsFindFirstArgs} args - Arguments to find a Farm_attachments
     * @example
     * // Get one Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farm_attachmentsFindFirstArgs>(args?: SelectSubset<T, farm_attachmentsFindFirstArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_attachments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Farm_attachments
     * @example
     * // Get one Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farm_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, farm_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farm_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.findMany()
     * 
     * // Get first 10 Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farm_attachmentsWithIdOnly = await prisma.farm_attachments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farm_attachmentsFindManyArgs>(args?: SelectSubset<T, farm_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farm_attachments.
     * @param {farm_attachmentsCreateArgs} args - Arguments to create a Farm_attachments.
     * @example
     * // Create one Farm_attachments
     * const Farm_attachments = await prisma.farm_attachments.create({
     *   data: {
     *     // ... data to create a Farm_attachments
     *   }
     * })
     * 
     */
    create<T extends farm_attachmentsCreateArgs>(args: SelectSubset<T, farm_attachmentsCreateArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farm_attachments.
     * @param {farm_attachmentsCreateManyArgs} args - Arguments to create many Farm_attachments.
     * @example
     * // Create many Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farm_attachmentsCreateManyArgs>(args?: SelectSubset<T, farm_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farm_attachments and returns the data saved in the database.
     * @param {farm_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Farm_attachments.
     * @example
     * // Create many Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farm_attachments and only return the `id`
     * const farm_attachmentsWithIdOnly = await prisma.farm_attachments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farm_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, farm_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farm_attachments.
     * @param {farm_attachmentsDeleteArgs} args - Arguments to delete one Farm_attachments.
     * @example
     * // Delete one Farm_attachments
     * const Farm_attachments = await prisma.farm_attachments.delete({
     *   where: {
     *     // ... filter to delete one Farm_attachments
     *   }
     * })
     * 
     */
    delete<T extends farm_attachmentsDeleteArgs>(args: SelectSubset<T, farm_attachmentsDeleteArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farm_attachments.
     * @param {farm_attachmentsUpdateArgs} args - Arguments to update one Farm_attachments.
     * @example
     * // Update one Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farm_attachmentsUpdateArgs>(args: SelectSubset<T, farm_attachmentsUpdateArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farm_attachments.
     * @param {farm_attachmentsDeleteManyArgs} args - Arguments to filter Farm_attachments to delete.
     * @example
     * // Delete a few Farm_attachments
     * const { count } = await prisma.farm_attachments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farm_attachmentsDeleteManyArgs>(args?: SelectSubset<T, farm_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farm_attachmentsUpdateManyArgs>(args: SelectSubset<T, farm_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_attachments and returns the data updated in the database.
     * @param {farm_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Farm_attachments.
     * @example
     * // Update many Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farm_attachments and only return the `id`
     * const farm_attachmentsWithIdOnly = await prisma.farm_attachments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farm_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, farm_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farm_attachments.
     * @param {farm_attachmentsUpsertArgs} args - Arguments to update or create a Farm_attachments.
     * @example
     * // Update or create a Farm_attachments
     * const farm_attachments = await prisma.farm_attachments.upsert({
     *   create: {
     *     // ... data to create a Farm_attachments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farm_attachments we want to update
     *   }
     * })
     */
    upsert<T extends farm_attachmentsUpsertArgs>(args: SelectSubset<T, farm_attachmentsUpsertArgs<ExtArgs>>): Prisma__farm_attachmentsClient<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farm_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_attachmentsCountArgs} args - Arguments to filter Farm_attachments to count.
     * @example
     * // Count the number of Farm_attachments
     * const count = await prisma.farm_attachments.count({
     *   where: {
     *     // ... the filter for the Farm_attachments we want to count
     *   }
     * })
    **/
    count<T extends farm_attachmentsCountArgs>(
      args?: Subset<T, farm_attachmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farm_attachmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farm_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farm_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farm_attachmentsAggregateArgs>(args: Subset<T, Farm_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetFarm_attachmentsAggregateType<T>>

    /**
     * Group by Farm_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_attachmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farm_attachmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farm_attachmentsGroupByArgs['orderBy'] }
        : { orderBy?: farm_attachmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farm_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarm_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farm_attachments model
   */
  readonly fields: farm_attachmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farm_attachments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farm_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farms<T extends farmsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmsDefaultArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farm_attachments model
   */
  interface farm_attachmentsFieldRefs {
    readonly id: FieldRef<"farm_attachments", 'String'>
    readonly farm_id: FieldRef<"farm_attachments", 'String'>
    readonly file_name: FieldRef<"farm_attachments", 'String'>
    readonly file_path: FieldRef<"farm_attachments", 'String'>
    readonly is_public: FieldRef<"farm_attachments", 'Boolean'>
    readonly content_type: FieldRef<"farm_attachments", 'String'>
    readonly description: FieldRef<"farm_attachments", 'String'>
    readonly created_at: FieldRef<"farm_attachments", 'DateTime'>
    readonly created_by_id: FieldRef<"farm_attachments", 'String'>
    readonly created_by: FieldRef<"farm_attachments", 'String'>
    readonly updated_at: FieldRef<"farm_attachments", 'DateTime'>
    readonly updated_by_id: FieldRef<"farm_attachments", 'String'>
    readonly updated_by: FieldRef<"farm_attachments", 'String'>
    readonly encrypted_key: FieldRef<"farm_attachments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farm_attachments findUnique
   */
  export type farm_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farm_attachments to fetch.
     */
    where: farm_attachmentsWhereUniqueInput
  }

  /**
   * farm_attachments findUniqueOrThrow
   */
  export type farm_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farm_attachments to fetch.
     */
    where: farm_attachmentsWhereUniqueInput
  }

  /**
   * farm_attachments findFirst
   */
  export type farm_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farm_attachments to fetch.
     */
    where?: farm_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_attachments to fetch.
     */
    orderBy?: farm_attachmentsOrderByWithRelationInput | farm_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_attachments.
     */
    cursor?: farm_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_attachments.
     */
    distinct?: Farm_attachmentsScalarFieldEnum | Farm_attachmentsScalarFieldEnum[]
  }

  /**
   * farm_attachments findFirstOrThrow
   */
  export type farm_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farm_attachments to fetch.
     */
    where?: farm_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_attachments to fetch.
     */
    orderBy?: farm_attachmentsOrderByWithRelationInput | farm_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_attachments.
     */
    cursor?: farm_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_attachments.
     */
    distinct?: Farm_attachmentsScalarFieldEnum | Farm_attachmentsScalarFieldEnum[]
  }

  /**
   * farm_attachments findMany
   */
  export type farm_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farm_attachments to fetch.
     */
    where?: farm_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_attachments to fetch.
     */
    orderBy?: farm_attachmentsOrderByWithRelationInput | farm_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farm_attachments.
     */
    cursor?: farm_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_attachments.
     */
    skip?: number
    distinct?: Farm_attachmentsScalarFieldEnum | Farm_attachmentsScalarFieldEnum[]
  }

  /**
   * farm_attachments create
   */
  export type farm_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a farm_attachments.
     */
    data: XOR<farm_attachmentsCreateInput, farm_attachmentsUncheckedCreateInput>
  }

  /**
   * farm_attachments createMany
   */
  export type farm_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farm_attachments.
     */
    data: farm_attachmentsCreateManyInput | farm_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_attachments createManyAndReturn
   */
  export type farm_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to create many farm_attachments.
     */
    data: farm_attachmentsCreateManyInput | farm_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * farm_attachments update
   */
  export type farm_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a farm_attachments.
     */
    data: XOR<farm_attachmentsUpdateInput, farm_attachmentsUncheckedUpdateInput>
    /**
     * Choose, which farm_attachments to update.
     */
    where: farm_attachmentsWhereUniqueInput
  }

  /**
   * farm_attachments updateMany
   */
  export type farm_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farm_attachments.
     */
    data: XOR<farm_attachmentsUpdateManyMutationInput, farm_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which farm_attachments to update
     */
    where?: farm_attachmentsWhereInput
    /**
     * Limit how many farm_attachments to update.
     */
    limit?: number
  }

  /**
   * farm_attachments updateManyAndReturn
   */
  export type farm_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to update farm_attachments.
     */
    data: XOR<farm_attachmentsUpdateManyMutationInput, farm_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which farm_attachments to update
     */
    where?: farm_attachmentsWhereInput
    /**
     * Limit how many farm_attachments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * farm_attachments upsert
   */
  export type farm_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the farm_attachments to update in case it exists.
     */
    where: farm_attachmentsWhereUniqueInput
    /**
     * In case the farm_attachments found by the `where` argument doesn't exist, create a new farm_attachments with this data.
     */
    create: XOR<farm_attachmentsCreateInput, farm_attachmentsUncheckedCreateInput>
    /**
     * In case the farm_attachments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farm_attachmentsUpdateInput, farm_attachmentsUncheckedUpdateInput>
  }

  /**
   * farm_attachments delete
   */
  export type farm_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    /**
     * Filter which farm_attachments to delete.
     */
    where: farm_attachmentsWhereUniqueInput
  }

  /**
   * farm_attachments deleteMany
   */
  export type farm_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_attachments to delete
     */
    where?: farm_attachmentsWhereInput
    /**
     * Limit how many farm_attachments to delete.
     */
    limit?: number
  }

  /**
   * farm_attachments without action
   */
  export type farm_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
  }


  /**
   * Model farm_authorized
   */

  export type AggregateFarm_authorized = {
    _count: Farm_authorizedCountAggregateOutputType | null
    _min: Farm_authorizedMinAggregateOutputType | null
    _max: Farm_authorizedMaxAggregateOutputType | null
  }

  export type Farm_authorizedMinAggregateOutputType = {
    id: string | null
    farm_id: string | null
    authorized_type: string | null
    authorized_second_type: string | null
    license_id: string | null
    expire_date: Date | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farm_authorizedMaxAggregateOutputType = {
    id: string | null
    farm_id: string | null
    authorized_type: string | null
    authorized_second_type: string | null
    license_id: string | null
    expire_date: Date | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farm_authorizedCountAggregateOutputType = {
    id: number
    farm_id: number
    authorized_type: number
    authorized_second_type: number
    license_id: number
    expire_date: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Farm_authorizedMinAggregateInputType = {
    id?: true
    farm_id?: true
    authorized_type?: true
    authorized_second_type?: true
    license_id?: true
    expire_date?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farm_authorizedMaxAggregateInputType = {
    id?: true
    farm_id?: true
    authorized_type?: true
    authorized_second_type?: true
    license_id?: true
    expire_date?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farm_authorizedCountAggregateInputType = {
    id?: true
    farm_id?: true
    authorized_type?: true
    authorized_second_type?: true
    license_id?: true
    expire_date?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Farm_authorizedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_authorized to aggregate.
     */
    where?: farm_authorizedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_authorizeds to fetch.
     */
    orderBy?: farm_authorizedOrderByWithRelationInput | farm_authorizedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farm_authorizedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_authorizeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_authorizeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farm_authorizeds
    **/
    _count?: true | Farm_authorizedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farm_authorizedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farm_authorizedMaxAggregateInputType
  }

  export type GetFarm_authorizedAggregateType<T extends Farm_authorizedAggregateArgs> = {
        [P in keyof T & keyof AggregateFarm_authorized]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarm_authorized[P]>
      : GetScalarType<T[P], AggregateFarm_authorized[P]>
  }




  export type farm_authorizedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_authorizedWhereInput
    orderBy?: farm_authorizedOrderByWithAggregationInput | farm_authorizedOrderByWithAggregationInput[]
    by: Farm_authorizedScalarFieldEnum[] | Farm_authorizedScalarFieldEnum
    having?: farm_authorizedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farm_authorizedCountAggregateInputType | true
    _min?: Farm_authorizedMinAggregateInputType
    _max?: Farm_authorizedMaxAggregateInputType
  }

  export type Farm_authorizedGroupByOutputType = {
    id: string
    farm_id: string
    authorized_type: string
    authorized_second_type: string | null
    license_id: string
    expire_date: Date
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Farm_authorizedCountAggregateOutputType | null
    _min: Farm_authorizedMinAggregateOutputType | null
    _max: Farm_authorizedMaxAggregateOutputType | null
  }

  type GetFarm_authorizedGroupByPayload<T extends farm_authorizedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farm_authorizedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farm_authorizedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farm_authorizedGroupByOutputType[P]>
            : GetScalarType<T[P], Farm_authorizedGroupByOutputType[P]>
        }
      >
    >


  export type farm_authorizedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    license_id?: boolean
    expire_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_authorized"]>

  export type farm_authorizedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    license_id?: boolean
    expire_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_authorized"]>

  export type farm_authorizedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    license_id?: boolean
    expire_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_authorized"]>

  export type farm_authorizedSelectScalar = {
    id?: boolean
    farm_id?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    license_id?: boolean
    expire_date?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type farm_authorizedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "farm_id" | "authorized_type" | "authorized_second_type" | "license_id" | "expire_date" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["farm_authorized"]>
  export type farm_authorizedInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type farm_authorizedIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type farm_authorizedIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }

  export type $farm_authorizedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farm_authorized"
    objects: {
      farms: Prisma.$farmsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      farm_id: string
      authorized_type: string
      authorized_second_type: string | null
      license_id: string
      expire_date: Date
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["farm_authorized"]>
    composites: {}
  }

  type farm_authorizedGetPayload<S extends boolean | null | undefined | farm_authorizedDefaultArgs> = $Result.GetResult<Prisma.$farm_authorizedPayload, S>

  type farm_authorizedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farm_authorizedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farm_authorizedCountAggregateInputType | true
    }

  export interface farm_authorizedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farm_authorized'], meta: { name: 'farm_authorized' } }
    /**
     * Find zero or one Farm_authorized that matches the filter.
     * @param {farm_authorizedFindUniqueArgs} args - Arguments to find a Farm_authorized
     * @example
     * // Get one Farm_authorized
     * const farm_authorized = await prisma.farm_authorized.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farm_authorizedFindUniqueArgs>(args: SelectSubset<T, farm_authorizedFindUniqueArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farm_authorized that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farm_authorizedFindUniqueOrThrowArgs} args - Arguments to find a Farm_authorized
     * @example
     * // Get one Farm_authorized
     * const farm_authorized = await prisma.farm_authorized.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farm_authorizedFindUniqueOrThrowArgs>(args: SelectSubset<T, farm_authorizedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_authorized that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_authorizedFindFirstArgs} args - Arguments to find a Farm_authorized
     * @example
     * // Get one Farm_authorized
     * const farm_authorized = await prisma.farm_authorized.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farm_authorizedFindFirstArgs>(args?: SelectSubset<T, farm_authorizedFindFirstArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_authorized that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_authorizedFindFirstOrThrowArgs} args - Arguments to find a Farm_authorized
     * @example
     * // Get one Farm_authorized
     * const farm_authorized = await prisma.farm_authorized.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farm_authorizedFindFirstOrThrowArgs>(args?: SelectSubset<T, farm_authorizedFindFirstOrThrowArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farm_authorizeds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_authorizedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farm_authorizeds
     * const farm_authorizeds = await prisma.farm_authorized.findMany()
     * 
     * // Get first 10 Farm_authorizeds
     * const farm_authorizeds = await prisma.farm_authorized.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farm_authorizedWithIdOnly = await prisma.farm_authorized.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farm_authorizedFindManyArgs>(args?: SelectSubset<T, farm_authorizedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farm_authorized.
     * @param {farm_authorizedCreateArgs} args - Arguments to create a Farm_authorized.
     * @example
     * // Create one Farm_authorized
     * const Farm_authorized = await prisma.farm_authorized.create({
     *   data: {
     *     // ... data to create a Farm_authorized
     *   }
     * })
     * 
     */
    create<T extends farm_authorizedCreateArgs>(args: SelectSubset<T, farm_authorizedCreateArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farm_authorizeds.
     * @param {farm_authorizedCreateManyArgs} args - Arguments to create many Farm_authorizeds.
     * @example
     * // Create many Farm_authorizeds
     * const farm_authorized = await prisma.farm_authorized.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farm_authorizedCreateManyArgs>(args?: SelectSubset<T, farm_authorizedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farm_authorizeds and returns the data saved in the database.
     * @param {farm_authorizedCreateManyAndReturnArgs} args - Arguments to create many Farm_authorizeds.
     * @example
     * // Create many Farm_authorizeds
     * const farm_authorized = await prisma.farm_authorized.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farm_authorizeds and only return the `id`
     * const farm_authorizedWithIdOnly = await prisma.farm_authorized.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farm_authorizedCreateManyAndReturnArgs>(args?: SelectSubset<T, farm_authorizedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farm_authorized.
     * @param {farm_authorizedDeleteArgs} args - Arguments to delete one Farm_authorized.
     * @example
     * // Delete one Farm_authorized
     * const Farm_authorized = await prisma.farm_authorized.delete({
     *   where: {
     *     // ... filter to delete one Farm_authorized
     *   }
     * })
     * 
     */
    delete<T extends farm_authorizedDeleteArgs>(args: SelectSubset<T, farm_authorizedDeleteArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farm_authorized.
     * @param {farm_authorizedUpdateArgs} args - Arguments to update one Farm_authorized.
     * @example
     * // Update one Farm_authorized
     * const farm_authorized = await prisma.farm_authorized.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farm_authorizedUpdateArgs>(args: SelectSubset<T, farm_authorizedUpdateArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farm_authorizeds.
     * @param {farm_authorizedDeleteManyArgs} args - Arguments to filter Farm_authorizeds to delete.
     * @example
     * // Delete a few Farm_authorizeds
     * const { count } = await prisma.farm_authorized.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farm_authorizedDeleteManyArgs>(args?: SelectSubset<T, farm_authorizedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_authorizeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_authorizedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farm_authorizeds
     * const farm_authorized = await prisma.farm_authorized.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farm_authorizedUpdateManyArgs>(args: SelectSubset<T, farm_authorizedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_authorizeds and returns the data updated in the database.
     * @param {farm_authorizedUpdateManyAndReturnArgs} args - Arguments to update many Farm_authorizeds.
     * @example
     * // Update many Farm_authorizeds
     * const farm_authorized = await prisma.farm_authorized.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farm_authorizeds and only return the `id`
     * const farm_authorizedWithIdOnly = await prisma.farm_authorized.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farm_authorizedUpdateManyAndReturnArgs>(args: SelectSubset<T, farm_authorizedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farm_authorized.
     * @param {farm_authorizedUpsertArgs} args - Arguments to update or create a Farm_authorized.
     * @example
     * // Update or create a Farm_authorized
     * const farm_authorized = await prisma.farm_authorized.upsert({
     *   create: {
     *     // ... data to create a Farm_authorized
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farm_authorized we want to update
     *   }
     * })
     */
    upsert<T extends farm_authorizedUpsertArgs>(args: SelectSubset<T, farm_authorizedUpsertArgs<ExtArgs>>): Prisma__farm_authorizedClient<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farm_authorizeds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_authorizedCountArgs} args - Arguments to filter Farm_authorizeds to count.
     * @example
     * // Count the number of Farm_authorizeds
     * const count = await prisma.farm_authorized.count({
     *   where: {
     *     // ... the filter for the Farm_authorizeds we want to count
     *   }
     * })
    **/
    count<T extends farm_authorizedCountArgs>(
      args?: Subset<T, farm_authorizedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farm_authorizedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farm_authorized.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farm_authorizedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farm_authorizedAggregateArgs>(args: Subset<T, Farm_authorizedAggregateArgs>): Prisma.PrismaPromise<GetFarm_authorizedAggregateType<T>>

    /**
     * Group by Farm_authorized.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_authorizedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farm_authorizedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farm_authorizedGroupByArgs['orderBy'] }
        : { orderBy?: farm_authorizedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farm_authorizedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarm_authorizedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farm_authorized model
   */
  readonly fields: farm_authorizedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farm_authorized.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farm_authorizedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farms<T extends farmsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmsDefaultArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farm_authorized model
   */
  interface farm_authorizedFieldRefs {
    readonly id: FieldRef<"farm_authorized", 'String'>
    readonly farm_id: FieldRef<"farm_authorized", 'String'>
    readonly authorized_type: FieldRef<"farm_authorized", 'String'>
    readonly authorized_second_type: FieldRef<"farm_authorized", 'String'>
    readonly license_id: FieldRef<"farm_authorized", 'String'>
    readonly expire_date: FieldRef<"farm_authorized", 'DateTime'>
    readonly created_at: FieldRef<"farm_authorized", 'DateTime'>
    readonly created_by_id: FieldRef<"farm_authorized", 'String'>
    readonly created_by: FieldRef<"farm_authorized", 'String'>
    readonly updated_at: FieldRef<"farm_authorized", 'DateTime'>
    readonly updated_by_id: FieldRef<"farm_authorized", 'String'>
    readonly updated_by: FieldRef<"farm_authorized", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farm_authorized findUnique
   */
  export type farm_authorizedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * Filter, which farm_authorized to fetch.
     */
    where: farm_authorizedWhereUniqueInput
  }

  /**
   * farm_authorized findUniqueOrThrow
   */
  export type farm_authorizedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * Filter, which farm_authorized to fetch.
     */
    where: farm_authorizedWhereUniqueInput
  }

  /**
   * farm_authorized findFirst
   */
  export type farm_authorizedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * Filter, which farm_authorized to fetch.
     */
    where?: farm_authorizedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_authorizeds to fetch.
     */
    orderBy?: farm_authorizedOrderByWithRelationInput | farm_authorizedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_authorizeds.
     */
    cursor?: farm_authorizedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_authorizeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_authorizeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_authorizeds.
     */
    distinct?: Farm_authorizedScalarFieldEnum | Farm_authorizedScalarFieldEnum[]
  }

  /**
   * farm_authorized findFirstOrThrow
   */
  export type farm_authorizedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * Filter, which farm_authorized to fetch.
     */
    where?: farm_authorizedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_authorizeds to fetch.
     */
    orderBy?: farm_authorizedOrderByWithRelationInput | farm_authorizedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_authorizeds.
     */
    cursor?: farm_authorizedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_authorizeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_authorizeds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_authorizeds.
     */
    distinct?: Farm_authorizedScalarFieldEnum | Farm_authorizedScalarFieldEnum[]
  }

  /**
   * farm_authorized findMany
   */
  export type farm_authorizedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * Filter, which farm_authorizeds to fetch.
     */
    where?: farm_authorizedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_authorizeds to fetch.
     */
    orderBy?: farm_authorizedOrderByWithRelationInput | farm_authorizedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farm_authorizeds.
     */
    cursor?: farm_authorizedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_authorizeds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_authorizeds.
     */
    skip?: number
    distinct?: Farm_authorizedScalarFieldEnum | Farm_authorizedScalarFieldEnum[]
  }

  /**
   * farm_authorized create
   */
  export type farm_authorizedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * The data needed to create a farm_authorized.
     */
    data: XOR<farm_authorizedCreateInput, farm_authorizedUncheckedCreateInput>
  }

  /**
   * farm_authorized createMany
   */
  export type farm_authorizedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farm_authorizeds.
     */
    data: farm_authorizedCreateManyInput | farm_authorizedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_authorized createManyAndReturn
   */
  export type farm_authorizedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * The data used to create many farm_authorizeds.
     */
    data: farm_authorizedCreateManyInput | farm_authorizedCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * farm_authorized update
   */
  export type farm_authorizedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * The data needed to update a farm_authorized.
     */
    data: XOR<farm_authorizedUpdateInput, farm_authorizedUncheckedUpdateInput>
    /**
     * Choose, which farm_authorized to update.
     */
    where: farm_authorizedWhereUniqueInput
  }

  /**
   * farm_authorized updateMany
   */
  export type farm_authorizedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farm_authorizeds.
     */
    data: XOR<farm_authorizedUpdateManyMutationInput, farm_authorizedUncheckedUpdateManyInput>
    /**
     * Filter which farm_authorizeds to update
     */
    where?: farm_authorizedWhereInput
    /**
     * Limit how many farm_authorizeds to update.
     */
    limit?: number
  }

  /**
   * farm_authorized updateManyAndReturn
   */
  export type farm_authorizedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * The data used to update farm_authorizeds.
     */
    data: XOR<farm_authorizedUpdateManyMutationInput, farm_authorizedUncheckedUpdateManyInput>
    /**
     * Filter which farm_authorizeds to update
     */
    where?: farm_authorizedWhereInput
    /**
     * Limit how many farm_authorizeds to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * farm_authorized upsert
   */
  export type farm_authorizedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * The filter to search for the farm_authorized to update in case it exists.
     */
    where: farm_authorizedWhereUniqueInput
    /**
     * In case the farm_authorized found by the `where` argument doesn't exist, create a new farm_authorized with this data.
     */
    create: XOR<farm_authorizedCreateInput, farm_authorizedUncheckedCreateInput>
    /**
     * In case the farm_authorized was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farm_authorizedUpdateInput, farm_authorizedUncheckedUpdateInput>
  }

  /**
   * farm_authorized delete
   */
  export type farm_authorizedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    /**
     * Filter which farm_authorized to delete.
     */
    where: farm_authorizedWhereUniqueInput
  }

  /**
   * farm_authorized deleteMany
   */
  export type farm_authorizedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_authorizeds to delete
     */
    where?: farm_authorizedWhereInput
    /**
     * Limit how many farm_authorizeds to delete.
     */
    limit?: number
  }

  /**
   * farm_authorized without action
   */
  export type farm_authorizedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
  }


  /**
   * Model farm_create_staged
   */

  export type AggregateFarm_create_staged = {
    _count: Farm_create_stagedCountAggregateOutputType | null
    _avg: Farm_create_stagedAvgAggregateOutputType | null
    _sum: Farm_create_stagedSumAggregateOutputType | null
    _min: Farm_create_stagedMinAggregateOutputType | null
    _max: Farm_create_stagedMaxAggregateOutputType | null
  }

  export type Farm_create_stagedAvgAggregateOutputType = {
    max_cows: number | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
  }

  export type Farm_create_stagedSumAggregateOutputType = {
    max_cows: number | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
  }

  export type Farm_create_stagedMinAggregateOutputType = {
    id: string | null
    staged_id: string | null
    farm_identification: string | null
    farm_type: string | null
    ref_1: string | null
    max_cows: number | null
    name: string | null
    standard: string | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    tracer_id: string | null
    is_owner_ref_farmer: boolean | null
    farmer_id: string | null
    owner_type: string | null
    owner_tin: string | null
    owner_title: string | null
    owner_first_name: string | null
    owner_middle_name: string | null
    owner_last_name: string | null
    owner_company_name: string | null
    owner_gender: string | null
    owner_birthdate: string | null
    owner_education_degree: string | null
    owner_occupation: string | null
    owner_second_occupation: string | null
    owner_phone_number: string | null
    owner_mobile_number: string | null
    owner_email: string | null
    owner_line_id: string | null
    owner_address_line1: string | null
    owner_address_subdistrict: string | null
    owner_address_district: string | null
    owner_address_province: string | null
    owner_address_zipcode: string | null
    owner_contact_address_line1: string | null
    owner_contact_address_subdistrict: string | null
    owner_contact_address_district: string | null
    owner_contact_address_province: string | null
    owner_contact_address_zipcode: string | null
    authorized_type: string | null
    authorized_second_type: string | null
    authorized_license_id: string | null
    authorized_expire_date: Date | null
    veterinary_name: string | null
    veterinary_license_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    status: string | null
  }

  export type Farm_create_stagedMaxAggregateOutputType = {
    id: string | null
    staged_id: string | null
    farm_identification: string | null
    farm_type: string | null
    ref_1: string | null
    max_cows: number | null
    name: string | null
    standard: string | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    tracer_id: string | null
    is_owner_ref_farmer: boolean | null
    farmer_id: string | null
    owner_type: string | null
    owner_tin: string | null
    owner_title: string | null
    owner_first_name: string | null
    owner_middle_name: string | null
    owner_last_name: string | null
    owner_company_name: string | null
    owner_gender: string | null
    owner_birthdate: string | null
    owner_education_degree: string | null
    owner_occupation: string | null
    owner_second_occupation: string | null
    owner_phone_number: string | null
    owner_mobile_number: string | null
    owner_email: string | null
    owner_line_id: string | null
    owner_address_line1: string | null
    owner_address_subdistrict: string | null
    owner_address_district: string | null
    owner_address_province: string | null
    owner_address_zipcode: string | null
    owner_contact_address_line1: string | null
    owner_contact_address_subdistrict: string | null
    owner_contact_address_district: string | null
    owner_contact_address_province: string | null
    owner_contact_address_zipcode: string | null
    authorized_type: string | null
    authorized_second_type: string | null
    authorized_license_id: string | null
    authorized_expire_date: Date | null
    veterinary_name: string | null
    veterinary_license_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    status: string | null
  }

  export type Farm_create_stagedCountAggregateOutputType = {
    id: number
    staged_id: number
    farm_identification: number
    farm_type: number
    ref_1: number
    max_cows: number
    name: number
    standard: number
    rai: number
    ngan: number
    wa: number
    address_line1: number
    address_subdistrict: number
    address_district: number
    address_province: number
    address_zipcode: number
    tracer_id: number
    is_owner_ref_farmer: number
    farmer_id: number
    owner_type: number
    owner_tin: number
    owner_title: number
    owner_first_name: number
    owner_middle_name: number
    owner_last_name: number
    owner_company_name: number
    owner_gender: number
    owner_birthdate: number
    owner_education_degree: number
    owner_occupation: number
    owner_second_occupation: number
    owner_phone_number: number
    owner_mobile_number: number
    owner_email: number
    owner_line_id: number
    owner_address_line1: number
    owner_address_subdistrict: number
    owner_address_district: number
    owner_address_province: number
    owner_address_zipcode: number
    owner_contact_address_line1: number
    owner_contact_address_subdistrict: number
    owner_contact_address_district: number
    owner_contact_address_province: number
    owner_contact_address_zipcode: number
    authorized_type: number
    authorized_second_type: number
    authorized_license_id: number
    authorized_expire_date: number
    veterinary_name: number
    veterinary_license_id: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    status: number
    _all: number
  }


  export type Farm_create_stagedAvgAggregateInputType = {
    max_cows?: true
    rai?: true
    ngan?: true
    wa?: true
  }

  export type Farm_create_stagedSumAggregateInputType = {
    max_cows?: true
    rai?: true
    ngan?: true
    wa?: true
  }

  export type Farm_create_stagedMinAggregateInputType = {
    id?: true
    staged_id?: true
    farm_identification?: true
    farm_type?: true
    ref_1?: true
    max_cows?: true
    name?: true
    standard?: true
    rai?: true
    ngan?: true
    wa?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    tracer_id?: true
    is_owner_ref_farmer?: true
    farmer_id?: true
    owner_type?: true
    owner_tin?: true
    owner_title?: true
    owner_first_name?: true
    owner_middle_name?: true
    owner_last_name?: true
    owner_company_name?: true
    owner_gender?: true
    owner_birthdate?: true
    owner_education_degree?: true
    owner_occupation?: true
    owner_second_occupation?: true
    owner_phone_number?: true
    owner_mobile_number?: true
    owner_email?: true
    owner_line_id?: true
    owner_address_line1?: true
    owner_address_subdistrict?: true
    owner_address_district?: true
    owner_address_province?: true
    owner_address_zipcode?: true
    owner_contact_address_line1?: true
    owner_contact_address_subdistrict?: true
    owner_contact_address_district?: true
    owner_contact_address_province?: true
    owner_contact_address_zipcode?: true
    authorized_type?: true
    authorized_second_type?: true
    authorized_license_id?: true
    authorized_expire_date?: true
    veterinary_name?: true
    veterinary_license_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    status?: true
  }

  export type Farm_create_stagedMaxAggregateInputType = {
    id?: true
    staged_id?: true
    farm_identification?: true
    farm_type?: true
    ref_1?: true
    max_cows?: true
    name?: true
    standard?: true
    rai?: true
    ngan?: true
    wa?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    tracer_id?: true
    is_owner_ref_farmer?: true
    farmer_id?: true
    owner_type?: true
    owner_tin?: true
    owner_title?: true
    owner_first_name?: true
    owner_middle_name?: true
    owner_last_name?: true
    owner_company_name?: true
    owner_gender?: true
    owner_birthdate?: true
    owner_education_degree?: true
    owner_occupation?: true
    owner_second_occupation?: true
    owner_phone_number?: true
    owner_mobile_number?: true
    owner_email?: true
    owner_line_id?: true
    owner_address_line1?: true
    owner_address_subdistrict?: true
    owner_address_district?: true
    owner_address_province?: true
    owner_address_zipcode?: true
    owner_contact_address_line1?: true
    owner_contact_address_subdistrict?: true
    owner_contact_address_district?: true
    owner_contact_address_province?: true
    owner_contact_address_zipcode?: true
    authorized_type?: true
    authorized_second_type?: true
    authorized_license_id?: true
    authorized_expire_date?: true
    veterinary_name?: true
    veterinary_license_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    status?: true
  }

  export type Farm_create_stagedCountAggregateInputType = {
    id?: true
    staged_id?: true
    farm_identification?: true
    farm_type?: true
    ref_1?: true
    max_cows?: true
    name?: true
    standard?: true
    rai?: true
    ngan?: true
    wa?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    tracer_id?: true
    is_owner_ref_farmer?: true
    farmer_id?: true
    owner_type?: true
    owner_tin?: true
    owner_title?: true
    owner_first_name?: true
    owner_middle_name?: true
    owner_last_name?: true
    owner_company_name?: true
    owner_gender?: true
    owner_birthdate?: true
    owner_education_degree?: true
    owner_occupation?: true
    owner_second_occupation?: true
    owner_phone_number?: true
    owner_mobile_number?: true
    owner_email?: true
    owner_line_id?: true
    owner_address_line1?: true
    owner_address_subdistrict?: true
    owner_address_district?: true
    owner_address_province?: true
    owner_address_zipcode?: true
    owner_contact_address_line1?: true
    owner_contact_address_subdistrict?: true
    owner_contact_address_district?: true
    owner_contact_address_province?: true
    owner_contact_address_zipcode?: true
    authorized_type?: true
    authorized_second_type?: true
    authorized_license_id?: true
    authorized_expire_date?: true
    veterinary_name?: true
    veterinary_license_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    status?: true
    _all?: true
  }

  export type Farm_create_stagedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_create_staged to aggregate.
     */
    where?: farm_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_create_stageds to fetch.
     */
    orderBy?: farm_create_stagedOrderByWithRelationInput | farm_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farm_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farm_create_stageds
    **/
    _count?: true | Farm_create_stagedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Farm_create_stagedAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Farm_create_stagedSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farm_create_stagedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farm_create_stagedMaxAggregateInputType
  }

  export type GetFarm_create_stagedAggregateType<T extends Farm_create_stagedAggregateArgs> = {
        [P in keyof T & keyof AggregateFarm_create_staged]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarm_create_staged[P]>
      : GetScalarType<T[P], AggregateFarm_create_staged[P]>
  }




  export type farm_create_stagedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_create_stagedWhereInput
    orderBy?: farm_create_stagedOrderByWithAggregationInput | farm_create_stagedOrderByWithAggregationInput[]
    by: Farm_create_stagedScalarFieldEnum[] | Farm_create_stagedScalarFieldEnum
    having?: farm_create_stagedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farm_create_stagedCountAggregateInputType | true
    _avg?: Farm_create_stagedAvgAggregateInputType
    _sum?: Farm_create_stagedSumAggregateInputType
    _min?: Farm_create_stagedMinAggregateInputType
    _max?: Farm_create_stagedMaxAggregateInputType
  }

  export type Farm_create_stagedGroupByOutputType = {
    id: string
    staged_id: string
    farm_identification: string
    farm_type: string
    ref_1: string
    max_cows: number
    name: string
    standard: string
    rai: Decimal
    ngan: Decimal
    wa: Decimal
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    tracer_id: string
    is_owner_ref_farmer: boolean
    farmer_id: string | null
    owner_type: string | null
    owner_tin: string | null
    owner_title: string | null
    owner_first_name: string | null
    owner_middle_name: string | null
    owner_last_name: string | null
    owner_company_name: string | null
    owner_gender: string | null
    owner_birthdate: string | null
    owner_education_degree: string | null
    owner_occupation: string | null
    owner_second_occupation: string | null
    owner_phone_number: string | null
    owner_mobile_number: string | null
    owner_email: string | null
    owner_line_id: string | null
    owner_address_line1: string | null
    owner_address_subdistrict: string | null
    owner_address_district: string | null
    owner_address_province: string | null
    owner_address_zipcode: string | null
    owner_contact_address_line1: string | null
    owner_contact_address_subdistrict: string | null
    owner_contact_address_district: string | null
    owner_contact_address_province: string | null
    owner_contact_address_zipcode: string | null
    authorized_type: string
    authorized_second_type: string | null
    authorized_license_id: string
    authorized_expire_date: Date
    veterinary_name: string | null
    veterinary_license_id: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    status: string
    _count: Farm_create_stagedCountAggregateOutputType | null
    _avg: Farm_create_stagedAvgAggregateOutputType | null
    _sum: Farm_create_stagedSumAggregateOutputType | null
    _min: Farm_create_stagedMinAggregateOutputType | null
    _max: Farm_create_stagedMaxAggregateOutputType | null
  }

  type GetFarm_create_stagedGroupByPayload<T extends farm_create_stagedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farm_create_stagedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farm_create_stagedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farm_create_stagedGroupByOutputType[P]>
            : GetScalarType<T[P], Farm_create_stagedGroupByOutputType[P]>
        }
      >
    >


  export type farm_create_stagedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    ref_1?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    tracer_id?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    authorized_license_id?: boolean
    authorized_expire_date?: boolean
    veterinary_name?: boolean
    veterinary_license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    status?: boolean
  }, ExtArgs["result"]["farm_create_staged"]>

  export type farm_create_stagedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    ref_1?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    tracer_id?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    authorized_license_id?: boolean
    authorized_expire_date?: boolean
    veterinary_name?: boolean
    veterinary_license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    status?: boolean
  }, ExtArgs["result"]["farm_create_staged"]>

  export type farm_create_stagedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    ref_1?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    tracer_id?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    authorized_license_id?: boolean
    authorized_expire_date?: boolean
    veterinary_name?: boolean
    veterinary_license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    status?: boolean
  }, ExtArgs["result"]["farm_create_staged"]>

  export type farm_create_stagedSelectScalar = {
    id?: boolean
    staged_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    ref_1?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    tracer_id?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    authorized_type?: boolean
    authorized_second_type?: boolean
    authorized_license_id?: boolean
    authorized_expire_date?: boolean
    veterinary_name?: boolean
    veterinary_license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    status?: boolean
  }

  export type farm_create_stagedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staged_id" | "farm_identification" | "farm_type" | "ref_1" | "max_cows" | "name" | "standard" | "rai" | "ngan" | "wa" | "address_line1" | "address_subdistrict" | "address_district" | "address_province" | "address_zipcode" | "tracer_id" | "is_owner_ref_farmer" | "farmer_id" | "owner_type" | "owner_tin" | "owner_title" | "owner_first_name" | "owner_middle_name" | "owner_last_name" | "owner_company_name" | "owner_gender" | "owner_birthdate" | "owner_education_degree" | "owner_occupation" | "owner_second_occupation" | "owner_phone_number" | "owner_mobile_number" | "owner_email" | "owner_line_id" | "owner_address_line1" | "owner_address_subdistrict" | "owner_address_district" | "owner_address_province" | "owner_address_zipcode" | "owner_contact_address_line1" | "owner_contact_address_subdistrict" | "owner_contact_address_district" | "owner_contact_address_province" | "owner_contact_address_zipcode" | "authorized_type" | "authorized_second_type" | "authorized_license_id" | "authorized_expire_date" | "veterinary_name" | "veterinary_license_id" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by" | "status", ExtArgs["result"]["farm_create_staged"]>

  export type $farm_create_stagedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farm_create_staged"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      staged_id: string
      farm_identification: string
      farm_type: string
      ref_1: string
      max_cows: number
      name: string
      standard: string
      rai: Prisma.Decimal
      ngan: Prisma.Decimal
      wa: Prisma.Decimal
      address_line1: string
      address_subdistrict: string
      address_district: string
      address_province: string
      address_zipcode: string
      tracer_id: string
      is_owner_ref_farmer: boolean
      farmer_id: string | null
      owner_type: string | null
      owner_tin: string | null
      owner_title: string | null
      owner_first_name: string | null
      owner_middle_name: string | null
      owner_last_name: string | null
      owner_company_name: string | null
      owner_gender: string | null
      owner_birthdate: string | null
      owner_education_degree: string | null
      owner_occupation: string | null
      owner_second_occupation: string | null
      owner_phone_number: string | null
      owner_mobile_number: string | null
      owner_email: string | null
      owner_line_id: string | null
      owner_address_line1: string | null
      owner_address_subdistrict: string | null
      owner_address_district: string | null
      owner_address_province: string | null
      owner_address_zipcode: string | null
      owner_contact_address_line1: string | null
      owner_contact_address_subdistrict: string | null
      owner_contact_address_district: string | null
      owner_contact_address_province: string | null
      owner_contact_address_zipcode: string | null
      authorized_type: string
      authorized_second_type: string | null
      authorized_license_id: string
      authorized_expire_date: Date
      veterinary_name: string | null
      veterinary_license_id: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
      status: string
    }, ExtArgs["result"]["farm_create_staged"]>
    composites: {}
  }

  type farm_create_stagedGetPayload<S extends boolean | null | undefined | farm_create_stagedDefaultArgs> = $Result.GetResult<Prisma.$farm_create_stagedPayload, S>

  type farm_create_stagedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farm_create_stagedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farm_create_stagedCountAggregateInputType | true
    }

  export interface farm_create_stagedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farm_create_staged'], meta: { name: 'farm_create_staged' } }
    /**
     * Find zero or one Farm_create_staged that matches the filter.
     * @param {farm_create_stagedFindUniqueArgs} args - Arguments to find a Farm_create_staged
     * @example
     * // Get one Farm_create_staged
     * const farm_create_staged = await prisma.farm_create_staged.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farm_create_stagedFindUniqueArgs>(args: SelectSubset<T, farm_create_stagedFindUniqueArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farm_create_staged that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farm_create_stagedFindUniqueOrThrowArgs} args - Arguments to find a Farm_create_staged
     * @example
     * // Get one Farm_create_staged
     * const farm_create_staged = await prisma.farm_create_staged.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farm_create_stagedFindUniqueOrThrowArgs>(args: SelectSubset<T, farm_create_stagedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_create_staged that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_create_stagedFindFirstArgs} args - Arguments to find a Farm_create_staged
     * @example
     * // Get one Farm_create_staged
     * const farm_create_staged = await prisma.farm_create_staged.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farm_create_stagedFindFirstArgs>(args?: SelectSubset<T, farm_create_stagedFindFirstArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_create_staged that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_create_stagedFindFirstOrThrowArgs} args - Arguments to find a Farm_create_staged
     * @example
     * // Get one Farm_create_staged
     * const farm_create_staged = await prisma.farm_create_staged.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farm_create_stagedFindFirstOrThrowArgs>(args?: SelectSubset<T, farm_create_stagedFindFirstOrThrowArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farm_create_stageds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_create_stagedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farm_create_stageds
     * const farm_create_stageds = await prisma.farm_create_staged.findMany()
     * 
     * // Get first 10 Farm_create_stageds
     * const farm_create_stageds = await prisma.farm_create_staged.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farm_create_stagedWithIdOnly = await prisma.farm_create_staged.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farm_create_stagedFindManyArgs>(args?: SelectSubset<T, farm_create_stagedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farm_create_staged.
     * @param {farm_create_stagedCreateArgs} args - Arguments to create a Farm_create_staged.
     * @example
     * // Create one Farm_create_staged
     * const Farm_create_staged = await prisma.farm_create_staged.create({
     *   data: {
     *     // ... data to create a Farm_create_staged
     *   }
     * })
     * 
     */
    create<T extends farm_create_stagedCreateArgs>(args: SelectSubset<T, farm_create_stagedCreateArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farm_create_stageds.
     * @param {farm_create_stagedCreateManyArgs} args - Arguments to create many Farm_create_stageds.
     * @example
     * // Create many Farm_create_stageds
     * const farm_create_staged = await prisma.farm_create_staged.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farm_create_stagedCreateManyArgs>(args?: SelectSubset<T, farm_create_stagedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farm_create_stageds and returns the data saved in the database.
     * @param {farm_create_stagedCreateManyAndReturnArgs} args - Arguments to create many Farm_create_stageds.
     * @example
     * // Create many Farm_create_stageds
     * const farm_create_staged = await prisma.farm_create_staged.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farm_create_stageds and only return the `id`
     * const farm_create_stagedWithIdOnly = await prisma.farm_create_staged.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farm_create_stagedCreateManyAndReturnArgs>(args?: SelectSubset<T, farm_create_stagedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farm_create_staged.
     * @param {farm_create_stagedDeleteArgs} args - Arguments to delete one Farm_create_staged.
     * @example
     * // Delete one Farm_create_staged
     * const Farm_create_staged = await prisma.farm_create_staged.delete({
     *   where: {
     *     // ... filter to delete one Farm_create_staged
     *   }
     * })
     * 
     */
    delete<T extends farm_create_stagedDeleteArgs>(args: SelectSubset<T, farm_create_stagedDeleteArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farm_create_staged.
     * @param {farm_create_stagedUpdateArgs} args - Arguments to update one Farm_create_staged.
     * @example
     * // Update one Farm_create_staged
     * const farm_create_staged = await prisma.farm_create_staged.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farm_create_stagedUpdateArgs>(args: SelectSubset<T, farm_create_stagedUpdateArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farm_create_stageds.
     * @param {farm_create_stagedDeleteManyArgs} args - Arguments to filter Farm_create_stageds to delete.
     * @example
     * // Delete a few Farm_create_stageds
     * const { count } = await prisma.farm_create_staged.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farm_create_stagedDeleteManyArgs>(args?: SelectSubset<T, farm_create_stagedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_create_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_create_stagedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farm_create_stageds
     * const farm_create_staged = await prisma.farm_create_staged.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farm_create_stagedUpdateManyArgs>(args: SelectSubset<T, farm_create_stagedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_create_stageds and returns the data updated in the database.
     * @param {farm_create_stagedUpdateManyAndReturnArgs} args - Arguments to update many Farm_create_stageds.
     * @example
     * // Update many Farm_create_stageds
     * const farm_create_staged = await prisma.farm_create_staged.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farm_create_stageds and only return the `id`
     * const farm_create_stagedWithIdOnly = await prisma.farm_create_staged.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farm_create_stagedUpdateManyAndReturnArgs>(args: SelectSubset<T, farm_create_stagedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farm_create_staged.
     * @param {farm_create_stagedUpsertArgs} args - Arguments to update or create a Farm_create_staged.
     * @example
     * // Update or create a Farm_create_staged
     * const farm_create_staged = await prisma.farm_create_staged.upsert({
     *   create: {
     *     // ... data to create a Farm_create_staged
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farm_create_staged we want to update
     *   }
     * })
     */
    upsert<T extends farm_create_stagedUpsertArgs>(args: SelectSubset<T, farm_create_stagedUpsertArgs<ExtArgs>>): Prisma__farm_create_stagedClient<$Result.GetResult<Prisma.$farm_create_stagedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farm_create_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_create_stagedCountArgs} args - Arguments to filter Farm_create_stageds to count.
     * @example
     * // Count the number of Farm_create_stageds
     * const count = await prisma.farm_create_staged.count({
     *   where: {
     *     // ... the filter for the Farm_create_stageds we want to count
     *   }
     * })
    **/
    count<T extends farm_create_stagedCountArgs>(
      args?: Subset<T, farm_create_stagedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farm_create_stagedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farm_create_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farm_create_stagedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farm_create_stagedAggregateArgs>(args: Subset<T, Farm_create_stagedAggregateArgs>): Prisma.PrismaPromise<GetFarm_create_stagedAggregateType<T>>

    /**
     * Group by Farm_create_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_create_stagedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farm_create_stagedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farm_create_stagedGroupByArgs['orderBy'] }
        : { orderBy?: farm_create_stagedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farm_create_stagedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarm_create_stagedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farm_create_staged model
   */
  readonly fields: farm_create_stagedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farm_create_staged.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farm_create_stagedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farm_create_staged model
   */
  interface farm_create_stagedFieldRefs {
    readonly id: FieldRef<"farm_create_staged", 'String'>
    readonly staged_id: FieldRef<"farm_create_staged", 'String'>
    readonly farm_identification: FieldRef<"farm_create_staged", 'String'>
    readonly farm_type: FieldRef<"farm_create_staged", 'String'>
    readonly ref_1: FieldRef<"farm_create_staged", 'String'>
    readonly max_cows: FieldRef<"farm_create_staged", 'Int'>
    readonly name: FieldRef<"farm_create_staged", 'String'>
    readonly standard: FieldRef<"farm_create_staged", 'String'>
    readonly rai: FieldRef<"farm_create_staged", 'Decimal'>
    readonly ngan: FieldRef<"farm_create_staged", 'Decimal'>
    readonly wa: FieldRef<"farm_create_staged", 'Decimal'>
    readonly address_line1: FieldRef<"farm_create_staged", 'String'>
    readonly address_subdistrict: FieldRef<"farm_create_staged", 'String'>
    readonly address_district: FieldRef<"farm_create_staged", 'String'>
    readonly address_province: FieldRef<"farm_create_staged", 'String'>
    readonly address_zipcode: FieldRef<"farm_create_staged", 'String'>
    readonly tracer_id: FieldRef<"farm_create_staged", 'String'>
    readonly is_owner_ref_farmer: FieldRef<"farm_create_staged", 'Boolean'>
    readonly farmer_id: FieldRef<"farm_create_staged", 'String'>
    readonly owner_type: FieldRef<"farm_create_staged", 'String'>
    readonly owner_tin: FieldRef<"farm_create_staged", 'String'>
    readonly owner_title: FieldRef<"farm_create_staged", 'String'>
    readonly owner_first_name: FieldRef<"farm_create_staged", 'String'>
    readonly owner_middle_name: FieldRef<"farm_create_staged", 'String'>
    readonly owner_last_name: FieldRef<"farm_create_staged", 'String'>
    readonly owner_company_name: FieldRef<"farm_create_staged", 'String'>
    readonly owner_gender: FieldRef<"farm_create_staged", 'String'>
    readonly owner_birthdate: FieldRef<"farm_create_staged", 'String'>
    readonly owner_education_degree: FieldRef<"farm_create_staged", 'String'>
    readonly owner_occupation: FieldRef<"farm_create_staged", 'String'>
    readonly owner_second_occupation: FieldRef<"farm_create_staged", 'String'>
    readonly owner_phone_number: FieldRef<"farm_create_staged", 'String'>
    readonly owner_mobile_number: FieldRef<"farm_create_staged", 'String'>
    readonly owner_email: FieldRef<"farm_create_staged", 'String'>
    readonly owner_line_id: FieldRef<"farm_create_staged", 'String'>
    readonly owner_address_line1: FieldRef<"farm_create_staged", 'String'>
    readonly owner_address_subdistrict: FieldRef<"farm_create_staged", 'String'>
    readonly owner_address_district: FieldRef<"farm_create_staged", 'String'>
    readonly owner_address_province: FieldRef<"farm_create_staged", 'String'>
    readonly owner_address_zipcode: FieldRef<"farm_create_staged", 'String'>
    readonly owner_contact_address_line1: FieldRef<"farm_create_staged", 'String'>
    readonly owner_contact_address_subdistrict: FieldRef<"farm_create_staged", 'String'>
    readonly owner_contact_address_district: FieldRef<"farm_create_staged", 'String'>
    readonly owner_contact_address_province: FieldRef<"farm_create_staged", 'String'>
    readonly owner_contact_address_zipcode: FieldRef<"farm_create_staged", 'String'>
    readonly authorized_type: FieldRef<"farm_create_staged", 'String'>
    readonly authorized_second_type: FieldRef<"farm_create_staged", 'String'>
    readonly authorized_license_id: FieldRef<"farm_create_staged", 'String'>
    readonly authorized_expire_date: FieldRef<"farm_create_staged", 'DateTime'>
    readonly veterinary_name: FieldRef<"farm_create_staged", 'String'>
    readonly veterinary_license_id: FieldRef<"farm_create_staged", 'String'>
    readonly created_at: FieldRef<"farm_create_staged", 'DateTime'>
    readonly created_by_id: FieldRef<"farm_create_staged", 'String'>
    readonly created_by: FieldRef<"farm_create_staged", 'String'>
    readonly updated_at: FieldRef<"farm_create_staged", 'DateTime'>
    readonly updated_by_id: FieldRef<"farm_create_staged", 'String'>
    readonly updated_by: FieldRef<"farm_create_staged", 'String'>
    readonly status: FieldRef<"farm_create_staged", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farm_create_staged findUnique
   */
  export type farm_create_stagedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farm_create_staged to fetch.
     */
    where: farm_create_stagedWhereUniqueInput
  }

  /**
   * farm_create_staged findUniqueOrThrow
   */
  export type farm_create_stagedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farm_create_staged to fetch.
     */
    where: farm_create_stagedWhereUniqueInput
  }

  /**
   * farm_create_staged findFirst
   */
  export type farm_create_stagedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farm_create_staged to fetch.
     */
    where?: farm_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_create_stageds to fetch.
     */
    orderBy?: farm_create_stagedOrderByWithRelationInput | farm_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_create_stageds.
     */
    cursor?: farm_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_create_stageds.
     */
    distinct?: Farm_create_stagedScalarFieldEnum | Farm_create_stagedScalarFieldEnum[]
  }

  /**
   * farm_create_staged findFirstOrThrow
   */
  export type farm_create_stagedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farm_create_staged to fetch.
     */
    where?: farm_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_create_stageds to fetch.
     */
    orderBy?: farm_create_stagedOrderByWithRelationInput | farm_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_create_stageds.
     */
    cursor?: farm_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_create_stageds.
     */
    distinct?: Farm_create_stagedScalarFieldEnum | Farm_create_stagedScalarFieldEnum[]
  }

  /**
   * farm_create_staged findMany
   */
  export type farm_create_stagedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farm_create_stageds to fetch.
     */
    where?: farm_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_create_stageds to fetch.
     */
    orderBy?: farm_create_stagedOrderByWithRelationInput | farm_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farm_create_stageds.
     */
    cursor?: farm_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_create_stageds.
     */
    skip?: number
    distinct?: Farm_create_stagedScalarFieldEnum | Farm_create_stagedScalarFieldEnum[]
  }

  /**
   * farm_create_staged create
   */
  export type farm_create_stagedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * The data needed to create a farm_create_staged.
     */
    data: XOR<farm_create_stagedCreateInput, farm_create_stagedUncheckedCreateInput>
  }

  /**
   * farm_create_staged createMany
   */
  export type farm_create_stagedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farm_create_stageds.
     */
    data: farm_create_stagedCreateManyInput | farm_create_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_create_staged createManyAndReturn
   */
  export type farm_create_stagedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * The data used to create many farm_create_stageds.
     */
    data: farm_create_stagedCreateManyInput | farm_create_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_create_staged update
   */
  export type farm_create_stagedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * The data needed to update a farm_create_staged.
     */
    data: XOR<farm_create_stagedUpdateInput, farm_create_stagedUncheckedUpdateInput>
    /**
     * Choose, which farm_create_staged to update.
     */
    where: farm_create_stagedWhereUniqueInput
  }

  /**
   * farm_create_staged updateMany
   */
  export type farm_create_stagedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farm_create_stageds.
     */
    data: XOR<farm_create_stagedUpdateManyMutationInput, farm_create_stagedUncheckedUpdateManyInput>
    /**
     * Filter which farm_create_stageds to update
     */
    where?: farm_create_stagedWhereInput
    /**
     * Limit how many farm_create_stageds to update.
     */
    limit?: number
  }

  /**
   * farm_create_staged updateManyAndReturn
   */
  export type farm_create_stagedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * The data used to update farm_create_stageds.
     */
    data: XOR<farm_create_stagedUpdateManyMutationInput, farm_create_stagedUncheckedUpdateManyInput>
    /**
     * Filter which farm_create_stageds to update
     */
    where?: farm_create_stagedWhereInput
    /**
     * Limit how many farm_create_stageds to update.
     */
    limit?: number
  }

  /**
   * farm_create_staged upsert
   */
  export type farm_create_stagedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * The filter to search for the farm_create_staged to update in case it exists.
     */
    where: farm_create_stagedWhereUniqueInput
    /**
     * In case the farm_create_staged found by the `where` argument doesn't exist, create a new farm_create_staged with this data.
     */
    create: XOR<farm_create_stagedCreateInput, farm_create_stagedUncheckedCreateInput>
    /**
     * In case the farm_create_staged was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farm_create_stagedUpdateInput, farm_create_stagedUncheckedUpdateInput>
  }

  /**
   * farm_create_staged delete
   */
  export type farm_create_stagedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
    /**
     * Filter which farm_create_staged to delete.
     */
    where: farm_create_stagedWhereUniqueInput
  }

  /**
   * farm_create_staged deleteMany
   */
  export type farm_create_stagedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_create_stageds to delete
     */
    where?: farm_create_stagedWhereInput
    /**
     * Limit how many farm_create_stageds to delete.
     */
    limit?: number
  }

  /**
   * farm_create_staged without action
   */
  export type farm_create_stagedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_create_staged
     */
    select?: farm_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_create_staged
     */
    omit?: farm_create_stagedOmit<ExtArgs> | null
  }


  /**
   * Model farm_sourcing
   */

  export type AggregateFarm_sourcing = {
    _count: Farm_sourcingCountAggregateOutputType | null
    _avg: Farm_sourcingAvgAggregateOutputType | null
    _sum: Farm_sourcingSumAggregateOutputType | null
    _min: Farm_sourcingMinAggregateOutputType | null
    _max: Farm_sourcingMaxAggregateOutputType | null
  }

  export type Farm_sourcingAvgAggregateOutputType = {
    amount: number | null
  }

  export type Farm_sourcingSumAggregateOutputType = {
    amount: number | null
  }

  export type Farm_sourcingMinAggregateOutputType = {
    id: string | null
    order_id: string | null
    order_request_id: string | null
    farm_id: string | null
    amount: number | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farm_sourcingMaxAggregateOutputType = {
    id: string | null
    order_id: string | null
    order_request_id: string | null
    farm_id: string | null
    amount: number | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farm_sourcingCountAggregateOutputType = {
    id: number
    order_id: number
    order_request_id: number
    farm_id: number
    amount: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Farm_sourcingAvgAggregateInputType = {
    amount?: true
  }

  export type Farm_sourcingSumAggregateInputType = {
    amount?: true
  }

  export type Farm_sourcingMinAggregateInputType = {
    id?: true
    order_id?: true
    order_request_id?: true
    farm_id?: true
    amount?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farm_sourcingMaxAggregateInputType = {
    id?: true
    order_id?: true
    order_request_id?: true
    farm_id?: true
    amount?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farm_sourcingCountAggregateInputType = {
    id?: true
    order_id?: true
    order_request_id?: true
    farm_id?: true
    amount?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Farm_sourcingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_sourcing to aggregate.
     */
    where?: farm_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_sourcings to fetch.
     */
    orderBy?: farm_sourcingOrderByWithRelationInput | farm_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farm_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_sourcings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farm_sourcings
    **/
    _count?: true | Farm_sourcingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Farm_sourcingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Farm_sourcingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farm_sourcingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farm_sourcingMaxAggregateInputType
  }

  export type GetFarm_sourcingAggregateType<T extends Farm_sourcingAggregateArgs> = {
        [P in keyof T & keyof AggregateFarm_sourcing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarm_sourcing[P]>
      : GetScalarType<T[P], AggregateFarm_sourcing[P]>
  }




  export type farm_sourcingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_sourcingWhereInput
    orderBy?: farm_sourcingOrderByWithAggregationInput | farm_sourcingOrderByWithAggregationInput[]
    by: Farm_sourcingScalarFieldEnum[] | Farm_sourcingScalarFieldEnum
    having?: farm_sourcingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farm_sourcingCountAggregateInputType | true
    _avg?: Farm_sourcingAvgAggregateInputType
    _sum?: Farm_sourcingSumAggregateInputType
    _min?: Farm_sourcingMinAggregateInputType
    _max?: Farm_sourcingMaxAggregateInputType
  }

  export type Farm_sourcingGroupByOutputType = {
    id: string
    order_id: string
    order_request_id: string
    farm_id: string
    amount: number
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Farm_sourcingCountAggregateOutputType | null
    _avg: Farm_sourcingAvgAggregateOutputType | null
    _sum: Farm_sourcingSumAggregateOutputType | null
    _min: Farm_sourcingMinAggregateOutputType | null
    _max: Farm_sourcingMaxAggregateOutputType | null
  }

  type GetFarm_sourcingGroupByPayload<T extends farm_sourcingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farm_sourcingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farm_sourcingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farm_sourcingGroupByOutputType[P]>
            : GetScalarType<T[P], Farm_sourcingGroupByOutputType[P]>
        }
      >
    >


  export type farm_sourcingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattle_sourcing?: boolean | farm_sourcing$cattle_sourcingArgs<ExtArgs>
    _count?: boolean | Farm_sourcingCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_sourcing"]>

  export type farm_sourcingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farm_sourcing"]>

  export type farm_sourcingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farm_sourcing"]>

  export type farm_sourcingSelectScalar = {
    id?: boolean
    order_id?: boolean
    order_request_id?: boolean
    farm_id?: boolean
    amount?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type farm_sourcingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "order_request_id" | "farm_id" | "amount" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["farm_sourcing"]>
  export type farm_sourcingInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattle_sourcing?: boolean | farm_sourcing$cattle_sourcingArgs<ExtArgs>
    _count?: boolean | Farm_sourcingCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type farm_sourcingIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type farm_sourcingIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $farm_sourcingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farm_sourcing"
    objects: {
      cattle_sourcing: Prisma.$cattle_sourcingPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order_id: string
      order_request_id: string
      farm_id: string
      amount: number
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["farm_sourcing"]>
    composites: {}
  }

  type farm_sourcingGetPayload<S extends boolean | null | undefined | farm_sourcingDefaultArgs> = $Result.GetResult<Prisma.$farm_sourcingPayload, S>

  type farm_sourcingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farm_sourcingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farm_sourcingCountAggregateInputType | true
    }

  export interface farm_sourcingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farm_sourcing'], meta: { name: 'farm_sourcing' } }
    /**
     * Find zero or one Farm_sourcing that matches the filter.
     * @param {farm_sourcingFindUniqueArgs} args - Arguments to find a Farm_sourcing
     * @example
     * // Get one Farm_sourcing
     * const farm_sourcing = await prisma.farm_sourcing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farm_sourcingFindUniqueArgs>(args: SelectSubset<T, farm_sourcingFindUniqueArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farm_sourcing that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farm_sourcingFindUniqueOrThrowArgs} args - Arguments to find a Farm_sourcing
     * @example
     * // Get one Farm_sourcing
     * const farm_sourcing = await prisma.farm_sourcing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farm_sourcingFindUniqueOrThrowArgs>(args: SelectSubset<T, farm_sourcingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_sourcing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_sourcingFindFirstArgs} args - Arguments to find a Farm_sourcing
     * @example
     * // Get one Farm_sourcing
     * const farm_sourcing = await prisma.farm_sourcing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farm_sourcingFindFirstArgs>(args?: SelectSubset<T, farm_sourcingFindFirstArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_sourcing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_sourcingFindFirstOrThrowArgs} args - Arguments to find a Farm_sourcing
     * @example
     * // Get one Farm_sourcing
     * const farm_sourcing = await prisma.farm_sourcing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farm_sourcingFindFirstOrThrowArgs>(args?: SelectSubset<T, farm_sourcingFindFirstOrThrowArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farm_sourcings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_sourcingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farm_sourcings
     * const farm_sourcings = await prisma.farm_sourcing.findMany()
     * 
     * // Get first 10 Farm_sourcings
     * const farm_sourcings = await prisma.farm_sourcing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farm_sourcingWithIdOnly = await prisma.farm_sourcing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farm_sourcingFindManyArgs>(args?: SelectSubset<T, farm_sourcingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farm_sourcing.
     * @param {farm_sourcingCreateArgs} args - Arguments to create a Farm_sourcing.
     * @example
     * // Create one Farm_sourcing
     * const Farm_sourcing = await prisma.farm_sourcing.create({
     *   data: {
     *     // ... data to create a Farm_sourcing
     *   }
     * })
     * 
     */
    create<T extends farm_sourcingCreateArgs>(args: SelectSubset<T, farm_sourcingCreateArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farm_sourcings.
     * @param {farm_sourcingCreateManyArgs} args - Arguments to create many Farm_sourcings.
     * @example
     * // Create many Farm_sourcings
     * const farm_sourcing = await prisma.farm_sourcing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farm_sourcingCreateManyArgs>(args?: SelectSubset<T, farm_sourcingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farm_sourcings and returns the data saved in the database.
     * @param {farm_sourcingCreateManyAndReturnArgs} args - Arguments to create many Farm_sourcings.
     * @example
     * // Create many Farm_sourcings
     * const farm_sourcing = await prisma.farm_sourcing.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farm_sourcings and only return the `id`
     * const farm_sourcingWithIdOnly = await prisma.farm_sourcing.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farm_sourcingCreateManyAndReturnArgs>(args?: SelectSubset<T, farm_sourcingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farm_sourcing.
     * @param {farm_sourcingDeleteArgs} args - Arguments to delete one Farm_sourcing.
     * @example
     * // Delete one Farm_sourcing
     * const Farm_sourcing = await prisma.farm_sourcing.delete({
     *   where: {
     *     // ... filter to delete one Farm_sourcing
     *   }
     * })
     * 
     */
    delete<T extends farm_sourcingDeleteArgs>(args: SelectSubset<T, farm_sourcingDeleteArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farm_sourcing.
     * @param {farm_sourcingUpdateArgs} args - Arguments to update one Farm_sourcing.
     * @example
     * // Update one Farm_sourcing
     * const farm_sourcing = await prisma.farm_sourcing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farm_sourcingUpdateArgs>(args: SelectSubset<T, farm_sourcingUpdateArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farm_sourcings.
     * @param {farm_sourcingDeleteManyArgs} args - Arguments to filter Farm_sourcings to delete.
     * @example
     * // Delete a few Farm_sourcings
     * const { count } = await prisma.farm_sourcing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farm_sourcingDeleteManyArgs>(args?: SelectSubset<T, farm_sourcingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_sourcings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_sourcingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farm_sourcings
     * const farm_sourcing = await prisma.farm_sourcing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farm_sourcingUpdateManyArgs>(args: SelectSubset<T, farm_sourcingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_sourcings and returns the data updated in the database.
     * @param {farm_sourcingUpdateManyAndReturnArgs} args - Arguments to update many Farm_sourcings.
     * @example
     * // Update many Farm_sourcings
     * const farm_sourcing = await prisma.farm_sourcing.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farm_sourcings and only return the `id`
     * const farm_sourcingWithIdOnly = await prisma.farm_sourcing.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farm_sourcingUpdateManyAndReturnArgs>(args: SelectSubset<T, farm_sourcingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farm_sourcing.
     * @param {farm_sourcingUpsertArgs} args - Arguments to update or create a Farm_sourcing.
     * @example
     * // Update or create a Farm_sourcing
     * const farm_sourcing = await prisma.farm_sourcing.upsert({
     *   create: {
     *     // ... data to create a Farm_sourcing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farm_sourcing we want to update
     *   }
     * })
     */
    upsert<T extends farm_sourcingUpsertArgs>(args: SelectSubset<T, farm_sourcingUpsertArgs<ExtArgs>>): Prisma__farm_sourcingClient<$Result.GetResult<Prisma.$farm_sourcingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farm_sourcings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_sourcingCountArgs} args - Arguments to filter Farm_sourcings to count.
     * @example
     * // Count the number of Farm_sourcings
     * const count = await prisma.farm_sourcing.count({
     *   where: {
     *     // ... the filter for the Farm_sourcings we want to count
     *   }
     * })
    **/
    count<T extends farm_sourcingCountArgs>(
      args?: Subset<T, farm_sourcingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farm_sourcingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farm_sourcing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farm_sourcingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farm_sourcingAggregateArgs>(args: Subset<T, Farm_sourcingAggregateArgs>): Prisma.PrismaPromise<GetFarm_sourcingAggregateType<T>>

    /**
     * Group by Farm_sourcing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_sourcingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farm_sourcingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farm_sourcingGroupByArgs['orderBy'] }
        : { orderBy?: farm_sourcingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farm_sourcingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarm_sourcingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farm_sourcing model
   */
  readonly fields: farm_sourcingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farm_sourcing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farm_sourcingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattle_sourcing<T extends farm_sourcing$cattle_sourcingArgs<ExtArgs> = {}>(args?: Subset<T, farm_sourcing$cattle_sourcingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattle_sourcingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farm_sourcing model
   */
  interface farm_sourcingFieldRefs {
    readonly id: FieldRef<"farm_sourcing", 'String'>
    readonly order_id: FieldRef<"farm_sourcing", 'String'>
    readonly order_request_id: FieldRef<"farm_sourcing", 'String'>
    readonly farm_id: FieldRef<"farm_sourcing", 'String'>
    readonly amount: FieldRef<"farm_sourcing", 'Int'>
    readonly status: FieldRef<"farm_sourcing", 'String'>
    readonly created_at: FieldRef<"farm_sourcing", 'DateTime'>
    readonly created_by_id: FieldRef<"farm_sourcing", 'String'>
    readonly created_by: FieldRef<"farm_sourcing", 'String'>
    readonly updated_at: FieldRef<"farm_sourcing", 'DateTime'>
    readonly updated_by_id: FieldRef<"farm_sourcing", 'String'>
    readonly updated_by: FieldRef<"farm_sourcing", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farm_sourcing findUnique
   */
  export type farm_sourcingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which farm_sourcing to fetch.
     */
    where: farm_sourcingWhereUniqueInput
  }

  /**
   * farm_sourcing findUniqueOrThrow
   */
  export type farm_sourcingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which farm_sourcing to fetch.
     */
    where: farm_sourcingWhereUniqueInput
  }

  /**
   * farm_sourcing findFirst
   */
  export type farm_sourcingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which farm_sourcing to fetch.
     */
    where?: farm_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_sourcings to fetch.
     */
    orderBy?: farm_sourcingOrderByWithRelationInput | farm_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_sourcings.
     */
    cursor?: farm_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_sourcings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_sourcings.
     */
    distinct?: Farm_sourcingScalarFieldEnum | Farm_sourcingScalarFieldEnum[]
  }

  /**
   * farm_sourcing findFirstOrThrow
   */
  export type farm_sourcingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which farm_sourcing to fetch.
     */
    where?: farm_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_sourcings to fetch.
     */
    orderBy?: farm_sourcingOrderByWithRelationInput | farm_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_sourcings.
     */
    cursor?: farm_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_sourcings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_sourcings.
     */
    distinct?: Farm_sourcingScalarFieldEnum | Farm_sourcingScalarFieldEnum[]
  }

  /**
   * farm_sourcing findMany
   */
  export type farm_sourcingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * Filter, which farm_sourcings to fetch.
     */
    where?: farm_sourcingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_sourcings to fetch.
     */
    orderBy?: farm_sourcingOrderByWithRelationInput | farm_sourcingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farm_sourcings.
     */
    cursor?: farm_sourcingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_sourcings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_sourcings.
     */
    skip?: number
    distinct?: Farm_sourcingScalarFieldEnum | Farm_sourcingScalarFieldEnum[]
  }

  /**
   * farm_sourcing create
   */
  export type farm_sourcingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * The data needed to create a farm_sourcing.
     */
    data: XOR<farm_sourcingCreateInput, farm_sourcingUncheckedCreateInput>
  }

  /**
   * farm_sourcing createMany
   */
  export type farm_sourcingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farm_sourcings.
     */
    data: farm_sourcingCreateManyInput | farm_sourcingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_sourcing createManyAndReturn
   */
  export type farm_sourcingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * The data used to create many farm_sourcings.
     */
    data: farm_sourcingCreateManyInput | farm_sourcingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_sourcing update
   */
  export type farm_sourcingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * The data needed to update a farm_sourcing.
     */
    data: XOR<farm_sourcingUpdateInput, farm_sourcingUncheckedUpdateInput>
    /**
     * Choose, which farm_sourcing to update.
     */
    where: farm_sourcingWhereUniqueInput
  }

  /**
   * farm_sourcing updateMany
   */
  export type farm_sourcingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farm_sourcings.
     */
    data: XOR<farm_sourcingUpdateManyMutationInput, farm_sourcingUncheckedUpdateManyInput>
    /**
     * Filter which farm_sourcings to update
     */
    where?: farm_sourcingWhereInput
    /**
     * Limit how many farm_sourcings to update.
     */
    limit?: number
  }

  /**
   * farm_sourcing updateManyAndReturn
   */
  export type farm_sourcingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * The data used to update farm_sourcings.
     */
    data: XOR<farm_sourcingUpdateManyMutationInput, farm_sourcingUncheckedUpdateManyInput>
    /**
     * Filter which farm_sourcings to update
     */
    where?: farm_sourcingWhereInput
    /**
     * Limit how many farm_sourcings to update.
     */
    limit?: number
  }

  /**
   * farm_sourcing upsert
   */
  export type farm_sourcingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * The filter to search for the farm_sourcing to update in case it exists.
     */
    where: farm_sourcingWhereUniqueInput
    /**
     * In case the farm_sourcing found by the `where` argument doesn't exist, create a new farm_sourcing with this data.
     */
    create: XOR<farm_sourcingCreateInput, farm_sourcingUncheckedCreateInput>
    /**
     * In case the farm_sourcing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farm_sourcingUpdateInput, farm_sourcingUncheckedUpdateInput>
  }

  /**
   * farm_sourcing delete
   */
  export type farm_sourcingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
    /**
     * Filter which farm_sourcing to delete.
     */
    where: farm_sourcingWhereUniqueInput
  }

  /**
   * farm_sourcing deleteMany
   */
  export type farm_sourcingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_sourcings to delete
     */
    where?: farm_sourcingWhereInput
    /**
     * Limit how many farm_sourcings to delete.
     */
    limit?: number
  }

  /**
   * farm_sourcing.cattle_sourcing
   */
  export type farm_sourcing$cattle_sourcingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattle_sourcing
     */
    select?: cattle_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattle_sourcing
     */
    omit?: cattle_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattle_sourcingInclude<ExtArgs> | null
    where?: cattle_sourcingWhereInput
    orderBy?: cattle_sourcingOrderByWithRelationInput | cattle_sourcingOrderByWithRelationInput[]
    cursor?: cattle_sourcingWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cattle_sourcingScalarFieldEnum | Cattle_sourcingScalarFieldEnum[]
  }

  /**
   * farm_sourcing without action
   */
  export type farm_sourcingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_sourcing
     */
    select?: farm_sourcingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_sourcing
     */
    omit?: farm_sourcingOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_sourcingInclude<ExtArgs> | null
  }


  /**
   * Model farm_veterinary
   */

  export type AggregateFarm_veterinary = {
    _count: Farm_veterinaryCountAggregateOutputType | null
    _min: Farm_veterinaryMinAggregateOutputType | null
    _max: Farm_veterinaryMaxAggregateOutputType | null
  }

  export type Farm_veterinaryMinAggregateOutputType = {
    id: string | null
    farm_id: string | null
    name: string | null
    license_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farm_veterinaryMaxAggregateOutputType = {
    id: string | null
    farm_id: string | null
    name: string | null
    license_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farm_veterinaryCountAggregateOutputType = {
    id: number
    farm_id: number
    name: number
    license_id: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Farm_veterinaryMinAggregateInputType = {
    id?: true
    farm_id?: true
    name?: true
    license_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farm_veterinaryMaxAggregateInputType = {
    id?: true
    farm_id?: true
    name?: true
    license_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farm_veterinaryCountAggregateInputType = {
    id?: true
    farm_id?: true
    name?: true
    license_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Farm_veterinaryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_veterinary to aggregate.
     */
    where?: farm_veterinaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_veterinaries to fetch.
     */
    orderBy?: farm_veterinaryOrderByWithRelationInput | farm_veterinaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farm_veterinaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_veterinaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_veterinaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farm_veterinaries
    **/
    _count?: true | Farm_veterinaryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farm_veterinaryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farm_veterinaryMaxAggregateInputType
  }

  export type GetFarm_veterinaryAggregateType<T extends Farm_veterinaryAggregateArgs> = {
        [P in keyof T & keyof AggregateFarm_veterinary]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarm_veterinary[P]>
      : GetScalarType<T[P], AggregateFarm_veterinary[P]>
  }




  export type farm_veterinaryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farm_veterinaryWhereInput
    orderBy?: farm_veterinaryOrderByWithAggregationInput | farm_veterinaryOrderByWithAggregationInput[]
    by: Farm_veterinaryScalarFieldEnum[] | Farm_veterinaryScalarFieldEnum
    having?: farm_veterinaryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farm_veterinaryCountAggregateInputType | true
    _min?: Farm_veterinaryMinAggregateInputType
    _max?: Farm_veterinaryMaxAggregateInputType
  }

  export type Farm_veterinaryGroupByOutputType = {
    id: string
    farm_id: string
    name: string
    license_id: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Farm_veterinaryCountAggregateOutputType | null
    _min: Farm_veterinaryMinAggregateOutputType | null
    _max: Farm_veterinaryMaxAggregateOutputType | null
  }

  type GetFarm_veterinaryGroupByPayload<T extends farm_veterinaryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farm_veterinaryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farm_veterinaryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farm_veterinaryGroupByOutputType[P]>
            : GetScalarType<T[P], Farm_veterinaryGroupByOutputType[P]>
        }
      >
    >


  export type farm_veterinarySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    name?: boolean
    license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_veterinary"]>

  export type farm_veterinarySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    name?: boolean
    license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_veterinary"]>

  export type farm_veterinarySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    name?: boolean
    license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farm_veterinary"]>

  export type farm_veterinarySelectScalar = {
    id?: boolean
    farm_id?: boolean
    name?: boolean
    license_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type farm_veterinaryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "farm_id" | "name" | "license_id" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["farm_veterinary"]>
  export type farm_veterinaryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type farm_veterinaryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type farm_veterinaryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }

  export type $farm_veterinaryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farm_veterinary"
    objects: {
      farms: Prisma.$farmsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      farm_id: string
      name: string
      license_id: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["farm_veterinary"]>
    composites: {}
  }

  type farm_veterinaryGetPayload<S extends boolean | null | undefined | farm_veterinaryDefaultArgs> = $Result.GetResult<Prisma.$farm_veterinaryPayload, S>

  type farm_veterinaryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farm_veterinaryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farm_veterinaryCountAggregateInputType | true
    }

  export interface farm_veterinaryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farm_veterinary'], meta: { name: 'farm_veterinary' } }
    /**
     * Find zero or one Farm_veterinary that matches the filter.
     * @param {farm_veterinaryFindUniqueArgs} args - Arguments to find a Farm_veterinary
     * @example
     * // Get one Farm_veterinary
     * const farm_veterinary = await prisma.farm_veterinary.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farm_veterinaryFindUniqueArgs>(args: SelectSubset<T, farm_veterinaryFindUniqueArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farm_veterinary that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farm_veterinaryFindUniqueOrThrowArgs} args - Arguments to find a Farm_veterinary
     * @example
     * // Get one Farm_veterinary
     * const farm_veterinary = await prisma.farm_veterinary.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farm_veterinaryFindUniqueOrThrowArgs>(args: SelectSubset<T, farm_veterinaryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_veterinary that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_veterinaryFindFirstArgs} args - Arguments to find a Farm_veterinary
     * @example
     * // Get one Farm_veterinary
     * const farm_veterinary = await prisma.farm_veterinary.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farm_veterinaryFindFirstArgs>(args?: SelectSubset<T, farm_veterinaryFindFirstArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farm_veterinary that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_veterinaryFindFirstOrThrowArgs} args - Arguments to find a Farm_veterinary
     * @example
     * // Get one Farm_veterinary
     * const farm_veterinary = await prisma.farm_veterinary.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farm_veterinaryFindFirstOrThrowArgs>(args?: SelectSubset<T, farm_veterinaryFindFirstOrThrowArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farm_veterinaries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_veterinaryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farm_veterinaries
     * const farm_veterinaries = await prisma.farm_veterinary.findMany()
     * 
     * // Get first 10 Farm_veterinaries
     * const farm_veterinaries = await prisma.farm_veterinary.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farm_veterinaryWithIdOnly = await prisma.farm_veterinary.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farm_veterinaryFindManyArgs>(args?: SelectSubset<T, farm_veterinaryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farm_veterinary.
     * @param {farm_veterinaryCreateArgs} args - Arguments to create a Farm_veterinary.
     * @example
     * // Create one Farm_veterinary
     * const Farm_veterinary = await prisma.farm_veterinary.create({
     *   data: {
     *     // ... data to create a Farm_veterinary
     *   }
     * })
     * 
     */
    create<T extends farm_veterinaryCreateArgs>(args: SelectSubset<T, farm_veterinaryCreateArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farm_veterinaries.
     * @param {farm_veterinaryCreateManyArgs} args - Arguments to create many Farm_veterinaries.
     * @example
     * // Create many Farm_veterinaries
     * const farm_veterinary = await prisma.farm_veterinary.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farm_veterinaryCreateManyArgs>(args?: SelectSubset<T, farm_veterinaryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farm_veterinaries and returns the data saved in the database.
     * @param {farm_veterinaryCreateManyAndReturnArgs} args - Arguments to create many Farm_veterinaries.
     * @example
     * // Create many Farm_veterinaries
     * const farm_veterinary = await prisma.farm_veterinary.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farm_veterinaries and only return the `id`
     * const farm_veterinaryWithIdOnly = await prisma.farm_veterinary.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farm_veterinaryCreateManyAndReturnArgs>(args?: SelectSubset<T, farm_veterinaryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farm_veterinary.
     * @param {farm_veterinaryDeleteArgs} args - Arguments to delete one Farm_veterinary.
     * @example
     * // Delete one Farm_veterinary
     * const Farm_veterinary = await prisma.farm_veterinary.delete({
     *   where: {
     *     // ... filter to delete one Farm_veterinary
     *   }
     * })
     * 
     */
    delete<T extends farm_veterinaryDeleteArgs>(args: SelectSubset<T, farm_veterinaryDeleteArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farm_veterinary.
     * @param {farm_veterinaryUpdateArgs} args - Arguments to update one Farm_veterinary.
     * @example
     * // Update one Farm_veterinary
     * const farm_veterinary = await prisma.farm_veterinary.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farm_veterinaryUpdateArgs>(args: SelectSubset<T, farm_veterinaryUpdateArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farm_veterinaries.
     * @param {farm_veterinaryDeleteManyArgs} args - Arguments to filter Farm_veterinaries to delete.
     * @example
     * // Delete a few Farm_veterinaries
     * const { count } = await prisma.farm_veterinary.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farm_veterinaryDeleteManyArgs>(args?: SelectSubset<T, farm_veterinaryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_veterinaries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_veterinaryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farm_veterinaries
     * const farm_veterinary = await prisma.farm_veterinary.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farm_veterinaryUpdateManyArgs>(args: SelectSubset<T, farm_veterinaryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farm_veterinaries and returns the data updated in the database.
     * @param {farm_veterinaryUpdateManyAndReturnArgs} args - Arguments to update many Farm_veterinaries.
     * @example
     * // Update many Farm_veterinaries
     * const farm_veterinary = await prisma.farm_veterinary.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farm_veterinaries and only return the `id`
     * const farm_veterinaryWithIdOnly = await prisma.farm_veterinary.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farm_veterinaryUpdateManyAndReturnArgs>(args: SelectSubset<T, farm_veterinaryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farm_veterinary.
     * @param {farm_veterinaryUpsertArgs} args - Arguments to update or create a Farm_veterinary.
     * @example
     * // Update or create a Farm_veterinary
     * const farm_veterinary = await prisma.farm_veterinary.upsert({
     *   create: {
     *     // ... data to create a Farm_veterinary
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farm_veterinary we want to update
     *   }
     * })
     */
    upsert<T extends farm_veterinaryUpsertArgs>(args: SelectSubset<T, farm_veterinaryUpsertArgs<ExtArgs>>): Prisma__farm_veterinaryClient<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farm_veterinaries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_veterinaryCountArgs} args - Arguments to filter Farm_veterinaries to count.
     * @example
     * // Count the number of Farm_veterinaries
     * const count = await prisma.farm_veterinary.count({
     *   where: {
     *     // ... the filter for the Farm_veterinaries we want to count
     *   }
     * })
    **/
    count<T extends farm_veterinaryCountArgs>(
      args?: Subset<T, farm_veterinaryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farm_veterinaryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farm_veterinary.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farm_veterinaryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farm_veterinaryAggregateArgs>(args: Subset<T, Farm_veterinaryAggregateArgs>): Prisma.PrismaPromise<GetFarm_veterinaryAggregateType<T>>

    /**
     * Group by Farm_veterinary.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farm_veterinaryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farm_veterinaryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farm_veterinaryGroupByArgs['orderBy'] }
        : { orderBy?: farm_veterinaryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farm_veterinaryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarm_veterinaryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farm_veterinary model
   */
  readonly fields: farm_veterinaryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farm_veterinary.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farm_veterinaryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farms<T extends farmsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmsDefaultArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farm_veterinary model
   */
  interface farm_veterinaryFieldRefs {
    readonly id: FieldRef<"farm_veterinary", 'String'>
    readonly farm_id: FieldRef<"farm_veterinary", 'String'>
    readonly name: FieldRef<"farm_veterinary", 'String'>
    readonly license_id: FieldRef<"farm_veterinary", 'String'>
    readonly created_at: FieldRef<"farm_veterinary", 'DateTime'>
    readonly created_by_id: FieldRef<"farm_veterinary", 'String'>
    readonly created_by: FieldRef<"farm_veterinary", 'String'>
    readonly updated_at: FieldRef<"farm_veterinary", 'DateTime'>
    readonly updated_by_id: FieldRef<"farm_veterinary", 'String'>
    readonly updated_by: FieldRef<"farm_veterinary", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farm_veterinary findUnique
   */
  export type farm_veterinaryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * Filter, which farm_veterinary to fetch.
     */
    where: farm_veterinaryWhereUniqueInput
  }

  /**
   * farm_veterinary findUniqueOrThrow
   */
  export type farm_veterinaryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * Filter, which farm_veterinary to fetch.
     */
    where: farm_veterinaryWhereUniqueInput
  }

  /**
   * farm_veterinary findFirst
   */
  export type farm_veterinaryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * Filter, which farm_veterinary to fetch.
     */
    where?: farm_veterinaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_veterinaries to fetch.
     */
    orderBy?: farm_veterinaryOrderByWithRelationInput | farm_veterinaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_veterinaries.
     */
    cursor?: farm_veterinaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_veterinaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_veterinaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_veterinaries.
     */
    distinct?: Farm_veterinaryScalarFieldEnum | Farm_veterinaryScalarFieldEnum[]
  }

  /**
   * farm_veterinary findFirstOrThrow
   */
  export type farm_veterinaryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * Filter, which farm_veterinary to fetch.
     */
    where?: farm_veterinaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_veterinaries to fetch.
     */
    orderBy?: farm_veterinaryOrderByWithRelationInput | farm_veterinaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farm_veterinaries.
     */
    cursor?: farm_veterinaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_veterinaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_veterinaries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farm_veterinaries.
     */
    distinct?: Farm_veterinaryScalarFieldEnum | Farm_veterinaryScalarFieldEnum[]
  }

  /**
   * farm_veterinary findMany
   */
  export type farm_veterinaryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * Filter, which farm_veterinaries to fetch.
     */
    where?: farm_veterinaryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farm_veterinaries to fetch.
     */
    orderBy?: farm_veterinaryOrderByWithRelationInput | farm_veterinaryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farm_veterinaries.
     */
    cursor?: farm_veterinaryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farm_veterinaries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farm_veterinaries.
     */
    skip?: number
    distinct?: Farm_veterinaryScalarFieldEnum | Farm_veterinaryScalarFieldEnum[]
  }

  /**
   * farm_veterinary create
   */
  export type farm_veterinaryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * The data needed to create a farm_veterinary.
     */
    data: XOR<farm_veterinaryCreateInput, farm_veterinaryUncheckedCreateInput>
  }

  /**
   * farm_veterinary createMany
   */
  export type farm_veterinaryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farm_veterinaries.
     */
    data: farm_veterinaryCreateManyInput | farm_veterinaryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farm_veterinary createManyAndReturn
   */
  export type farm_veterinaryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * The data used to create many farm_veterinaries.
     */
    data: farm_veterinaryCreateManyInput | farm_veterinaryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * farm_veterinary update
   */
  export type farm_veterinaryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * The data needed to update a farm_veterinary.
     */
    data: XOR<farm_veterinaryUpdateInput, farm_veterinaryUncheckedUpdateInput>
    /**
     * Choose, which farm_veterinary to update.
     */
    where: farm_veterinaryWhereUniqueInput
  }

  /**
   * farm_veterinary updateMany
   */
  export type farm_veterinaryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farm_veterinaries.
     */
    data: XOR<farm_veterinaryUpdateManyMutationInput, farm_veterinaryUncheckedUpdateManyInput>
    /**
     * Filter which farm_veterinaries to update
     */
    where?: farm_veterinaryWhereInput
    /**
     * Limit how many farm_veterinaries to update.
     */
    limit?: number
  }

  /**
   * farm_veterinary updateManyAndReturn
   */
  export type farm_veterinaryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * The data used to update farm_veterinaries.
     */
    data: XOR<farm_veterinaryUpdateManyMutationInput, farm_veterinaryUncheckedUpdateManyInput>
    /**
     * Filter which farm_veterinaries to update
     */
    where?: farm_veterinaryWhereInput
    /**
     * Limit how many farm_veterinaries to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * farm_veterinary upsert
   */
  export type farm_veterinaryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * The filter to search for the farm_veterinary to update in case it exists.
     */
    where: farm_veterinaryWhereUniqueInput
    /**
     * In case the farm_veterinary found by the `where` argument doesn't exist, create a new farm_veterinary with this data.
     */
    create: XOR<farm_veterinaryCreateInput, farm_veterinaryUncheckedCreateInput>
    /**
     * In case the farm_veterinary was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farm_veterinaryUpdateInput, farm_veterinaryUncheckedUpdateInput>
  }

  /**
   * farm_veterinary delete
   */
  export type farm_veterinaryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    /**
     * Filter which farm_veterinary to delete.
     */
    where: farm_veterinaryWhereUniqueInput
  }

  /**
   * farm_veterinary deleteMany
   */
  export type farm_veterinaryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farm_veterinaries to delete
     */
    where?: farm_veterinaryWhereInput
    /**
     * Limit how many farm_veterinaries to delete.
     */
    limit?: number
  }

  /**
   * farm_veterinary without action
   */
  export type farm_veterinaryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
  }


  /**
   * Model farmer_accounts
   */

  export type AggregateFarmer_accounts = {
    _count: Farmer_accountsCountAggregateOutputType | null
    _avg: Farmer_accountsAvgAggregateOutputType | null
    _sum: Farmer_accountsSumAggregateOutputType | null
    _min: Farmer_accountsMinAggregateOutputType | null
    _max: Farmer_accountsMaxAggregateOutputType | null
  }

  export type Farmer_accountsAvgAggregateOutputType = {
    role_id: number | null
  }

  export type Farmer_accountsSumAggregateOutputType = {
    role_id: number | null
  }

  export type Farmer_accountsMinAggregateOutputType = {
    id: string | null
    farmer_id: string | null
    username: string | null
    password: string | null
    role_id: number | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farmer_accountsMaxAggregateOutputType = {
    id: string | null
    farmer_id: string | null
    username: string | null
    password: string | null
    role_id: number | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farmer_accountsCountAggregateOutputType = {
    id: number
    farmer_id: number
    username: number
    password: number
    role_id: number
    permissions: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Farmer_accountsAvgAggregateInputType = {
    role_id?: true
  }

  export type Farmer_accountsSumAggregateInputType = {
    role_id?: true
  }

  export type Farmer_accountsMinAggregateInputType = {
    id?: true
    farmer_id?: true
    username?: true
    password?: true
    role_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farmer_accountsMaxAggregateInputType = {
    id?: true
    farmer_id?: true
    username?: true
    password?: true
    role_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farmer_accountsCountAggregateInputType = {
    id?: true
    farmer_id?: true
    username?: true
    password?: true
    role_id?: true
    permissions?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Farmer_accountsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmer_accounts to aggregate.
     */
    where?: farmer_accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_accounts to fetch.
     */
    orderBy?: farmer_accountsOrderByWithRelationInput | farmer_accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farmer_accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farmer_accounts
    **/
    _count?: true | Farmer_accountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Farmer_accountsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Farmer_accountsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farmer_accountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farmer_accountsMaxAggregateInputType
  }

  export type GetFarmer_accountsAggregateType<T extends Farmer_accountsAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmer_accounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmer_accounts[P]>
      : GetScalarType<T[P], AggregateFarmer_accounts[P]>
  }




  export type farmer_accountsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmer_accountsWhereInput
    orderBy?: farmer_accountsOrderByWithAggregationInput | farmer_accountsOrderByWithAggregationInput[]
    by: Farmer_accountsScalarFieldEnum[] | Farmer_accountsScalarFieldEnum
    having?: farmer_accountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farmer_accountsCountAggregateInputType | true
    _avg?: Farmer_accountsAvgAggregateInputType
    _sum?: Farmer_accountsSumAggregateInputType
    _min?: Farmer_accountsMinAggregateInputType
    _max?: Farmer_accountsMaxAggregateInputType
  }

  export type Farmer_accountsGroupByOutputType = {
    id: string
    farmer_id: string
    username: string
    password: string
    role_id: number | null
    permissions: string[]
    status: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Farmer_accountsCountAggregateOutputType | null
    _avg: Farmer_accountsAvgAggregateOutputType | null
    _sum: Farmer_accountsSumAggregateOutputType | null
    _min: Farmer_accountsMinAggregateOutputType | null
    _max: Farmer_accountsMaxAggregateOutputType | null
  }

  type GetFarmer_accountsGroupByPayload<T extends farmer_accountsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farmer_accountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farmer_accountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farmer_accountsGroupByOutputType[P]>
            : GetScalarType<T[P], Farmer_accountsGroupByOutputType[P]>
        }
      >
    >


  export type farmer_accountsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farmer_id?: boolean
    username?: boolean
    password?: boolean
    role_id?: boolean
    permissions?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmer_accounts"]>

  export type farmer_accountsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farmer_id?: boolean
    username?: boolean
    password?: boolean
    role_id?: boolean
    permissions?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmer_accounts"]>

  export type farmer_accountsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farmer_id?: boolean
    username?: boolean
    password?: boolean
    role_id?: boolean
    permissions?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmer_accounts"]>

  export type farmer_accountsSelectScalar = {
    id?: boolean
    farmer_id?: boolean
    username?: boolean
    password?: boolean
    role_id?: boolean
    permissions?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type farmer_accountsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "farmer_id" | "username" | "password" | "role_id" | "permissions" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["farmer_accounts"]>
  export type farmer_accountsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }
  export type farmer_accountsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }
  export type farmer_accountsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }

  export type $farmer_accountsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farmer_accounts"
    objects: {
      farmers: Prisma.$farmersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      farmer_id: string
      username: string
      password: string
      role_id: number | null
      permissions: string[]
      status: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["farmer_accounts"]>
    composites: {}
  }

  type farmer_accountsGetPayload<S extends boolean | null | undefined | farmer_accountsDefaultArgs> = $Result.GetResult<Prisma.$farmer_accountsPayload, S>

  type farmer_accountsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farmer_accountsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farmer_accountsCountAggregateInputType | true
    }

  export interface farmer_accountsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farmer_accounts'], meta: { name: 'farmer_accounts' } }
    /**
     * Find zero or one Farmer_accounts that matches the filter.
     * @param {farmer_accountsFindUniqueArgs} args - Arguments to find a Farmer_accounts
     * @example
     * // Get one Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farmer_accountsFindUniqueArgs>(args: SelectSubset<T, farmer_accountsFindUniqueArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farmer_accounts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farmer_accountsFindUniqueOrThrowArgs} args - Arguments to find a Farmer_accounts
     * @example
     * // Get one Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farmer_accountsFindUniqueOrThrowArgs>(args: SelectSubset<T, farmer_accountsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmer_accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_accountsFindFirstArgs} args - Arguments to find a Farmer_accounts
     * @example
     * // Get one Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farmer_accountsFindFirstArgs>(args?: SelectSubset<T, farmer_accountsFindFirstArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmer_accounts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_accountsFindFirstOrThrowArgs} args - Arguments to find a Farmer_accounts
     * @example
     * // Get one Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farmer_accountsFindFirstOrThrowArgs>(args?: SelectSubset<T, farmer_accountsFindFirstOrThrowArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farmer_accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_accountsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.findMany()
     * 
     * // Get first 10 Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmer_accountsWithIdOnly = await prisma.farmer_accounts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farmer_accountsFindManyArgs>(args?: SelectSubset<T, farmer_accountsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farmer_accounts.
     * @param {farmer_accountsCreateArgs} args - Arguments to create a Farmer_accounts.
     * @example
     * // Create one Farmer_accounts
     * const Farmer_accounts = await prisma.farmer_accounts.create({
     *   data: {
     *     // ... data to create a Farmer_accounts
     *   }
     * })
     * 
     */
    create<T extends farmer_accountsCreateArgs>(args: SelectSubset<T, farmer_accountsCreateArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farmer_accounts.
     * @param {farmer_accountsCreateManyArgs} args - Arguments to create many Farmer_accounts.
     * @example
     * // Create many Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farmer_accountsCreateManyArgs>(args?: SelectSubset<T, farmer_accountsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farmer_accounts and returns the data saved in the database.
     * @param {farmer_accountsCreateManyAndReturnArgs} args - Arguments to create many Farmer_accounts.
     * @example
     * // Create many Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farmer_accounts and only return the `id`
     * const farmer_accountsWithIdOnly = await prisma.farmer_accounts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farmer_accountsCreateManyAndReturnArgs>(args?: SelectSubset<T, farmer_accountsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farmer_accounts.
     * @param {farmer_accountsDeleteArgs} args - Arguments to delete one Farmer_accounts.
     * @example
     * // Delete one Farmer_accounts
     * const Farmer_accounts = await prisma.farmer_accounts.delete({
     *   where: {
     *     // ... filter to delete one Farmer_accounts
     *   }
     * })
     * 
     */
    delete<T extends farmer_accountsDeleteArgs>(args: SelectSubset<T, farmer_accountsDeleteArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farmer_accounts.
     * @param {farmer_accountsUpdateArgs} args - Arguments to update one Farmer_accounts.
     * @example
     * // Update one Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farmer_accountsUpdateArgs>(args: SelectSubset<T, farmer_accountsUpdateArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farmer_accounts.
     * @param {farmer_accountsDeleteManyArgs} args - Arguments to filter Farmer_accounts to delete.
     * @example
     * // Delete a few Farmer_accounts
     * const { count } = await prisma.farmer_accounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farmer_accountsDeleteManyArgs>(args?: SelectSubset<T, farmer_accountsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmer_accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_accountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farmer_accountsUpdateManyArgs>(args: SelectSubset<T, farmer_accountsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmer_accounts and returns the data updated in the database.
     * @param {farmer_accountsUpdateManyAndReturnArgs} args - Arguments to update many Farmer_accounts.
     * @example
     * // Update many Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farmer_accounts and only return the `id`
     * const farmer_accountsWithIdOnly = await prisma.farmer_accounts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farmer_accountsUpdateManyAndReturnArgs>(args: SelectSubset<T, farmer_accountsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farmer_accounts.
     * @param {farmer_accountsUpsertArgs} args - Arguments to update or create a Farmer_accounts.
     * @example
     * // Update or create a Farmer_accounts
     * const farmer_accounts = await prisma.farmer_accounts.upsert({
     *   create: {
     *     // ... data to create a Farmer_accounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farmer_accounts we want to update
     *   }
     * })
     */
    upsert<T extends farmer_accountsUpsertArgs>(args: SelectSubset<T, farmer_accountsUpsertArgs<ExtArgs>>): Prisma__farmer_accountsClient<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farmer_accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_accountsCountArgs} args - Arguments to filter Farmer_accounts to count.
     * @example
     * // Count the number of Farmer_accounts
     * const count = await prisma.farmer_accounts.count({
     *   where: {
     *     // ... the filter for the Farmer_accounts we want to count
     *   }
     * })
    **/
    count<T extends farmer_accountsCountArgs>(
      args?: Subset<T, farmer_accountsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farmer_accountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farmer_accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farmer_accountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farmer_accountsAggregateArgs>(args: Subset<T, Farmer_accountsAggregateArgs>): Prisma.PrismaPromise<GetFarmer_accountsAggregateType<T>>

    /**
     * Group by Farmer_accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_accountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farmer_accountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farmer_accountsGroupByArgs['orderBy'] }
        : { orderBy?: farmer_accountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farmer_accountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmer_accountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farmer_accounts model
   */
  readonly fields: farmer_accountsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farmer_accounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farmer_accountsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmers<T extends farmersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmersDefaultArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farmer_accounts model
   */
  interface farmer_accountsFieldRefs {
    readonly id: FieldRef<"farmer_accounts", 'String'>
    readonly farmer_id: FieldRef<"farmer_accounts", 'String'>
    readonly username: FieldRef<"farmer_accounts", 'String'>
    readonly password: FieldRef<"farmer_accounts", 'String'>
    readonly role_id: FieldRef<"farmer_accounts", 'Int'>
    readonly permissions: FieldRef<"farmer_accounts", 'String[]'>
    readonly status: FieldRef<"farmer_accounts", 'String'>
    readonly created_at: FieldRef<"farmer_accounts", 'DateTime'>
    readonly created_by_id: FieldRef<"farmer_accounts", 'String'>
    readonly created_by: FieldRef<"farmer_accounts", 'String'>
    readonly updated_at: FieldRef<"farmer_accounts", 'DateTime'>
    readonly updated_by_id: FieldRef<"farmer_accounts", 'String'>
    readonly updated_by: FieldRef<"farmer_accounts", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farmer_accounts findUnique
   */
  export type farmer_accountsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_accounts to fetch.
     */
    where: farmer_accountsWhereUniqueInput
  }

  /**
   * farmer_accounts findUniqueOrThrow
   */
  export type farmer_accountsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_accounts to fetch.
     */
    where: farmer_accountsWhereUniqueInput
  }

  /**
   * farmer_accounts findFirst
   */
  export type farmer_accountsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_accounts to fetch.
     */
    where?: farmer_accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_accounts to fetch.
     */
    orderBy?: farmer_accountsOrderByWithRelationInput | farmer_accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmer_accounts.
     */
    cursor?: farmer_accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmer_accounts.
     */
    distinct?: Farmer_accountsScalarFieldEnum | Farmer_accountsScalarFieldEnum[]
  }

  /**
   * farmer_accounts findFirstOrThrow
   */
  export type farmer_accountsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_accounts to fetch.
     */
    where?: farmer_accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_accounts to fetch.
     */
    orderBy?: farmer_accountsOrderByWithRelationInput | farmer_accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmer_accounts.
     */
    cursor?: farmer_accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmer_accounts.
     */
    distinct?: Farmer_accountsScalarFieldEnum | Farmer_accountsScalarFieldEnum[]
  }

  /**
   * farmer_accounts findMany
   */
  export type farmer_accountsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_accounts to fetch.
     */
    where?: farmer_accountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_accounts to fetch.
     */
    orderBy?: farmer_accountsOrderByWithRelationInput | farmer_accountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farmer_accounts.
     */
    cursor?: farmer_accountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_accounts.
     */
    skip?: number
    distinct?: Farmer_accountsScalarFieldEnum | Farmer_accountsScalarFieldEnum[]
  }

  /**
   * farmer_accounts create
   */
  export type farmer_accountsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * The data needed to create a farmer_accounts.
     */
    data: XOR<farmer_accountsCreateInput, farmer_accountsUncheckedCreateInput>
  }

  /**
   * farmer_accounts createMany
   */
  export type farmer_accountsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farmer_accounts.
     */
    data: farmer_accountsCreateManyInput | farmer_accountsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farmer_accounts createManyAndReturn
   */
  export type farmer_accountsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * The data used to create many farmer_accounts.
     */
    data: farmer_accountsCreateManyInput | farmer_accountsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * farmer_accounts update
   */
  export type farmer_accountsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * The data needed to update a farmer_accounts.
     */
    data: XOR<farmer_accountsUpdateInput, farmer_accountsUncheckedUpdateInput>
    /**
     * Choose, which farmer_accounts to update.
     */
    where: farmer_accountsWhereUniqueInput
  }

  /**
   * farmer_accounts updateMany
   */
  export type farmer_accountsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farmer_accounts.
     */
    data: XOR<farmer_accountsUpdateManyMutationInput, farmer_accountsUncheckedUpdateManyInput>
    /**
     * Filter which farmer_accounts to update
     */
    where?: farmer_accountsWhereInput
    /**
     * Limit how many farmer_accounts to update.
     */
    limit?: number
  }

  /**
   * farmer_accounts updateManyAndReturn
   */
  export type farmer_accountsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * The data used to update farmer_accounts.
     */
    data: XOR<farmer_accountsUpdateManyMutationInput, farmer_accountsUncheckedUpdateManyInput>
    /**
     * Filter which farmer_accounts to update
     */
    where?: farmer_accountsWhereInput
    /**
     * Limit how many farmer_accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * farmer_accounts upsert
   */
  export type farmer_accountsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * The filter to search for the farmer_accounts to update in case it exists.
     */
    where: farmer_accountsWhereUniqueInput
    /**
     * In case the farmer_accounts found by the `where` argument doesn't exist, create a new farmer_accounts with this data.
     */
    create: XOR<farmer_accountsCreateInput, farmer_accountsUncheckedCreateInput>
    /**
     * In case the farmer_accounts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farmer_accountsUpdateInput, farmer_accountsUncheckedUpdateInput>
  }

  /**
   * farmer_accounts delete
   */
  export type farmer_accountsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    /**
     * Filter which farmer_accounts to delete.
     */
    where: farmer_accountsWhereUniqueInput
  }

  /**
   * farmer_accounts deleteMany
   */
  export type farmer_accountsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmer_accounts to delete
     */
    where?: farmer_accountsWhereInput
    /**
     * Limit how many farmer_accounts to delete.
     */
    limit?: number
  }

  /**
   * farmer_accounts without action
   */
  export type farmer_accountsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
  }


  /**
   * Model farmer_attachments
   */

  export type AggregateFarmer_attachments = {
    _count: Farmer_attachmentsCountAggregateOutputType | null
    _min: Farmer_attachmentsMinAggregateOutputType | null
    _max: Farmer_attachmentsMaxAggregateOutputType | null
  }

  export type Farmer_attachmentsMinAggregateOutputType = {
    id: string | null
    farmer_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    encrypted_key: string | null
  }

  export type Farmer_attachmentsMaxAggregateOutputType = {
    id: string | null
    farmer_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    encrypted_key: string | null
  }

  export type Farmer_attachmentsCountAggregateOutputType = {
    id: number
    farmer_id: number
    file_name: number
    file_path: number
    is_public: number
    content_type: number
    description: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    encrypted_key: number
    _all: number
  }


  export type Farmer_attachmentsMinAggregateInputType = {
    id?: true
    farmer_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    encrypted_key?: true
  }

  export type Farmer_attachmentsMaxAggregateInputType = {
    id?: true
    farmer_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    encrypted_key?: true
  }

  export type Farmer_attachmentsCountAggregateInputType = {
    id?: true
    farmer_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    encrypted_key?: true
    _all?: true
  }

  export type Farmer_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmer_attachments to aggregate.
     */
    where?: farmer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_attachments to fetch.
     */
    orderBy?: farmer_attachmentsOrderByWithRelationInput | farmer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farmer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farmer_attachments
    **/
    _count?: true | Farmer_attachmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farmer_attachmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farmer_attachmentsMaxAggregateInputType
  }

  export type GetFarmer_attachmentsAggregateType<T extends Farmer_attachmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmer_attachments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmer_attachments[P]>
      : GetScalarType<T[P], AggregateFarmer_attachments[P]>
  }




  export type farmer_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmer_attachmentsWhereInput
    orderBy?: farmer_attachmentsOrderByWithAggregationInput | farmer_attachmentsOrderByWithAggregationInput[]
    by: Farmer_attachmentsScalarFieldEnum[] | Farmer_attachmentsScalarFieldEnum
    having?: farmer_attachmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farmer_attachmentsCountAggregateInputType | true
    _min?: Farmer_attachmentsMinAggregateInputType
    _max?: Farmer_attachmentsMaxAggregateInputType
  }

  export type Farmer_attachmentsGroupByOutputType = {
    id: string
    farmer_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    encrypted_key: string | null
    _count: Farmer_attachmentsCountAggregateOutputType | null
    _min: Farmer_attachmentsMinAggregateOutputType | null
    _max: Farmer_attachmentsMaxAggregateOutputType | null
  }

  type GetFarmer_attachmentsGroupByPayload<T extends farmer_attachmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farmer_attachmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farmer_attachmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farmer_attachmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Farmer_attachmentsGroupByOutputType[P]>
        }
      >
    >


  export type farmer_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farmer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmer_attachments"]>

  export type farmer_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farmer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmer_attachments"]>

  export type farmer_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farmer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmer_attachments"]>

  export type farmer_attachmentsSelectScalar = {
    id?: boolean
    farmer_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    encrypted_key?: boolean
  }

  export type farmer_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "farmer_id" | "file_name" | "file_path" | "is_public" | "content_type" | "description" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by" | "encrypted_key", ExtArgs["result"]["farmer_attachments"]>
  export type farmer_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }
  export type farmer_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }
  export type farmer_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmers?: boolean | farmersDefaultArgs<ExtArgs>
  }

  export type $farmer_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farmer_attachments"
    objects: {
      farmers: Prisma.$farmersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      farmer_id: string
      file_name: string
      file_path: string
      is_public: boolean
      content_type: string
      description: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
      encrypted_key: string | null
    }, ExtArgs["result"]["farmer_attachments"]>
    composites: {}
  }

  type farmer_attachmentsGetPayload<S extends boolean | null | undefined | farmer_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$farmer_attachmentsPayload, S>

  type farmer_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farmer_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farmer_attachmentsCountAggregateInputType | true
    }

  export interface farmer_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farmer_attachments'], meta: { name: 'farmer_attachments' } }
    /**
     * Find zero or one Farmer_attachments that matches the filter.
     * @param {farmer_attachmentsFindUniqueArgs} args - Arguments to find a Farmer_attachments
     * @example
     * // Get one Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farmer_attachmentsFindUniqueArgs>(args: SelectSubset<T, farmer_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farmer_attachments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farmer_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Farmer_attachments
     * @example
     * // Get one Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farmer_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, farmer_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmer_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_attachmentsFindFirstArgs} args - Arguments to find a Farmer_attachments
     * @example
     * // Get one Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farmer_attachmentsFindFirstArgs>(args?: SelectSubset<T, farmer_attachmentsFindFirstArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmer_attachments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Farmer_attachments
     * @example
     * // Get one Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farmer_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, farmer_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farmer_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.findMany()
     * 
     * // Get first 10 Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmer_attachmentsWithIdOnly = await prisma.farmer_attachments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farmer_attachmentsFindManyArgs>(args?: SelectSubset<T, farmer_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farmer_attachments.
     * @param {farmer_attachmentsCreateArgs} args - Arguments to create a Farmer_attachments.
     * @example
     * // Create one Farmer_attachments
     * const Farmer_attachments = await prisma.farmer_attachments.create({
     *   data: {
     *     // ... data to create a Farmer_attachments
     *   }
     * })
     * 
     */
    create<T extends farmer_attachmentsCreateArgs>(args: SelectSubset<T, farmer_attachmentsCreateArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farmer_attachments.
     * @param {farmer_attachmentsCreateManyArgs} args - Arguments to create many Farmer_attachments.
     * @example
     * // Create many Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farmer_attachmentsCreateManyArgs>(args?: SelectSubset<T, farmer_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farmer_attachments and returns the data saved in the database.
     * @param {farmer_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Farmer_attachments.
     * @example
     * // Create many Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farmer_attachments and only return the `id`
     * const farmer_attachmentsWithIdOnly = await prisma.farmer_attachments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farmer_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, farmer_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farmer_attachments.
     * @param {farmer_attachmentsDeleteArgs} args - Arguments to delete one Farmer_attachments.
     * @example
     * // Delete one Farmer_attachments
     * const Farmer_attachments = await prisma.farmer_attachments.delete({
     *   where: {
     *     // ... filter to delete one Farmer_attachments
     *   }
     * })
     * 
     */
    delete<T extends farmer_attachmentsDeleteArgs>(args: SelectSubset<T, farmer_attachmentsDeleteArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farmer_attachments.
     * @param {farmer_attachmentsUpdateArgs} args - Arguments to update one Farmer_attachments.
     * @example
     * // Update one Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farmer_attachmentsUpdateArgs>(args: SelectSubset<T, farmer_attachmentsUpdateArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farmer_attachments.
     * @param {farmer_attachmentsDeleteManyArgs} args - Arguments to filter Farmer_attachments to delete.
     * @example
     * // Delete a few Farmer_attachments
     * const { count } = await prisma.farmer_attachments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farmer_attachmentsDeleteManyArgs>(args?: SelectSubset<T, farmer_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farmer_attachmentsUpdateManyArgs>(args: SelectSubset<T, farmer_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmer_attachments and returns the data updated in the database.
     * @param {farmer_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Farmer_attachments.
     * @example
     * // Update many Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farmer_attachments and only return the `id`
     * const farmer_attachmentsWithIdOnly = await prisma.farmer_attachments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farmer_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, farmer_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farmer_attachments.
     * @param {farmer_attachmentsUpsertArgs} args - Arguments to update or create a Farmer_attachments.
     * @example
     * // Update or create a Farmer_attachments
     * const farmer_attachments = await prisma.farmer_attachments.upsert({
     *   create: {
     *     // ... data to create a Farmer_attachments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farmer_attachments we want to update
     *   }
     * })
     */
    upsert<T extends farmer_attachmentsUpsertArgs>(args: SelectSubset<T, farmer_attachmentsUpsertArgs<ExtArgs>>): Prisma__farmer_attachmentsClient<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farmer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_attachmentsCountArgs} args - Arguments to filter Farmer_attachments to count.
     * @example
     * // Count the number of Farmer_attachments
     * const count = await prisma.farmer_attachments.count({
     *   where: {
     *     // ... the filter for the Farmer_attachments we want to count
     *   }
     * })
    **/
    count<T extends farmer_attachmentsCountArgs>(
      args?: Subset<T, farmer_attachmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farmer_attachmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farmer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farmer_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farmer_attachmentsAggregateArgs>(args: Subset<T, Farmer_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetFarmer_attachmentsAggregateType<T>>

    /**
     * Group by Farmer_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_attachmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farmer_attachmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farmer_attachmentsGroupByArgs['orderBy'] }
        : { orderBy?: farmer_attachmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farmer_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmer_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farmer_attachments model
   */
  readonly fields: farmer_attachmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farmer_attachments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farmer_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmers<T extends farmersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmersDefaultArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farmer_attachments model
   */
  interface farmer_attachmentsFieldRefs {
    readonly id: FieldRef<"farmer_attachments", 'String'>
    readonly farmer_id: FieldRef<"farmer_attachments", 'String'>
    readonly file_name: FieldRef<"farmer_attachments", 'String'>
    readonly file_path: FieldRef<"farmer_attachments", 'String'>
    readonly is_public: FieldRef<"farmer_attachments", 'Boolean'>
    readonly content_type: FieldRef<"farmer_attachments", 'String'>
    readonly description: FieldRef<"farmer_attachments", 'String'>
    readonly created_at: FieldRef<"farmer_attachments", 'DateTime'>
    readonly created_by_id: FieldRef<"farmer_attachments", 'String'>
    readonly created_by: FieldRef<"farmer_attachments", 'String'>
    readonly updated_at: FieldRef<"farmer_attachments", 'DateTime'>
    readonly updated_by_id: FieldRef<"farmer_attachments", 'String'>
    readonly updated_by: FieldRef<"farmer_attachments", 'String'>
    readonly encrypted_key: FieldRef<"farmer_attachments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farmer_attachments findUnique
   */
  export type farmer_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_attachments to fetch.
     */
    where: farmer_attachmentsWhereUniqueInput
  }

  /**
   * farmer_attachments findUniqueOrThrow
   */
  export type farmer_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_attachments to fetch.
     */
    where: farmer_attachmentsWhereUniqueInput
  }

  /**
   * farmer_attachments findFirst
   */
  export type farmer_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_attachments to fetch.
     */
    where?: farmer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_attachments to fetch.
     */
    orderBy?: farmer_attachmentsOrderByWithRelationInput | farmer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmer_attachments.
     */
    cursor?: farmer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmer_attachments.
     */
    distinct?: Farmer_attachmentsScalarFieldEnum | Farmer_attachmentsScalarFieldEnum[]
  }

  /**
   * farmer_attachments findFirstOrThrow
   */
  export type farmer_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_attachments to fetch.
     */
    where?: farmer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_attachments to fetch.
     */
    orderBy?: farmer_attachmentsOrderByWithRelationInput | farmer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmer_attachments.
     */
    cursor?: farmer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmer_attachments.
     */
    distinct?: Farmer_attachmentsScalarFieldEnum | Farmer_attachmentsScalarFieldEnum[]
  }

  /**
   * farmer_attachments findMany
   */
  export type farmer_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which farmer_attachments to fetch.
     */
    where?: farmer_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_attachments to fetch.
     */
    orderBy?: farmer_attachmentsOrderByWithRelationInput | farmer_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farmer_attachments.
     */
    cursor?: farmer_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_attachments.
     */
    skip?: number
    distinct?: Farmer_attachmentsScalarFieldEnum | Farmer_attachmentsScalarFieldEnum[]
  }

  /**
   * farmer_attachments create
   */
  export type farmer_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a farmer_attachments.
     */
    data: XOR<farmer_attachmentsCreateInput, farmer_attachmentsUncheckedCreateInput>
  }

  /**
   * farmer_attachments createMany
   */
  export type farmer_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farmer_attachments.
     */
    data: farmer_attachmentsCreateManyInput | farmer_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farmer_attachments createManyAndReturn
   */
  export type farmer_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to create many farmer_attachments.
     */
    data: farmer_attachmentsCreateManyInput | farmer_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * farmer_attachments update
   */
  export type farmer_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a farmer_attachments.
     */
    data: XOR<farmer_attachmentsUpdateInput, farmer_attachmentsUncheckedUpdateInput>
    /**
     * Choose, which farmer_attachments to update.
     */
    where: farmer_attachmentsWhereUniqueInput
  }

  /**
   * farmer_attachments updateMany
   */
  export type farmer_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farmer_attachments.
     */
    data: XOR<farmer_attachmentsUpdateManyMutationInput, farmer_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which farmer_attachments to update
     */
    where?: farmer_attachmentsWhereInput
    /**
     * Limit how many farmer_attachments to update.
     */
    limit?: number
  }

  /**
   * farmer_attachments updateManyAndReturn
   */
  export type farmer_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to update farmer_attachments.
     */
    data: XOR<farmer_attachmentsUpdateManyMutationInput, farmer_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which farmer_attachments to update
     */
    where?: farmer_attachmentsWhereInput
    /**
     * Limit how many farmer_attachments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * farmer_attachments upsert
   */
  export type farmer_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the farmer_attachments to update in case it exists.
     */
    where: farmer_attachmentsWhereUniqueInput
    /**
     * In case the farmer_attachments found by the `where` argument doesn't exist, create a new farmer_attachments with this data.
     */
    create: XOR<farmer_attachmentsCreateInput, farmer_attachmentsUncheckedCreateInput>
    /**
     * In case the farmer_attachments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farmer_attachmentsUpdateInput, farmer_attachmentsUncheckedUpdateInput>
  }

  /**
   * farmer_attachments delete
   */
  export type farmer_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    /**
     * Filter which farmer_attachments to delete.
     */
    where: farmer_attachmentsWhereUniqueInput
  }

  /**
   * farmer_attachments deleteMany
   */
  export type farmer_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmer_attachments to delete
     */
    where?: farmer_attachmentsWhereInput
    /**
     * Limit how many farmer_attachments to delete.
     */
    limit?: number
  }

  /**
   * farmer_attachments without action
   */
  export type farmer_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
  }


  /**
   * Model farmer_create_staged
   */

  export type AggregateFarmer_create_staged = {
    _count: Farmer_create_stagedCountAggregateOutputType | null
    _avg: Farmer_create_stagedAvgAggregateOutputType | null
    _sum: Farmer_create_stagedSumAggregateOutputType | null
    _min: Farmer_create_stagedMinAggregateOutputType | null
    _max: Farmer_create_stagedMaxAggregateOutputType | null
  }

  export type Farmer_create_stagedAvgAggregateOutputType = {
    status: number | null
  }

  export type Farmer_create_stagedSumAggregateOutputType = {
    status: number | null
  }

  export type Farmer_create_stagedMinAggregateOutputType = {
    id: string | null
    staged_id: string | null
    farmer_type: string | null
    tin: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    company_name: string | null
    gender: string | null
    birthdate: string | null
    education_degree: string | null
    occupation: string | null
    second_occupation: string | null
    phone_number: string | null
    mobile_number: string | null
    email: string | null
    line_id: string | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    contact_address_line1: string | null
    contact_address_subdistrict: string | null
    contact_address_district: string | null
    contact_address_province: string | null
    contact_address_zipcode: string | null
    status: number | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farmer_create_stagedMaxAggregateOutputType = {
    id: string | null
    staged_id: string | null
    farmer_type: string | null
    tin: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    company_name: string | null
    gender: string | null
    birthdate: string | null
    education_degree: string | null
    occupation: string | null
    second_occupation: string | null
    phone_number: string | null
    mobile_number: string | null
    email: string | null
    line_id: string | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    contact_address_line1: string | null
    contact_address_subdistrict: string | null
    contact_address_district: string | null
    contact_address_province: string | null
    contact_address_zipcode: string | null
    status: number | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Farmer_create_stagedCountAggregateOutputType = {
    id: number
    staged_id: number
    farmer_type: number
    tin: number
    title: number
    first_name: number
    middle_name: number
    last_name: number
    company_name: number
    gender: number
    birthdate: number
    education_degree: number
    occupation: number
    second_occupation: number
    phone_number: number
    mobile_number: number
    email: number
    line_id: number
    address_line1: number
    address_subdistrict: number
    address_district: number
    address_province: number
    address_zipcode: number
    contact_address_line1: number
    contact_address_subdistrict: number
    contact_address_district: number
    contact_address_province: number
    contact_address_zipcode: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Farmer_create_stagedAvgAggregateInputType = {
    status?: true
  }

  export type Farmer_create_stagedSumAggregateInputType = {
    status?: true
  }

  export type Farmer_create_stagedMinAggregateInputType = {
    id?: true
    staged_id?: true
    farmer_type?: true
    tin?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    company_name?: true
    gender?: true
    birthdate?: true
    education_degree?: true
    occupation?: true
    second_occupation?: true
    phone_number?: true
    mobile_number?: true
    email?: true
    line_id?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    contact_address_line1?: true
    contact_address_subdistrict?: true
    contact_address_district?: true
    contact_address_province?: true
    contact_address_zipcode?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farmer_create_stagedMaxAggregateInputType = {
    id?: true
    staged_id?: true
    farmer_type?: true
    tin?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    company_name?: true
    gender?: true
    birthdate?: true
    education_degree?: true
    occupation?: true
    second_occupation?: true
    phone_number?: true
    mobile_number?: true
    email?: true
    line_id?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    contact_address_line1?: true
    contact_address_subdistrict?: true
    contact_address_district?: true
    contact_address_province?: true
    contact_address_zipcode?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Farmer_create_stagedCountAggregateInputType = {
    id?: true
    staged_id?: true
    farmer_type?: true
    tin?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    company_name?: true
    gender?: true
    birthdate?: true
    education_degree?: true
    occupation?: true
    second_occupation?: true
    phone_number?: true
    mobile_number?: true
    email?: true
    line_id?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    contact_address_line1?: true
    contact_address_subdistrict?: true
    contact_address_district?: true
    contact_address_province?: true
    contact_address_zipcode?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Farmer_create_stagedAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmer_create_staged to aggregate.
     */
    where?: farmer_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_create_stageds to fetch.
     */
    orderBy?: farmer_create_stagedOrderByWithRelationInput | farmer_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farmer_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farmer_create_stageds
    **/
    _count?: true | Farmer_create_stagedCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Farmer_create_stagedAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Farmer_create_stagedSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Farmer_create_stagedMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Farmer_create_stagedMaxAggregateInputType
  }

  export type GetFarmer_create_stagedAggregateType<T extends Farmer_create_stagedAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmer_create_staged]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmer_create_staged[P]>
      : GetScalarType<T[P], AggregateFarmer_create_staged[P]>
  }




  export type farmer_create_stagedGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmer_create_stagedWhereInput
    orderBy?: farmer_create_stagedOrderByWithAggregationInput | farmer_create_stagedOrderByWithAggregationInput[]
    by: Farmer_create_stagedScalarFieldEnum[] | Farmer_create_stagedScalarFieldEnum
    having?: farmer_create_stagedScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Farmer_create_stagedCountAggregateInputType | true
    _avg?: Farmer_create_stagedAvgAggregateInputType
    _sum?: Farmer_create_stagedSumAggregateInputType
    _min?: Farmer_create_stagedMinAggregateInputType
    _max?: Farmer_create_stagedMaxAggregateInputType
  }

  export type Farmer_create_stagedGroupByOutputType = {
    id: string
    staged_id: string
    farmer_type: string
    tin: string
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    company_name: string | null
    gender: string | null
    birthdate: string | null
    education_degree: string | null
    occupation: string | null
    second_occupation: string | null
    phone_number: string | null
    mobile_number: string | null
    email: string | null
    line_id: string | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    contact_address_line1: string | null
    contact_address_subdistrict: string | null
    contact_address_district: string | null
    contact_address_province: string | null
    contact_address_zipcode: string | null
    status: number
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Farmer_create_stagedCountAggregateOutputType | null
    _avg: Farmer_create_stagedAvgAggregateOutputType | null
    _sum: Farmer_create_stagedSumAggregateOutputType | null
    _min: Farmer_create_stagedMinAggregateOutputType | null
    _max: Farmer_create_stagedMaxAggregateOutputType | null
  }

  type GetFarmer_create_stagedGroupByPayload<T extends farmer_create_stagedGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Farmer_create_stagedGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Farmer_create_stagedGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Farmer_create_stagedGroupByOutputType[P]>
            : GetScalarType<T[P], Farmer_create_stagedGroupByOutputType[P]>
        }
      >
    >


  export type farmer_create_stagedSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farmer_create_staged"]>

  export type farmer_create_stagedSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farmer_create_staged"]>

  export type farmer_create_stagedSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staged_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farmer_create_staged"]>

  export type farmer_create_stagedSelectScalar = {
    id?: boolean
    staged_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type farmer_create_stagedOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staged_id" | "farmer_type" | "tin" | "title" | "first_name" | "middle_name" | "last_name" | "company_name" | "gender" | "birthdate" | "education_degree" | "occupation" | "second_occupation" | "phone_number" | "mobile_number" | "email" | "line_id" | "address_line1" | "address_subdistrict" | "address_district" | "address_province" | "address_zipcode" | "contact_address_line1" | "contact_address_subdistrict" | "contact_address_district" | "contact_address_province" | "contact_address_zipcode" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["farmer_create_staged"]>

  export type $farmer_create_stagedPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farmer_create_staged"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      staged_id: string
      farmer_type: string
      tin: string
      title: string | null
      first_name: string | null
      middle_name: string | null
      last_name: string | null
      company_name: string | null
      gender: string | null
      birthdate: string | null
      education_degree: string | null
      occupation: string | null
      second_occupation: string | null
      phone_number: string | null
      mobile_number: string | null
      email: string | null
      line_id: string | null
      address_line1: string | null
      address_subdistrict: string | null
      address_district: string | null
      address_province: string | null
      address_zipcode: string | null
      contact_address_line1: string | null
      contact_address_subdistrict: string | null
      contact_address_district: string | null
      contact_address_province: string | null
      contact_address_zipcode: string | null
      status: number
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["farmer_create_staged"]>
    composites: {}
  }

  type farmer_create_stagedGetPayload<S extends boolean | null | undefined | farmer_create_stagedDefaultArgs> = $Result.GetResult<Prisma.$farmer_create_stagedPayload, S>

  type farmer_create_stagedCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farmer_create_stagedFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Farmer_create_stagedCountAggregateInputType | true
    }

  export interface farmer_create_stagedDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farmer_create_staged'], meta: { name: 'farmer_create_staged' } }
    /**
     * Find zero or one Farmer_create_staged that matches the filter.
     * @param {farmer_create_stagedFindUniqueArgs} args - Arguments to find a Farmer_create_staged
     * @example
     * // Get one Farmer_create_staged
     * const farmer_create_staged = await prisma.farmer_create_staged.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farmer_create_stagedFindUniqueArgs>(args: SelectSubset<T, farmer_create_stagedFindUniqueArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farmer_create_staged that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farmer_create_stagedFindUniqueOrThrowArgs} args - Arguments to find a Farmer_create_staged
     * @example
     * // Get one Farmer_create_staged
     * const farmer_create_staged = await prisma.farmer_create_staged.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farmer_create_stagedFindUniqueOrThrowArgs>(args: SelectSubset<T, farmer_create_stagedFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmer_create_staged that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_create_stagedFindFirstArgs} args - Arguments to find a Farmer_create_staged
     * @example
     * // Get one Farmer_create_staged
     * const farmer_create_staged = await prisma.farmer_create_staged.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farmer_create_stagedFindFirstArgs>(args?: SelectSubset<T, farmer_create_stagedFindFirstArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmer_create_staged that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_create_stagedFindFirstOrThrowArgs} args - Arguments to find a Farmer_create_staged
     * @example
     * // Get one Farmer_create_staged
     * const farmer_create_staged = await prisma.farmer_create_staged.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farmer_create_stagedFindFirstOrThrowArgs>(args?: SelectSubset<T, farmer_create_stagedFindFirstOrThrowArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farmer_create_stageds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_create_stagedFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farmer_create_stageds
     * const farmer_create_stageds = await prisma.farmer_create_staged.findMany()
     * 
     * // Get first 10 Farmer_create_stageds
     * const farmer_create_stageds = await prisma.farmer_create_staged.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmer_create_stagedWithIdOnly = await prisma.farmer_create_staged.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farmer_create_stagedFindManyArgs>(args?: SelectSubset<T, farmer_create_stagedFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farmer_create_staged.
     * @param {farmer_create_stagedCreateArgs} args - Arguments to create a Farmer_create_staged.
     * @example
     * // Create one Farmer_create_staged
     * const Farmer_create_staged = await prisma.farmer_create_staged.create({
     *   data: {
     *     // ... data to create a Farmer_create_staged
     *   }
     * })
     * 
     */
    create<T extends farmer_create_stagedCreateArgs>(args: SelectSubset<T, farmer_create_stagedCreateArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farmer_create_stageds.
     * @param {farmer_create_stagedCreateManyArgs} args - Arguments to create many Farmer_create_stageds.
     * @example
     * // Create many Farmer_create_stageds
     * const farmer_create_staged = await prisma.farmer_create_staged.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farmer_create_stagedCreateManyArgs>(args?: SelectSubset<T, farmer_create_stagedCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farmer_create_stageds and returns the data saved in the database.
     * @param {farmer_create_stagedCreateManyAndReturnArgs} args - Arguments to create many Farmer_create_stageds.
     * @example
     * // Create many Farmer_create_stageds
     * const farmer_create_staged = await prisma.farmer_create_staged.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farmer_create_stageds and only return the `id`
     * const farmer_create_stagedWithIdOnly = await prisma.farmer_create_staged.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farmer_create_stagedCreateManyAndReturnArgs>(args?: SelectSubset<T, farmer_create_stagedCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farmer_create_staged.
     * @param {farmer_create_stagedDeleteArgs} args - Arguments to delete one Farmer_create_staged.
     * @example
     * // Delete one Farmer_create_staged
     * const Farmer_create_staged = await prisma.farmer_create_staged.delete({
     *   where: {
     *     // ... filter to delete one Farmer_create_staged
     *   }
     * })
     * 
     */
    delete<T extends farmer_create_stagedDeleteArgs>(args: SelectSubset<T, farmer_create_stagedDeleteArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farmer_create_staged.
     * @param {farmer_create_stagedUpdateArgs} args - Arguments to update one Farmer_create_staged.
     * @example
     * // Update one Farmer_create_staged
     * const farmer_create_staged = await prisma.farmer_create_staged.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farmer_create_stagedUpdateArgs>(args: SelectSubset<T, farmer_create_stagedUpdateArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farmer_create_stageds.
     * @param {farmer_create_stagedDeleteManyArgs} args - Arguments to filter Farmer_create_stageds to delete.
     * @example
     * // Delete a few Farmer_create_stageds
     * const { count } = await prisma.farmer_create_staged.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farmer_create_stagedDeleteManyArgs>(args?: SelectSubset<T, farmer_create_stagedDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmer_create_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_create_stagedUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farmer_create_stageds
     * const farmer_create_staged = await prisma.farmer_create_staged.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farmer_create_stagedUpdateManyArgs>(args: SelectSubset<T, farmer_create_stagedUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmer_create_stageds and returns the data updated in the database.
     * @param {farmer_create_stagedUpdateManyAndReturnArgs} args - Arguments to update many Farmer_create_stageds.
     * @example
     * // Update many Farmer_create_stageds
     * const farmer_create_staged = await prisma.farmer_create_staged.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farmer_create_stageds and only return the `id`
     * const farmer_create_stagedWithIdOnly = await prisma.farmer_create_staged.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farmer_create_stagedUpdateManyAndReturnArgs>(args: SelectSubset<T, farmer_create_stagedUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farmer_create_staged.
     * @param {farmer_create_stagedUpsertArgs} args - Arguments to update or create a Farmer_create_staged.
     * @example
     * // Update or create a Farmer_create_staged
     * const farmer_create_staged = await prisma.farmer_create_staged.upsert({
     *   create: {
     *     // ... data to create a Farmer_create_staged
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farmer_create_staged we want to update
     *   }
     * })
     */
    upsert<T extends farmer_create_stagedUpsertArgs>(args: SelectSubset<T, farmer_create_stagedUpsertArgs<ExtArgs>>): Prisma__farmer_create_stagedClient<$Result.GetResult<Prisma.$farmer_create_stagedPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farmer_create_stageds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_create_stagedCountArgs} args - Arguments to filter Farmer_create_stageds to count.
     * @example
     * // Count the number of Farmer_create_stageds
     * const count = await prisma.farmer_create_staged.count({
     *   where: {
     *     // ... the filter for the Farmer_create_stageds we want to count
     *   }
     * })
    **/
    count<T extends farmer_create_stagedCountArgs>(
      args?: Subset<T, farmer_create_stagedCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Farmer_create_stagedCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farmer_create_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Farmer_create_stagedAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Farmer_create_stagedAggregateArgs>(args: Subset<T, Farmer_create_stagedAggregateArgs>): Prisma.PrismaPromise<GetFarmer_create_stagedAggregateType<T>>

    /**
     * Group by Farmer_create_staged.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmer_create_stagedGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farmer_create_stagedGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farmer_create_stagedGroupByArgs['orderBy'] }
        : { orderBy?: farmer_create_stagedGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farmer_create_stagedGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmer_create_stagedGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farmer_create_staged model
   */
  readonly fields: farmer_create_stagedFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farmer_create_staged.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farmer_create_stagedClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farmer_create_staged model
   */
  interface farmer_create_stagedFieldRefs {
    readonly id: FieldRef<"farmer_create_staged", 'String'>
    readonly staged_id: FieldRef<"farmer_create_staged", 'String'>
    readonly farmer_type: FieldRef<"farmer_create_staged", 'String'>
    readonly tin: FieldRef<"farmer_create_staged", 'String'>
    readonly title: FieldRef<"farmer_create_staged", 'String'>
    readonly first_name: FieldRef<"farmer_create_staged", 'String'>
    readonly middle_name: FieldRef<"farmer_create_staged", 'String'>
    readonly last_name: FieldRef<"farmer_create_staged", 'String'>
    readonly company_name: FieldRef<"farmer_create_staged", 'String'>
    readonly gender: FieldRef<"farmer_create_staged", 'String'>
    readonly birthdate: FieldRef<"farmer_create_staged", 'String'>
    readonly education_degree: FieldRef<"farmer_create_staged", 'String'>
    readonly occupation: FieldRef<"farmer_create_staged", 'String'>
    readonly second_occupation: FieldRef<"farmer_create_staged", 'String'>
    readonly phone_number: FieldRef<"farmer_create_staged", 'String'>
    readonly mobile_number: FieldRef<"farmer_create_staged", 'String'>
    readonly email: FieldRef<"farmer_create_staged", 'String'>
    readonly line_id: FieldRef<"farmer_create_staged", 'String'>
    readonly address_line1: FieldRef<"farmer_create_staged", 'String'>
    readonly address_subdistrict: FieldRef<"farmer_create_staged", 'String'>
    readonly address_district: FieldRef<"farmer_create_staged", 'String'>
    readonly address_province: FieldRef<"farmer_create_staged", 'String'>
    readonly address_zipcode: FieldRef<"farmer_create_staged", 'String'>
    readonly contact_address_line1: FieldRef<"farmer_create_staged", 'String'>
    readonly contact_address_subdistrict: FieldRef<"farmer_create_staged", 'String'>
    readonly contact_address_district: FieldRef<"farmer_create_staged", 'String'>
    readonly contact_address_province: FieldRef<"farmer_create_staged", 'String'>
    readonly contact_address_zipcode: FieldRef<"farmer_create_staged", 'String'>
    readonly status: FieldRef<"farmer_create_staged", 'Int'>
    readonly created_at: FieldRef<"farmer_create_staged", 'DateTime'>
    readonly created_by_id: FieldRef<"farmer_create_staged", 'String'>
    readonly created_by: FieldRef<"farmer_create_staged", 'String'>
    readonly updated_at: FieldRef<"farmer_create_staged", 'DateTime'>
    readonly updated_by_id: FieldRef<"farmer_create_staged", 'String'>
    readonly updated_by: FieldRef<"farmer_create_staged", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farmer_create_staged findUnique
   */
  export type farmer_create_stagedFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farmer_create_staged to fetch.
     */
    where: farmer_create_stagedWhereUniqueInput
  }

  /**
   * farmer_create_staged findUniqueOrThrow
   */
  export type farmer_create_stagedFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farmer_create_staged to fetch.
     */
    where: farmer_create_stagedWhereUniqueInput
  }

  /**
   * farmer_create_staged findFirst
   */
  export type farmer_create_stagedFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farmer_create_staged to fetch.
     */
    where?: farmer_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_create_stageds to fetch.
     */
    orderBy?: farmer_create_stagedOrderByWithRelationInput | farmer_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmer_create_stageds.
     */
    cursor?: farmer_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmer_create_stageds.
     */
    distinct?: Farmer_create_stagedScalarFieldEnum | Farmer_create_stagedScalarFieldEnum[]
  }

  /**
   * farmer_create_staged findFirstOrThrow
   */
  export type farmer_create_stagedFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farmer_create_staged to fetch.
     */
    where?: farmer_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_create_stageds to fetch.
     */
    orderBy?: farmer_create_stagedOrderByWithRelationInput | farmer_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmer_create_stageds.
     */
    cursor?: farmer_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_create_stageds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmer_create_stageds.
     */
    distinct?: Farmer_create_stagedScalarFieldEnum | Farmer_create_stagedScalarFieldEnum[]
  }

  /**
   * farmer_create_staged findMany
   */
  export type farmer_create_stagedFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * Filter, which farmer_create_stageds to fetch.
     */
    where?: farmer_create_stagedWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmer_create_stageds to fetch.
     */
    orderBy?: farmer_create_stagedOrderByWithRelationInput | farmer_create_stagedOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farmer_create_stageds.
     */
    cursor?: farmer_create_stagedWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmer_create_stageds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmer_create_stageds.
     */
    skip?: number
    distinct?: Farmer_create_stagedScalarFieldEnum | Farmer_create_stagedScalarFieldEnum[]
  }

  /**
   * farmer_create_staged create
   */
  export type farmer_create_stagedCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * The data needed to create a farmer_create_staged.
     */
    data: XOR<farmer_create_stagedCreateInput, farmer_create_stagedUncheckedCreateInput>
  }

  /**
   * farmer_create_staged createMany
   */
  export type farmer_create_stagedCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farmer_create_stageds.
     */
    data: farmer_create_stagedCreateManyInput | farmer_create_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farmer_create_staged createManyAndReturn
   */
  export type farmer_create_stagedCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * The data used to create many farmer_create_stageds.
     */
    data: farmer_create_stagedCreateManyInput | farmer_create_stagedCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farmer_create_staged update
   */
  export type farmer_create_stagedUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * The data needed to update a farmer_create_staged.
     */
    data: XOR<farmer_create_stagedUpdateInput, farmer_create_stagedUncheckedUpdateInput>
    /**
     * Choose, which farmer_create_staged to update.
     */
    where: farmer_create_stagedWhereUniqueInput
  }

  /**
   * farmer_create_staged updateMany
   */
  export type farmer_create_stagedUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farmer_create_stageds.
     */
    data: XOR<farmer_create_stagedUpdateManyMutationInput, farmer_create_stagedUncheckedUpdateManyInput>
    /**
     * Filter which farmer_create_stageds to update
     */
    where?: farmer_create_stagedWhereInput
    /**
     * Limit how many farmer_create_stageds to update.
     */
    limit?: number
  }

  /**
   * farmer_create_staged updateManyAndReturn
   */
  export type farmer_create_stagedUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * The data used to update farmer_create_stageds.
     */
    data: XOR<farmer_create_stagedUpdateManyMutationInput, farmer_create_stagedUncheckedUpdateManyInput>
    /**
     * Filter which farmer_create_stageds to update
     */
    where?: farmer_create_stagedWhereInput
    /**
     * Limit how many farmer_create_stageds to update.
     */
    limit?: number
  }

  /**
   * farmer_create_staged upsert
   */
  export type farmer_create_stagedUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * The filter to search for the farmer_create_staged to update in case it exists.
     */
    where: farmer_create_stagedWhereUniqueInput
    /**
     * In case the farmer_create_staged found by the `where` argument doesn't exist, create a new farmer_create_staged with this data.
     */
    create: XOR<farmer_create_stagedCreateInput, farmer_create_stagedUncheckedCreateInput>
    /**
     * In case the farmer_create_staged was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farmer_create_stagedUpdateInput, farmer_create_stagedUncheckedUpdateInput>
  }

  /**
   * farmer_create_staged delete
   */
  export type farmer_create_stagedDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
    /**
     * Filter which farmer_create_staged to delete.
     */
    where: farmer_create_stagedWhereUniqueInput
  }

  /**
   * farmer_create_staged deleteMany
   */
  export type farmer_create_stagedDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmer_create_stageds to delete
     */
    where?: farmer_create_stagedWhereInput
    /**
     * Limit how many farmer_create_stageds to delete.
     */
    limit?: number
  }

  /**
   * farmer_create_staged without action
   */
  export type farmer_create_stagedDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_create_staged
     */
    select?: farmer_create_stagedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_create_staged
     */
    omit?: farmer_create_stagedOmit<ExtArgs> | null
  }


  /**
   * Model farmers
   */

  export type AggregateFarmers = {
    _count: FarmersCountAggregateOutputType | null
    _min: FarmersMinAggregateOutputType | null
    _max: FarmersMaxAggregateOutputType | null
  }

  export type FarmersMinAggregateOutputType = {
    id: string | null
    tracer_id: string | null
    farmer_type: string | null
    tin: string | null
    masking_tin: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    company_name: string | null
    gender: string | null
    birthdate: string | null
    education_degree: string | null
    occupation: string | null
    second_occupation: string | null
    phone_number: string | null
    mobile_number: string | null
    email: string | null
    line_id: string | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    contact_address_line1: string | null
    contact_address_subdistrict: string | null
    contact_address_district: string | null
    contact_address_province: string | null
    contact_address_zipcode: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type FarmersMaxAggregateOutputType = {
    id: string | null
    tracer_id: string | null
    farmer_type: string | null
    tin: string | null
    masking_tin: string | null
    title: string | null
    first_name: string | null
    middle_name: string | null
    last_name: string | null
    company_name: string | null
    gender: string | null
    birthdate: string | null
    education_degree: string | null
    occupation: string | null
    second_occupation: string | null
    phone_number: string | null
    mobile_number: string | null
    email: string | null
    line_id: string | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    contact_address_line1: string | null
    contact_address_subdistrict: string | null
    contact_address_district: string | null
    contact_address_province: string | null
    contact_address_zipcode: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type FarmersCountAggregateOutputType = {
    id: number
    tracer_id: number
    farmer_type: number
    tin: number
    masking_tin: number
    title: number
    first_name: number
    middle_name: number
    last_name: number
    company_name: number
    gender: number
    birthdate: number
    education_degree: number
    occupation: number
    second_occupation: number
    phone_number: number
    mobile_number: number
    email: number
    line_id: number
    address_line1: number
    address_subdistrict: number
    address_district: number
    address_province: number
    address_zipcode: number
    contact_address_line1: number
    contact_address_subdistrict: number
    contact_address_district: number
    contact_address_province: number
    contact_address_zipcode: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type FarmersMinAggregateInputType = {
    id?: true
    tracer_id?: true
    farmer_type?: true
    tin?: true
    masking_tin?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    company_name?: true
    gender?: true
    birthdate?: true
    education_degree?: true
    occupation?: true
    second_occupation?: true
    phone_number?: true
    mobile_number?: true
    email?: true
    line_id?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    contact_address_line1?: true
    contact_address_subdistrict?: true
    contact_address_district?: true
    contact_address_province?: true
    contact_address_zipcode?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type FarmersMaxAggregateInputType = {
    id?: true
    tracer_id?: true
    farmer_type?: true
    tin?: true
    masking_tin?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    company_name?: true
    gender?: true
    birthdate?: true
    education_degree?: true
    occupation?: true
    second_occupation?: true
    phone_number?: true
    mobile_number?: true
    email?: true
    line_id?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    contact_address_line1?: true
    contact_address_subdistrict?: true
    contact_address_district?: true
    contact_address_province?: true
    contact_address_zipcode?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type FarmersCountAggregateInputType = {
    id?: true
    tracer_id?: true
    farmer_type?: true
    tin?: true
    masking_tin?: true
    title?: true
    first_name?: true
    middle_name?: true
    last_name?: true
    company_name?: true
    gender?: true
    birthdate?: true
    education_degree?: true
    occupation?: true
    second_occupation?: true
    phone_number?: true
    mobile_number?: true
    email?: true
    line_id?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    contact_address_line1?: true
    contact_address_subdistrict?: true
    contact_address_district?: true
    contact_address_province?: true
    contact_address_zipcode?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type FarmersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmers to aggregate.
     */
    where?: farmersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmers to fetch.
     */
    orderBy?: farmersOrderByWithRelationInput | farmersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farmersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farmers
    **/
    _count?: true | FarmersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmersMaxAggregateInputType
  }

  export type GetFarmersAggregateType<T extends FarmersAggregateArgs> = {
        [P in keyof T & keyof AggregateFarmers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarmers[P]>
      : GetScalarType<T[P], AggregateFarmers[P]>
  }




  export type farmersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmersWhereInput
    orderBy?: farmersOrderByWithAggregationInput | farmersOrderByWithAggregationInput[]
    by: FarmersScalarFieldEnum[] | FarmersScalarFieldEnum
    having?: farmersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmersCountAggregateInputType | true
    _min?: FarmersMinAggregateInputType
    _max?: FarmersMaxAggregateInputType
  }

  export type FarmersGroupByOutputType = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin: string | null
    title: string
    first_name: string
    middle_name: string | null
    last_name: string
    company_name: string | null
    gender: string | null
    birthdate: string | null
    education_degree: string | null
    occupation: string | null
    second_occupation: string | null
    phone_number: string | null
    mobile_number: string
    email: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: FarmersCountAggregateOutputType | null
    _min: FarmersMinAggregateOutputType | null
    _max: FarmersMaxAggregateOutputType | null
  }

  type GetFarmersGroupByPayload<T extends farmersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmersGroupByOutputType[P]>
            : GetScalarType<T[P], FarmersGroupByOutputType[P]>
        }
      >
    >


  export type farmersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    masking_tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farmer_accounts?: boolean | farmers$farmer_accountsArgs<ExtArgs>
    farmer_attachments?: boolean | farmers$farmer_attachmentsArgs<ExtArgs>
    _count?: boolean | FarmersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farmers"]>

  export type farmersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    masking_tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farmers"]>

  export type farmersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    masking_tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["farmers"]>

  export type farmersSelectScalar = {
    id?: boolean
    tracer_id?: boolean
    farmer_type?: boolean
    tin?: boolean
    masking_tin?: boolean
    title?: boolean
    first_name?: boolean
    middle_name?: boolean
    last_name?: boolean
    company_name?: boolean
    gender?: boolean
    birthdate?: boolean
    education_degree?: boolean
    occupation?: boolean
    second_occupation?: boolean
    phone_number?: boolean
    mobile_number?: boolean
    email?: boolean
    line_id?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    contact_address_line1?: boolean
    contact_address_subdistrict?: boolean
    contact_address_district?: boolean
    contact_address_province?: boolean
    contact_address_zipcode?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type farmersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tracer_id" | "farmer_type" | "tin" | "masking_tin" | "title" | "first_name" | "middle_name" | "last_name" | "company_name" | "gender" | "birthdate" | "education_degree" | "occupation" | "second_occupation" | "phone_number" | "mobile_number" | "email" | "line_id" | "address_line1" | "address_subdistrict" | "address_district" | "address_province" | "address_zipcode" | "contact_address_line1" | "contact_address_subdistrict" | "contact_address_district" | "contact_address_province" | "contact_address_zipcode" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["farmers"]>
  export type farmersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farmer_accounts?: boolean | farmers$farmer_accountsArgs<ExtArgs>
    farmer_attachments?: boolean | farmers$farmer_attachmentsArgs<ExtArgs>
    _count?: boolean | FarmersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type farmersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type farmersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $farmersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farmers"
    objects: {
      farmer_accounts: Prisma.$farmer_accountsPayload<ExtArgs>[]
      farmer_attachments: Prisma.$farmer_attachmentsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tracer_id: string
      farmer_type: string
      tin: string
      masking_tin: string | null
      title: string
      first_name: string
      middle_name: string | null
      last_name: string
      company_name: string | null
      gender: string | null
      birthdate: string | null
      education_degree: string | null
      occupation: string | null
      second_occupation: string | null
      phone_number: string | null
      mobile_number: string
      email: string | null
      line_id: string
      address_line1: string
      address_subdistrict: string
      address_district: string
      address_province: string
      address_zipcode: string
      contact_address_line1: string
      contact_address_subdistrict: string
      contact_address_district: string
      contact_address_province: string
      contact_address_zipcode: string
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["farmers"]>
    composites: {}
  }

  type farmersGetPayload<S extends boolean | null | undefined | farmersDefaultArgs> = $Result.GetResult<Prisma.$farmersPayload, S>

  type farmersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farmersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmersCountAggregateInputType | true
    }

  export interface farmersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farmers'], meta: { name: 'farmers' } }
    /**
     * Find zero or one Farmers that matches the filter.
     * @param {farmersFindUniqueArgs} args - Arguments to find a Farmers
     * @example
     * // Get one Farmers
     * const farmers = await prisma.farmers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farmersFindUniqueArgs>(args: SelectSubset<T, farmersFindUniqueArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farmers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farmersFindUniqueOrThrowArgs} args - Arguments to find a Farmers
     * @example
     * // Get one Farmers
     * const farmers = await prisma.farmers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farmersFindUniqueOrThrowArgs>(args: SelectSubset<T, farmersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmersFindFirstArgs} args - Arguments to find a Farmers
     * @example
     * // Get one Farmers
     * const farmers = await prisma.farmers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farmersFindFirstArgs>(args?: SelectSubset<T, farmersFindFirstArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farmers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmersFindFirstOrThrowArgs} args - Arguments to find a Farmers
     * @example
     * // Get one Farmers
     * const farmers = await prisma.farmers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farmersFindFirstOrThrowArgs>(args?: SelectSubset<T, farmersFindFirstOrThrowArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farmers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farmers
     * const farmers = await prisma.farmers.findMany()
     * 
     * // Get first 10 Farmers
     * const farmers = await prisma.farmers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmersWithIdOnly = await prisma.farmers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farmersFindManyArgs>(args?: SelectSubset<T, farmersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farmers.
     * @param {farmersCreateArgs} args - Arguments to create a Farmers.
     * @example
     * // Create one Farmers
     * const Farmers = await prisma.farmers.create({
     *   data: {
     *     // ... data to create a Farmers
     *   }
     * })
     * 
     */
    create<T extends farmersCreateArgs>(args: SelectSubset<T, farmersCreateArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farmers.
     * @param {farmersCreateManyArgs} args - Arguments to create many Farmers.
     * @example
     * // Create many Farmers
     * const farmers = await prisma.farmers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farmersCreateManyArgs>(args?: SelectSubset<T, farmersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farmers and returns the data saved in the database.
     * @param {farmersCreateManyAndReturnArgs} args - Arguments to create many Farmers.
     * @example
     * // Create many Farmers
     * const farmers = await prisma.farmers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farmers and only return the `id`
     * const farmersWithIdOnly = await prisma.farmers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farmersCreateManyAndReturnArgs>(args?: SelectSubset<T, farmersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farmers.
     * @param {farmersDeleteArgs} args - Arguments to delete one Farmers.
     * @example
     * // Delete one Farmers
     * const Farmers = await prisma.farmers.delete({
     *   where: {
     *     // ... filter to delete one Farmers
     *   }
     * })
     * 
     */
    delete<T extends farmersDeleteArgs>(args: SelectSubset<T, farmersDeleteArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farmers.
     * @param {farmersUpdateArgs} args - Arguments to update one Farmers.
     * @example
     * // Update one Farmers
     * const farmers = await prisma.farmers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farmersUpdateArgs>(args: SelectSubset<T, farmersUpdateArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farmers.
     * @param {farmersDeleteManyArgs} args - Arguments to filter Farmers to delete.
     * @example
     * // Delete a few Farmers
     * const { count } = await prisma.farmers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farmersDeleteManyArgs>(args?: SelectSubset<T, farmersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farmers
     * const farmers = await prisma.farmers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farmersUpdateManyArgs>(args: SelectSubset<T, farmersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farmers and returns the data updated in the database.
     * @param {farmersUpdateManyAndReturnArgs} args - Arguments to update many Farmers.
     * @example
     * // Update many Farmers
     * const farmers = await prisma.farmers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farmers and only return the `id`
     * const farmersWithIdOnly = await prisma.farmers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farmersUpdateManyAndReturnArgs>(args: SelectSubset<T, farmersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farmers.
     * @param {farmersUpsertArgs} args - Arguments to update or create a Farmers.
     * @example
     * // Update or create a Farmers
     * const farmers = await prisma.farmers.upsert({
     *   create: {
     *     // ... data to create a Farmers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farmers we want to update
     *   }
     * })
     */
    upsert<T extends farmersUpsertArgs>(args: SelectSubset<T, farmersUpsertArgs<ExtArgs>>): Prisma__farmersClient<$Result.GetResult<Prisma.$farmersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farmers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmersCountArgs} args - Arguments to filter Farmers to count.
     * @example
     * // Count the number of Farmers
     * const count = await prisma.farmers.count({
     *   where: {
     *     // ... the filter for the Farmers we want to count
     *   }
     * })
    **/
    count<T extends farmersCountArgs>(
      args?: Subset<T, farmersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farmers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmersAggregateArgs>(args: Subset<T, FarmersAggregateArgs>): Prisma.PrismaPromise<GetFarmersAggregateType<T>>

    /**
     * Group by Farmers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farmersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farmersGroupByArgs['orderBy'] }
        : { orderBy?: farmersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farmersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farmers model
   */
  readonly fields: farmersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farmers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farmersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    farmer_accounts<T extends farmers$farmer_accountsArgs<ExtArgs> = {}>(args?: Subset<T, farmers$farmer_accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_accountsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    farmer_attachments<T extends farmers$farmer_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, farmers$farmer_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmer_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farmers model
   */
  interface farmersFieldRefs {
    readonly id: FieldRef<"farmers", 'String'>
    readonly tracer_id: FieldRef<"farmers", 'String'>
    readonly farmer_type: FieldRef<"farmers", 'String'>
    readonly tin: FieldRef<"farmers", 'String'>
    readonly masking_tin: FieldRef<"farmers", 'String'>
    readonly title: FieldRef<"farmers", 'String'>
    readonly first_name: FieldRef<"farmers", 'String'>
    readonly middle_name: FieldRef<"farmers", 'String'>
    readonly last_name: FieldRef<"farmers", 'String'>
    readonly company_name: FieldRef<"farmers", 'String'>
    readonly gender: FieldRef<"farmers", 'String'>
    readonly birthdate: FieldRef<"farmers", 'String'>
    readonly education_degree: FieldRef<"farmers", 'String'>
    readonly occupation: FieldRef<"farmers", 'String'>
    readonly second_occupation: FieldRef<"farmers", 'String'>
    readonly phone_number: FieldRef<"farmers", 'String'>
    readonly mobile_number: FieldRef<"farmers", 'String'>
    readonly email: FieldRef<"farmers", 'String'>
    readonly line_id: FieldRef<"farmers", 'String'>
    readonly address_line1: FieldRef<"farmers", 'String'>
    readonly address_subdistrict: FieldRef<"farmers", 'String'>
    readonly address_district: FieldRef<"farmers", 'String'>
    readonly address_province: FieldRef<"farmers", 'String'>
    readonly address_zipcode: FieldRef<"farmers", 'String'>
    readonly contact_address_line1: FieldRef<"farmers", 'String'>
    readonly contact_address_subdistrict: FieldRef<"farmers", 'String'>
    readonly contact_address_district: FieldRef<"farmers", 'String'>
    readonly contact_address_province: FieldRef<"farmers", 'String'>
    readonly contact_address_zipcode: FieldRef<"farmers", 'String'>
    readonly status: FieldRef<"farmers", 'String'>
    readonly created_at: FieldRef<"farmers", 'DateTime'>
    readonly created_by_id: FieldRef<"farmers", 'String'>
    readonly created_by: FieldRef<"farmers", 'String'>
    readonly updated_at: FieldRef<"farmers", 'DateTime'>
    readonly updated_by_id: FieldRef<"farmers", 'String'>
    readonly updated_by: FieldRef<"farmers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farmers findUnique
   */
  export type farmersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * Filter, which farmers to fetch.
     */
    where: farmersWhereUniqueInput
  }

  /**
   * farmers findUniqueOrThrow
   */
  export type farmersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * Filter, which farmers to fetch.
     */
    where: farmersWhereUniqueInput
  }

  /**
   * farmers findFirst
   */
  export type farmersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * Filter, which farmers to fetch.
     */
    where?: farmersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmers to fetch.
     */
    orderBy?: farmersOrderByWithRelationInput | farmersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmers.
     */
    cursor?: farmersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmers.
     */
    distinct?: FarmersScalarFieldEnum | FarmersScalarFieldEnum[]
  }

  /**
   * farmers findFirstOrThrow
   */
  export type farmersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * Filter, which farmers to fetch.
     */
    where?: farmersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmers to fetch.
     */
    orderBy?: farmersOrderByWithRelationInput | farmersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farmers.
     */
    cursor?: farmersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farmers.
     */
    distinct?: FarmersScalarFieldEnum | FarmersScalarFieldEnum[]
  }

  /**
   * farmers findMany
   */
  export type farmersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * Filter, which farmers to fetch.
     */
    where?: farmersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farmers to fetch.
     */
    orderBy?: farmersOrderByWithRelationInput | farmersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farmers.
     */
    cursor?: farmersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farmers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farmers.
     */
    skip?: number
    distinct?: FarmersScalarFieldEnum | FarmersScalarFieldEnum[]
  }

  /**
   * farmers create
   */
  export type farmersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * The data needed to create a farmers.
     */
    data: XOR<farmersCreateInput, farmersUncheckedCreateInput>
  }

  /**
   * farmers createMany
   */
  export type farmersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farmers.
     */
    data: farmersCreateManyInput | farmersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farmers createManyAndReturn
   */
  export type farmersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * The data used to create many farmers.
     */
    data: farmersCreateManyInput | farmersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farmers update
   */
  export type farmersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * The data needed to update a farmers.
     */
    data: XOR<farmersUpdateInput, farmersUncheckedUpdateInput>
    /**
     * Choose, which farmers to update.
     */
    where: farmersWhereUniqueInput
  }

  /**
   * farmers updateMany
   */
  export type farmersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farmers.
     */
    data: XOR<farmersUpdateManyMutationInput, farmersUncheckedUpdateManyInput>
    /**
     * Filter which farmers to update
     */
    where?: farmersWhereInput
    /**
     * Limit how many farmers to update.
     */
    limit?: number
  }

  /**
   * farmers updateManyAndReturn
   */
  export type farmersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * The data used to update farmers.
     */
    data: XOR<farmersUpdateManyMutationInput, farmersUncheckedUpdateManyInput>
    /**
     * Filter which farmers to update
     */
    where?: farmersWhereInput
    /**
     * Limit how many farmers to update.
     */
    limit?: number
  }

  /**
   * farmers upsert
   */
  export type farmersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * The filter to search for the farmers to update in case it exists.
     */
    where: farmersWhereUniqueInput
    /**
     * In case the farmers found by the `where` argument doesn't exist, create a new farmers with this data.
     */
    create: XOR<farmersCreateInput, farmersUncheckedCreateInput>
    /**
     * In case the farmers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farmersUpdateInput, farmersUncheckedUpdateInput>
  }

  /**
   * farmers delete
   */
  export type farmersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
    /**
     * Filter which farmers to delete.
     */
    where: farmersWhereUniqueInput
  }

  /**
   * farmers deleteMany
   */
  export type farmersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farmers to delete
     */
    where?: farmersWhereInput
    /**
     * Limit how many farmers to delete.
     */
    limit?: number
  }

  /**
   * farmers.farmer_accounts
   */
  export type farmers$farmer_accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_accounts
     */
    select?: farmer_accountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_accounts
     */
    omit?: farmer_accountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_accountsInclude<ExtArgs> | null
    where?: farmer_accountsWhereInput
    orderBy?: farmer_accountsOrderByWithRelationInput | farmer_accountsOrderByWithRelationInput[]
    cursor?: farmer_accountsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Farmer_accountsScalarFieldEnum | Farmer_accountsScalarFieldEnum[]
  }

  /**
   * farmers.farmer_attachments
   */
  export type farmers$farmer_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmer_attachments
     */
    select?: farmer_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmer_attachments
     */
    omit?: farmer_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmer_attachmentsInclude<ExtArgs> | null
    where?: farmer_attachmentsWhereInput
    orderBy?: farmer_attachmentsOrderByWithRelationInput | farmer_attachmentsOrderByWithRelationInput[]
    cursor?: farmer_attachmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Farmer_attachmentsScalarFieldEnum | Farmer_attachmentsScalarFieldEnum[]
  }

  /**
   * farmers without action
   */
  export type farmersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farmers
     */
    select?: farmersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farmers
     */
    omit?: farmersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmersInclude<ExtArgs> | null
  }


  /**
   * Model farms
   */

  export type AggregateFarms = {
    _count: FarmsCountAggregateOutputType | null
    _avg: FarmsAvgAggregateOutputType | null
    _sum: FarmsSumAggregateOutputType | null
    _min: FarmsMinAggregateOutputType | null
    _max: FarmsMaxAggregateOutputType | null
  }

  export type FarmsAvgAggregateOutputType = {
    max_cows: number | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
  }

  export type FarmsSumAggregateOutputType = {
    max_cows: number | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
  }

  export type FarmsMinAggregateOutputType = {
    id: string | null
    tracer_id: string | null
    farm_identification: string | null
    farm_type: string | null
    max_cows: number | null
    name: string | null
    standard: string | null
    status: string | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    is_owner_ref_farmer: boolean | null
    farmer_id: string | null
    owner_type: string | null
    owner_tin: string | null
    owner_masking_tin: string | null
    owner_title: string | null
    owner_first_name: string | null
    owner_middle_name: string | null
    owner_last_name: string | null
    owner_company_name: string | null
    owner_gender: string | null
    owner_birthdate: string | null
    owner_education_degree: string | null
    owner_occupation: string | null
    owner_second_occupation: string | null
    owner_phone_number: string | null
    owner_mobile_number: string | null
    owner_email: string | null
    owner_line_id: string | null
    owner_address_line1: string | null
    owner_address_subdistrict: string | null
    owner_address_district: string | null
    owner_address_province: string | null
    owner_address_zipcode: string | null
    owner_contact_address_line1: string | null
    owner_contact_address_subdistrict: string | null
    owner_contact_address_district: string | null
    owner_contact_address_province: string | null
    owner_contact_address_zipcode: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    ref_1: string | null
  }

  export type FarmsMaxAggregateOutputType = {
    id: string | null
    tracer_id: string | null
    farm_identification: string | null
    farm_type: string | null
    max_cows: number | null
    name: string | null
    standard: string | null
    status: string | null
    rai: Decimal | null
    ngan: Decimal | null
    wa: Decimal | null
    address_line1: string | null
    address_subdistrict: string | null
    address_district: string | null
    address_province: string | null
    address_zipcode: string | null
    is_owner_ref_farmer: boolean | null
    farmer_id: string | null
    owner_type: string | null
    owner_tin: string | null
    owner_masking_tin: string | null
    owner_title: string | null
    owner_first_name: string | null
    owner_middle_name: string | null
    owner_last_name: string | null
    owner_company_name: string | null
    owner_gender: string | null
    owner_birthdate: string | null
    owner_education_degree: string | null
    owner_occupation: string | null
    owner_second_occupation: string | null
    owner_phone_number: string | null
    owner_mobile_number: string | null
    owner_email: string | null
    owner_line_id: string | null
    owner_address_line1: string | null
    owner_address_subdistrict: string | null
    owner_address_district: string | null
    owner_address_province: string | null
    owner_address_zipcode: string | null
    owner_contact_address_line1: string | null
    owner_contact_address_subdistrict: string | null
    owner_contact_address_district: string | null
    owner_contact_address_province: string | null
    owner_contact_address_zipcode: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    ref_1: string | null
  }

  export type FarmsCountAggregateOutputType = {
    id: number
    tracer_id: number
    farm_identification: number
    farm_type: number
    max_cows: number
    name: number
    standard: number
    status: number
    rai: number
    ngan: number
    wa: number
    address_line1: number
    address_subdistrict: number
    address_district: number
    address_province: number
    address_zipcode: number
    is_owner_ref_farmer: number
    farmer_id: number
    owner_type: number
    owner_tin: number
    owner_masking_tin: number
    owner_title: number
    owner_first_name: number
    owner_middle_name: number
    owner_last_name: number
    owner_company_name: number
    owner_gender: number
    owner_birthdate: number
    owner_education_degree: number
    owner_occupation: number
    owner_second_occupation: number
    owner_phone_number: number
    owner_mobile_number: number
    owner_email: number
    owner_line_id: number
    owner_address_line1: number
    owner_address_subdistrict: number
    owner_address_district: number
    owner_address_province: number
    owner_address_zipcode: number
    owner_contact_address_line1: number
    owner_contact_address_subdistrict: number
    owner_contact_address_district: number
    owner_contact_address_province: number
    owner_contact_address_zipcode: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    ref_1: number
    _all: number
  }


  export type FarmsAvgAggregateInputType = {
    max_cows?: true
    rai?: true
    ngan?: true
    wa?: true
  }

  export type FarmsSumAggregateInputType = {
    max_cows?: true
    rai?: true
    ngan?: true
    wa?: true
  }

  export type FarmsMinAggregateInputType = {
    id?: true
    tracer_id?: true
    farm_identification?: true
    farm_type?: true
    max_cows?: true
    name?: true
    standard?: true
    status?: true
    rai?: true
    ngan?: true
    wa?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    is_owner_ref_farmer?: true
    farmer_id?: true
    owner_type?: true
    owner_tin?: true
    owner_masking_tin?: true
    owner_title?: true
    owner_first_name?: true
    owner_middle_name?: true
    owner_last_name?: true
    owner_company_name?: true
    owner_gender?: true
    owner_birthdate?: true
    owner_education_degree?: true
    owner_occupation?: true
    owner_second_occupation?: true
    owner_phone_number?: true
    owner_mobile_number?: true
    owner_email?: true
    owner_line_id?: true
    owner_address_line1?: true
    owner_address_subdistrict?: true
    owner_address_district?: true
    owner_address_province?: true
    owner_address_zipcode?: true
    owner_contact_address_line1?: true
    owner_contact_address_subdistrict?: true
    owner_contact_address_district?: true
    owner_contact_address_province?: true
    owner_contact_address_zipcode?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    ref_1?: true
  }

  export type FarmsMaxAggregateInputType = {
    id?: true
    tracer_id?: true
    farm_identification?: true
    farm_type?: true
    max_cows?: true
    name?: true
    standard?: true
    status?: true
    rai?: true
    ngan?: true
    wa?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    is_owner_ref_farmer?: true
    farmer_id?: true
    owner_type?: true
    owner_tin?: true
    owner_masking_tin?: true
    owner_title?: true
    owner_first_name?: true
    owner_middle_name?: true
    owner_last_name?: true
    owner_company_name?: true
    owner_gender?: true
    owner_birthdate?: true
    owner_education_degree?: true
    owner_occupation?: true
    owner_second_occupation?: true
    owner_phone_number?: true
    owner_mobile_number?: true
    owner_email?: true
    owner_line_id?: true
    owner_address_line1?: true
    owner_address_subdistrict?: true
    owner_address_district?: true
    owner_address_province?: true
    owner_address_zipcode?: true
    owner_contact_address_line1?: true
    owner_contact_address_subdistrict?: true
    owner_contact_address_district?: true
    owner_contact_address_province?: true
    owner_contact_address_zipcode?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    ref_1?: true
  }

  export type FarmsCountAggregateInputType = {
    id?: true
    tracer_id?: true
    farm_identification?: true
    farm_type?: true
    max_cows?: true
    name?: true
    standard?: true
    status?: true
    rai?: true
    ngan?: true
    wa?: true
    address_line1?: true
    address_subdistrict?: true
    address_district?: true
    address_province?: true
    address_zipcode?: true
    is_owner_ref_farmer?: true
    farmer_id?: true
    owner_type?: true
    owner_tin?: true
    owner_masking_tin?: true
    owner_title?: true
    owner_first_name?: true
    owner_middle_name?: true
    owner_last_name?: true
    owner_company_name?: true
    owner_gender?: true
    owner_birthdate?: true
    owner_education_degree?: true
    owner_occupation?: true
    owner_second_occupation?: true
    owner_phone_number?: true
    owner_mobile_number?: true
    owner_email?: true
    owner_line_id?: true
    owner_address_line1?: true
    owner_address_subdistrict?: true
    owner_address_district?: true
    owner_address_province?: true
    owner_address_zipcode?: true
    owner_contact_address_line1?: true
    owner_contact_address_subdistrict?: true
    owner_contact_address_district?: true
    owner_contact_address_province?: true
    owner_contact_address_zipcode?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    ref_1?: true
    _all?: true
  }

  export type FarmsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farms to aggregate.
     */
    where?: farmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farms to fetch.
     */
    orderBy?: farmsOrderByWithRelationInput | farmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: farmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned farms
    **/
    _count?: true | FarmsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FarmsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FarmsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FarmsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FarmsMaxAggregateInputType
  }

  export type GetFarmsAggregateType<T extends FarmsAggregateArgs> = {
        [P in keyof T & keyof AggregateFarms]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFarms[P]>
      : GetScalarType<T[P], AggregateFarms[P]>
  }




  export type farmsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: farmsWhereInput
    orderBy?: farmsOrderByWithAggregationInput | farmsOrderByWithAggregationInput[]
    by: FarmsScalarFieldEnum[] | FarmsScalarFieldEnum
    having?: farmsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FarmsCountAggregateInputType | true
    _avg?: FarmsAvgAggregateInputType
    _sum?: FarmsSumAggregateInputType
    _min?: FarmsMinAggregateInputType
    _max?: FarmsMaxAggregateInputType
  }

  export type FarmsGroupByOutputType = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal
    ngan: Decimal
    wa: Decimal
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id: string | null
    owner_type: string | null
    owner_tin: string | null
    owner_masking_tin: string | null
    owner_title: string | null
    owner_first_name: string | null
    owner_middle_name: string | null
    owner_last_name: string | null
    owner_company_name: string | null
    owner_gender: string | null
    owner_birthdate: string | null
    owner_education_degree: string | null
    owner_occupation: string | null
    owner_second_occupation: string | null
    owner_phone_number: string | null
    owner_mobile_number: string | null
    owner_email: string | null
    owner_line_id: string | null
    owner_address_line1: string | null
    owner_address_subdistrict: string | null
    owner_address_district: string | null
    owner_address_province: string | null
    owner_address_zipcode: string | null
    owner_contact_address_line1: string | null
    owner_contact_address_subdistrict: string | null
    owner_contact_address_district: string | null
    owner_contact_address_province: string | null
    owner_contact_address_zipcode: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    ref_1: string
    _count: FarmsCountAggregateOutputType | null
    _avg: FarmsAvgAggregateOutputType | null
    _sum: FarmsSumAggregateOutputType | null
    _min: FarmsMinAggregateOutputType | null
    _max: FarmsMaxAggregateOutputType | null
  }

  type GetFarmsGroupByPayload<T extends farmsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FarmsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FarmsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FarmsGroupByOutputType[P]>
            : GetScalarType<T[P], FarmsGroupByOutputType[P]>
        }
      >
    >


  export type farmsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    status?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_masking_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    ref_1?: boolean
    cattles?: boolean | farms$cattlesArgs<ExtArgs>
    farm_attachments?: boolean | farms$farm_attachmentsArgs<ExtArgs>
    farm_authorized?: boolean | farms$farm_authorizedArgs<ExtArgs>
    farm_veterinary?: boolean | farms$farm_veterinaryArgs<ExtArgs>
    pens?: boolean | farms$pensArgs<ExtArgs>
    _count?: boolean | FarmsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["farms"]>

  export type farmsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    status?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_masking_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    ref_1?: boolean
  }, ExtArgs["result"]["farms"]>

  export type farmsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tracer_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    status?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_masking_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    ref_1?: boolean
  }, ExtArgs["result"]["farms"]>

  export type farmsSelectScalar = {
    id?: boolean
    tracer_id?: boolean
    farm_identification?: boolean
    farm_type?: boolean
    max_cows?: boolean
    name?: boolean
    standard?: boolean
    status?: boolean
    rai?: boolean
    ngan?: boolean
    wa?: boolean
    address_line1?: boolean
    address_subdistrict?: boolean
    address_district?: boolean
    address_province?: boolean
    address_zipcode?: boolean
    is_owner_ref_farmer?: boolean
    farmer_id?: boolean
    owner_type?: boolean
    owner_tin?: boolean
    owner_masking_tin?: boolean
    owner_title?: boolean
    owner_first_name?: boolean
    owner_middle_name?: boolean
    owner_last_name?: boolean
    owner_company_name?: boolean
    owner_gender?: boolean
    owner_birthdate?: boolean
    owner_education_degree?: boolean
    owner_occupation?: boolean
    owner_second_occupation?: boolean
    owner_phone_number?: boolean
    owner_mobile_number?: boolean
    owner_email?: boolean
    owner_line_id?: boolean
    owner_address_line1?: boolean
    owner_address_subdistrict?: boolean
    owner_address_district?: boolean
    owner_address_province?: boolean
    owner_address_zipcode?: boolean
    owner_contact_address_line1?: boolean
    owner_contact_address_subdistrict?: boolean
    owner_contact_address_district?: boolean
    owner_contact_address_province?: boolean
    owner_contact_address_zipcode?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    ref_1?: boolean
  }

  export type farmsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tracer_id" | "farm_identification" | "farm_type" | "max_cows" | "name" | "standard" | "status" | "rai" | "ngan" | "wa" | "address_line1" | "address_subdistrict" | "address_district" | "address_province" | "address_zipcode" | "is_owner_ref_farmer" | "farmer_id" | "owner_type" | "owner_tin" | "owner_masking_tin" | "owner_title" | "owner_first_name" | "owner_middle_name" | "owner_last_name" | "owner_company_name" | "owner_gender" | "owner_birthdate" | "owner_education_degree" | "owner_occupation" | "owner_second_occupation" | "owner_phone_number" | "owner_mobile_number" | "owner_email" | "owner_line_id" | "owner_address_line1" | "owner_address_subdistrict" | "owner_address_district" | "owner_address_province" | "owner_address_zipcode" | "owner_contact_address_line1" | "owner_contact_address_subdistrict" | "owner_contact_address_district" | "owner_contact_address_province" | "owner_contact_address_zipcode" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by" | "ref_1", ExtArgs["result"]["farms"]>
  export type farmsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | farms$cattlesArgs<ExtArgs>
    farm_attachments?: boolean | farms$farm_attachmentsArgs<ExtArgs>
    farm_authorized?: boolean | farms$farm_authorizedArgs<ExtArgs>
    farm_veterinary?: boolean | farms$farm_veterinaryArgs<ExtArgs>
    pens?: boolean | farms$pensArgs<ExtArgs>
    _count?: boolean | FarmsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type farmsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type farmsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $farmsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "farms"
    objects: {
      cattles: Prisma.$cattlesPayload<ExtArgs>[]
      farm_attachments: Prisma.$farm_attachmentsPayload<ExtArgs>[]
      farm_authorized: Prisma.$farm_authorizedPayload<ExtArgs>[]
      farm_veterinary: Prisma.$farm_veterinaryPayload<ExtArgs>[]
      pens: Prisma.$pensPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      tracer_id: string
      farm_identification: string
      farm_type: string
      max_cows: number
      name: string
      standard: string
      status: string
      rai: Prisma.Decimal
      ngan: Prisma.Decimal
      wa: Prisma.Decimal
      address_line1: string
      address_subdistrict: string
      address_district: string
      address_province: string
      address_zipcode: string
      is_owner_ref_farmer: boolean
      farmer_id: string | null
      owner_type: string | null
      owner_tin: string | null
      owner_masking_tin: string | null
      owner_title: string | null
      owner_first_name: string | null
      owner_middle_name: string | null
      owner_last_name: string | null
      owner_company_name: string | null
      owner_gender: string | null
      owner_birthdate: string | null
      owner_education_degree: string | null
      owner_occupation: string | null
      owner_second_occupation: string | null
      owner_phone_number: string | null
      owner_mobile_number: string | null
      owner_email: string | null
      owner_line_id: string | null
      owner_address_line1: string | null
      owner_address_subdistrict: string | null
      owner_address_district: string | null
      owner_address_province: string | null
      owner_address_zipcode: string | null
      owner_contact_address_line1: string | null
      owner_contact_address_subdistrict: string | null
      owner_contact_address_district: string | null
      owner_contact_address_province: string | null
      owner_contact_address_zipcode: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
      ref_1: string
    }, ExtArgs["result"]["farms"]>
    composites: {}
  }

  type farmsGetPayload<S extends boolean | null | undefined | farmsDefaultArgs> = $Result.GetResult<Prisma.$farmsPayload, S>

  type farmsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<farmsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FarmsCountAggregateInputType | true
    }

  export interface farmsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['farms'], meta: { name: 'farms' } }
    /**
     * Find zero or one Farms that matches the filter.
     * @param {farmsFindUniqueArgs} args - Arguments to find a Farms
     * @example
     * // Get one Farms
     * const farms = await prisma.farms.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends farmsFindUniqueArgs>(args: SelectSubset<T, farmsFindUniqueArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Farms that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {farmsFindUniqueOrThrowArgs} args - Arguments to find a Farms
     * @example
     * // Get one Farms
     * const farms = await prisma.farms.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends farmsFindUniqueOrThrowArgs>(args: SelectSubset<T, farmsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmsFindFirstArgs} args - Arguments to find a Farms
     * @example
     * // Get one Farms
     * const farms = await prisma.farms.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends farmsFindFirstArgs>(args?: SelectSubset<T, farmsFindFirstArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Farms that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmsFindFirstOrThrowArgs} args - Arguments to find a Farms
     * @example
     * // Get one Farms
     * const farms = await prisma.farms.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends farmsFindFirstOrThrowArgs>(args?: SelectSubset<T, farmsFindFirstOrThrowArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Farms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Farms
     * const farms = await prisma.farms.findMany()
     * 
     * // Get first 10 Farms
     * const farms = await prisma.farms.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const farmsWithIdOnly = await prisma.farms.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends farmsFindManyArgs>(args?: SelectSubset<T, farmsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Farms.
     * @param {farmsCreateArgs} args - Arguments to create a Farms.
     * @example
     * // Create one Farms
     * const Farms = await prisma.farms.create({
     *   data: {
     *     // ... data to create a Farms
     *   }
     * })
     * 
     */
    create<T extends farmsCreateArgs>(args: SelectSubset<T, farmsCreateArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Farms.
     * @param {farmsCreateManyArgs} args - Arguments to create many Farms.
     * @example
     * // Create many Farms
     * const farms = await prisma.farms.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends farmsCreateManyArgs>(args?: SelectSubset<T, farmsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Farms and returns the data saved in the database.
     * @param {farmsCreateManyAndReturnArgs} args - Arguments to create many Farms.
     * @example
     * // Create many Farms
     * const farms = await prisma.farms.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Farms and only return the `id`
     * const farmsWithIdOnly = await prisma.farms.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends farmsCreateManyAndReturnArgs>(args?: SelectSubset<T, farmsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Farms.
     * @param {farmsDeleteArgs} args - Arguments to delete one Farms.
     * @example
     * // Delete one Farms
     * const Farms = await prisma.farms.delete({
     *   where: {
     *     // ... filter to delete one Farms
     *   }
     * })
     * 
     */
    delete<T extends farmsDeleteArgs>(args: SelectSubset<T, farmsDeleteArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Farms.
     * @param {farmsUpdateArgs} args - Arguments to update one Farms.
     * @example
     * // Update one Farms
     * const farms = await prisma.farms.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends farmsUpdateArgs>(args: SelectSubset<T, farmsUpdateArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Farms.
     * @param {farmsDeleteManyArgs} args - Arguments to filter Farms to delete.
     * @example
     * // Delete a few Farms
     * const { count } = await prisma.farms.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends farmsDeleteManyArgs>(args?: SelectSubset<T, farmsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Farms
     * const farms = await prisma.farms.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends farmsUpdateManyArgs>(args: SelectSubset<T, farmsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Farms and returns the data updated in the database.
     * @param {farmsUpdateManyAndReturnArgs} args - Arguments to update many Farms.
     * @example
     * // Update many Farms
     * const farms = await prisma.farms.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Farms and only return the `id`
     * const farmsWithIdOnly = await prisma.farms.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends farmsUpdateManyAndReturnArgs>(args: SelectSubset<T, farmsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Farms.
     * @param {farmsUpsertArgs} args - Arguments to update or create a Farms.
     * @example
     * // Update or create a Farms
     * const farms = await prisma.farms.upsert({
     *   create: {
     *     // ... data to create a Farms
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Farms we want to update
     *   }
     * })
     */
    upsert<T extends farmsUpsertArgs>(args: SelectSubset<T, farmsUpsertArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Farms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmsCountArgs} args - Arguments to filter Farms to count.
     * @example
     * // Count the number of Farms
     * const count = await prisma.farms.count({
     *   where: {
     *     // ... the filter for the Farms we want to count
     *   }
     * })
    **/
    count<T extends farmsCountArgs>(
      args?: Subset<T, farmsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FarmsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Farms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FarmsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FarmsAggregateArgs>(args: Subset<T, FarmsAggregateArgs>): Prisma.PrismaPromise<GetFarmsAggregateType<T>>

    /**
     * Group by Farms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {farmsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends farmsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: farmsGroupByArgs['orderBy'] }
        : { orderBy?: farmsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, farmsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFarmsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the farms model
   */
  readonly fields: farmsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for farms.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__farmsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattles<T extends farms$cattlesArgs<ExtArgs> = {}>(args?: Subset<T, farms$cattlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    farm_attachments<T extends farms$farm_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, farms$farm_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    farm_authorized<T extends farms$farm_authorizedArgs<ExtArgs> = {}>(args?: Subset<T, farms$farm_authorizedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_authorizedPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    farm_veterinary<T extends farms$farm_veterinaryArgs<ExtArgs> = {}>(args?: Subset<T, farms$farm_veterinaryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$farm_veterinaryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pens<T extends farms$pensArgs<ExtArgs> = {}>(args?: Subset<T, farms$pensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the farms model
   */
  interface farmsFieldRefs {
    readonly id: FieldRef<"farms", 'String'>
    readonly tracer_id: FieldRef<"farms", 'String'>
    readonly farm_identification: FieldRef<"farms", 'String'>
    readonly farm_type: FieldRef<"farms", 'String'>
    readonly max_cows: FieldRef<"farms", 'Int'>
    readonly name: FieldRef<"farms", 'String'>
    readonly standard: FieldRef<"farms", 'String'>
    readonly status: FieldRef<"farms", 'String'>
    readonly rai: FieldRef<"farms", 'Decimal'>
    readonly ngan: FieldRef<"farms", 'Decimal'>
    readonly wa: FieldRef<"farms", 'Decimal'>
    readonly address_line1: FieldRef<"farms", 'String'>
    readonly address_subdistrict: FieldRef<"farms", 'String'>
    readonly address_district: FieldRef<"farms", 'String'>
    readonly address_province: FieldRef<"farms", 'String'>
    readonly address_zipcode: FieldRef<"farms", 'String'>
    readonly is_owner_ref_farmer: FieldRef<"farms", 'Boolean'>
    readonly farmer_id: FieldRef<"farms", 'String'>
    readonly owner_type: FieldRef<"farms", 'String'>
    readonly owner_tin: FieldRef<"farms", 'String'>
    readonly owner_masking_tin: FieldRef<"farms", 'String'>
    readonly owner_title: FieldRef<"farms", 'String'>
    readonly owner_first_name: FieldRef<"farms", 'String'>
    readonly owner_middle_name: FieldRef<"farms", 'String'>
    readonly owner_last_name: FieldRef<"farms", 'String'>
    readonly owner_company_name: FieldRef<"farms", 'String'>
    readonly owner_gender: FieldRef<"farms", 'String'>
    readonly owner_birthdate: FieldRef<"farms", 'String'>
    readonly owner_education_degree: FieldRef<"farms", 'String'>
    readonly owner_occupation: FieldRef<"farms", 'String'>
    readonly owner_second_occupation: FieldRef<"farms", 'String'>
    readonly owner_phone_number: FieldRef<"farms", 'String'>
    readonly owner_mobile_number: FieldRef<"farms", 'String'>
    readonly owner_email: FieldRef<"farms", 'String'>
    readonly owner_line_id: FieldRef<"farms", 'String'>
    readonly owner_address_line1: FieldRef<"farms", 'String'>
    readonly owner_address_subdistrict: FieldRef<"farms", 'String'>
    readonly owner_address_district: FieldRef<"farms", 'String'>
    readonly owner_address_province: FieldRef<"farms", 'String'>
    readonly owner_address_zipcode: FieldRef<"farms", 'String'>
    readonly owner_contact_address_line1: FieldRef<"farms", 'String'>
    readonly owner_contact_address_subdistrict: FieldRef<"farms", 'String'>
    readonly owner_contact_address_district: FieldRef<"farms", 'String'>
    readonly owner_contact_address_province: FieldRef<"farms", 'String'>
    readonly owner_contact_address_zipcode: FieldRef<"farms", 'String'>
    readonly created_at: FieldRef<"farms", 'DateTime'>
    readonly created_by_id: FieldRef<"farms", 'String'>
    readonly created_by: FieldRef<"farms", 'String'>
    readonly updated_at: FieldRef<"farms", 'DateTime'>
    readonly updated_by_id: FieldRef<"farms", 'String'>
    readonly updated_by: FieldRef<"farms", 'String'>
    readonly ref_1: FieldRef<"farms", 'String'>
  }
    

  // Custom InputTypes
  /**
   * farms findUnique
   */
  export type farmsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * Filter, which farms to fetch.
     */
    where: farmsWhereUniqueInput
  }

  /**
   * farms findUniqueOrThrow
   */
  export type farmsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * Filter, which farms to fetch.
     */
    where: farmsWhereUniqueInput
  }

  /**
   * farms findFirst
   */
  export type farmsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * Filter, which farms to fetch.
     */
    where?: farmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farms to fetch.
     */
    orderBy?: farmsOrderByWithRelationInput | farmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farms.
     */
    cursor?: farmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farms.
     */
    distinct?: FarmsScalarFieldEnum | FarmsScalarFieldEnum[]
  }

  /**
   * farms findFirstOrThrow
   */
  export type farmsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * Filter, which farms to fetch.
     */
    where?: farmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farms to fetch.
     */
    orderBy?: farmsOrderByWithRelationInput | farmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for farms.
     */
    cursor?: farmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of farms.
     */
    distinct?: FarmsScalarFieldEnum | FarmsScalarFieldEnum[]
  }

  /**
   * farms findMany
   */
  export type farmsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * Filter, which farms to fetch.
     */
    where?: farmsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of farms to fetch.
     */
    orderBy?: farmsOrderByWithRelationInput | farmsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing farms.
     */
    cursor?: farmsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` farms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` farms.
     */
    skip?: number
    distinct?: FarmsScalarFieldEnum | FarmsScalarFieldEnum[]
  }

  /**
   * farms create
   */
  export type farmsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * The data needed to create a farms.
     */
    data: XOR<farmsCreateInput, farmsUncheckedCreateInput>
  }

  /**
   * farms createMany
   */
  export type farmsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many farms.
     */
    data: farmsCreateManyInput | farmsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farms createManyAndReturn
   */
  export type farmsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * The data used to create many farms.
     */
    data: farmsCreateManyInput | farmsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * farms update
   */
  export type farmsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * The data needed to update a farms.
     */
    data: XOR<farmsUpdateInput, farmsUncheckedUpdateInput>
    /**
     * Choose, which farms to update.
     */
    where: farmsWhereUniqueInput
  }

  /**
   * farms updateMany
   */
  export type farmsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update farms.
     */
    data: XOR<farmsUpdateManyMutationInput, farmsUncheckedUpdateManyInput>
    /**
     * Filter which farms to update
     */
    where?: farmsWhereInput
    /**
     * Limit how many farms to update.
     */
    limit?: number
  }

  /**
   * farms updateManyAndReturn
   */
  export type farmsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * The data used to update farms.
     */
    data: XOR<farmsUpdateManyMutationInput, farmsUncheckedUpdateManyInput>
    /**
     * Filter which farms to update
     */
    where?: farmsWhereInput
    /**
     * Limit how many farms to update.
     */
    limit?: number
  }

  /**
   * farms upsert
   */
  export type farmsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * The filter to search for the farms to update in case it exists.
     */
    where: farmsWhereUniqueInput
    /**
     * In case the farms found by the `where` argument doesn't exist, create a new farms with this data.
     */
    create: XOR<farmsCreateInput, farmsUncheckedCreateInput>
    /**
     * In case the farms was found with the provided `where` argument, update it with this data.
     */
    update: XOR<farmsUpdateInput, farmsUncheckedUpdateInput>
  }

  /**
   * farms delete
   */
  export type farmsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
    /**
     * Filter which farms to delete.
     */
    where: farmsWhereUniqueInput
  }

  /**
   * farms deleteMany
   */
  export type farmsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which farms to delete
     */
    where?: farmsWhereInput
    /**
     * Limit how many farms to delete.
     */
    limit?: number
  }

  /**
   * farms.cattles
   */
  export type farms$cattlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    where?: cattlesWhereInput
    orderBy?: cattlesOrderByWithRelationInput | cattlesOrderByWithRelationInput[]
    cursor?: cattlesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CattlesScalarFieldEnum | CattlesScalarFieldEnum[]
  }

  /**
   * farms.farm_attachments
   */
  export type farms$farm_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_attachments
     */
    select?: farm_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_attachments
     */
    omit?: farm_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_attachmentsInclude<ExtArgs> | null
    where?: farm_attachmentsWhereInput
    orderBy?: farm_attachmentsOrderByWithRelationInput | farm_attachmentsOrderByWithRelationInput[]
    cursor?: farm_attachmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Farm_attachmentsScalarFieldEnum | Farm_attachmentsScalarFieldEnum[]
  }

  /**
   * farms.farm_authorized
   */
  export type farms$farm_authorizedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_authorized
     */
    select?: farm_authorizedSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_authorized
     */
    omit?: farm_authorizedOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_authorizedInclude<ExtArgs> | null
    where?: farm_authorizedWhereInput
    orderBy?: farm_authorizedOrderByWithRelationInput | farm_authorizedOrderByWithRelationInput[]
    cursor?: farm_authorizedWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Farm_authorizedScalarFieldEnum | Farm_authorizedScalarFieldEnum[]
  }

  /**
   * farms.farm_veterinary
   */
  export type farms$farm_veterinaryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farm_veterinary
     */
    select?: farm_veterinarySelect<ExtArgs> | null
    /**
     * Omit specific fields from the farm_veterinary
     */
    omit?: farm_veterinaryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farm_veterinaryInclude<ExtArgs> | null
    where?: farm_veterinaryWhereInput
    orderBy?: farm_veterinaryOrderByWithRelationInput | farm_veterinaryOrderByWithRelationInput[]
    cursor?: farm_veterinaryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Farm_veterinaryScalarFieldEnum | Farm_veterinaryScalarFieldEnum[]
  }

  /**
   * farms.pens
   */
  export type farms$pensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    where?: pensWhereInput
    orderBy?: pensOrderByWithRelationInput | pensOrderByWithRelationInput[]
    cursor?: pensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PensScalarFieldEnum | PensScalarFieldEnum[]
  }

  /**
   * farms without action
   */
  export type farmsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the farms
     */
    select?: farmsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the farms
     */
    omit?: farmsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: farmsInclude<ExtArgs> | null
  }


  /**
   * Model order_attachments
   */

  export type AggregateOrder_attachments = {
    _count: Order_attachmentsCountAggregateOutputType | null
    _min: Order_attachmentsMinAggregateOutputType | null
    _max: Order_attachmentsMaxAggregateOutputType | null
  }

  export type Order_attachmentsMinAggregateOutputType = {
    id: string | null
    order_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Order_attachmentsMaxAggregateOutputType = {
    id: string | null
    order_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Order_attachmentsCountAggregateOutputType = {
    id: number
    order_id: number
    file_name: number
    file_path: number
    is_public: number
    content_type: number
    description: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Order_attachmentsMinAggregateInputType = {
    id?: true
    order_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Order_attachmentsMaxAggregateInputType = {
    id?: true
    order_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Order_attachmentsCountAggregateInputType = {
    id?: true
    order_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Order_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_attachments to aggregate.
     */
    where?: order_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_attachments to fetch.
     */
    orderBy?: order_attachmentsOrderByWithRelationInput | order_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_attachments
    **/
    _count?: true | Order_attachmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_attachmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_attachmentsMaxAggregateInputType
  }

  export type GetOrder_attachmentsAggregateType<T extends Order_attachmentsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_attachments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_attachments[P]>
      : GetScalarType<T[P], AggregateOrder_attachments[P]>
  }




  export type order_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_attachmentsWhereInput
    orderBy?: order_attachmentsOrderByWithAggregationInput | order_attachmentsOrderByWithAggregationInput[]
    by: Order_attachmentsScalarFieldEnum[] | Order_attachmentsScalarFieldEnum
    having?: order_attachmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_attachmentsCountAggregateInputType | true
    _min?: Order_attachmentsMinAggregateInputType
    _max?: Order_attachmentsMaxAggregateInputType
  }

  export type Order_attachmentsGroupByOutputType = {
    id: string
    order_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Order_attachmentsCountAggregateOutputType | null
    _min: Order_attachmentsMinAggregateOutputType | null
    _max: Order_attachmentsMaxAggregateOutputType | null
  }

  type GetOrder_attachmentsGroupByPayload<T extends order_attachmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_attachmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_attachmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_attachmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Order_attachmentsGroupByOutputType[P]>
        }
      >
    >


  export type order_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_attachments"]>

  export type order_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_attachments"]>

  export type order_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_attachments"]>

  export type order_attachmentsSelectScalar = {
    id?: boolean
    order_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type order_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "file_name" | "file_path" | "is_public" | "content_type" | "description" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["order_attachments"]>
  export type order_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }
  export type order_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }
  export type order_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }

  export type $order_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_attachments"
    objects: {
      orders: Prisma.$ordersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order_id: string
      file_name: string
      file_path: string
      is_public: boolean
      content_type: string
      description: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["order_attachments"]>
    composites: {}
  }

  type order_attachmentsGetPayload<S extends boolean | null | undefined | order_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$order_attachmentsPayload, S>

  type order_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_attachmentsCountAggregateInputType | true
    }

  export interface order_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_attachments'], meta: { name: 'order_attachments' } }
    /**
     * Find zero or one Order_attachments that matches the filter.
     * @param {order_attachmentsFindUniqueArgs} args - Arguments to find a Order_attachments
     * @example
     * // Get one Order_attachments
     * const order_attachments = await prisma.order_attachments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_attachmentsFindUniqueArgs>(args: SelectSubset<T, order_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_attachments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Order_attachments
     * @example
     * // Get one Order_attachments
     * const order_attachments = await prisma.order_attachments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, order_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_attachmentsFindFirstArgs} args - Arguments to find a Order_attachments
     * @example
     * // Get one Order_attachments
     * const order_attachments = await prisma.order_attachments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_attachmentsFindFirstArgs>(args?: SelectSubset<T, order_attachmentsFindFirstArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_attachments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Order_attachments
     * @example
     * // Get one Order_attachments
     * const order_attachments = await prisma.order_attachments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, order_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_attachments
     * const order_attachments = await prisma.order_attachments.findMany()
     * 
     * // Get first 10 Order_attachments
     * const order_attachments = await prisma.order_attachments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_attachmentsWithIdOnly = await prisma.order_attachments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_attachmentsFindManyArgs>(args?: SelectSubset<T, order_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_attachments.
     * @param {order_attachmentsCreateArgs} args - Arguments to create a Order_attachments.
     * @example
     * // Create one Order_attachments
     * const Order_attachments = await prisma.order_attachments.create({
     *   data: {
     *     // ... data to create a Order_attachments
     *   }
     * })
     * 
     */
    create<T extends order_attachmentsCreateArgs>(args: SelectSubset<T, order_attachmentsCreateArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_attachments.
     * @param {order_attachmentsCreateManyArgs} args - Arguments to create many Order_attachments.
     * @example
     * // Create many Order_attachments
     * const order_attachments = await prisma.order_attachments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_attachmentsCreateManyArgs>(args?: SelectSubset<T, order_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_attachments and returns the data saved in the database.
     * @param {order_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Order_attachments.
     * @example
     * // Create many Order_attachments
     * const order_attachments = await prisma.order_attachments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_attachments and only return the `id`
     * const order_attachmentsWithIdOnly = await prisma.order_attachments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, order_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_attachments.
     * @param {order_attachmentsDeleteArgs} args - Arguments to delete one Order_attachments.
     * @example
     * // Delete one Order_attachments
     * const Order_attachments = await prisma.order_attachments.delete({
     *   where: {
     *     // ... filter to delete one Order_attachments
     *   }
     * })
     * 
     */
    delete<T extends order_attachmentsDeleteArgs>(args: SelectSubset<T, order_attachmentsDeleteArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_attachments.
     * @param {order_attachmentsUpdateArgs} args - Arguments to update one Order_attachments.
     * @example
     * // Update one Order_attachments
     * const order_attachments = await prisma.order_attachments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_attachmentsUpdateArgs>(args: SelectSubset<T, order_attachmentsUpdateArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_attachments.
     * @param {order_attachmentsDeleteManyArgs} args - Arguments to filter Order_attachments to delete.
     * @example
     * // Delete a few Order_attachments
     * const { count } = await prisma.order_attachments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_attachmentsDeleteManyArgs>(args?: SelectSubset<T, order_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_attachments
     * const order_attachments = await prisma.order_attachments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_attachmentsUpdateManyArgs>(args: SelectSubset<T, order_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_attachments and returns the data updated in the database.
     * @param {order_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Order_attachments.
     * @example
     * // Update many Order_attachments
     * const order_attachments = await prisma.order_attachments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_attachments and only return the `id`
     * const order_attachmentsWithIdOnly = await prisma.order_attachments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, order_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_attachments.
     * @param {order_attachmentsUpsertArgs} args - Arguments to update or create a Order_attachments.
     * @example
     * // Update or create a Order_attachments
     * const order_attachments = await prisma.order_attachments.upsert({
     *   create: {
     *     // ... data to create a Order_attachments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_attachments we want to update
     *   }
     * })
     */
    upsert<T extends order_attachmentsUpsertArgs>(args: SelectSubset<T, order_attachmentsUpsertArgs<ExtArgs>>): Prisma__order_attachmentsClient<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_attachmentsCountArgs} args - Arguments to filter Order_attachments to count.
     * @example
     * // Count the number of Order_attachments
     * const count = await prisma.order_attachments.count({
     *   where: {
     *     // ... the filter for the Order_attachments we want to count
     *   }
     * })
    **/
    count<T extends order_attachmentsCountArgs>(
      args?: Subset<T, order_attachmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_attachmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_attachmentsAggregateArgs>(args: Subset<T, Order_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetOrder_attachmentsAggregateType<T>>

    /**
     * Group by Order_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_attachmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_attachmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_attachmentsGroupByArgs['orderBy'] }
        : { orderBy?: order_attachmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_attachments model
   */
  readonly fields: order_attachmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_attachments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_attachments model
   */
  interface order_attachmentsFieldRefs {
    readonly id: FieldRef<"order_attachments", 'String'>
    readonly order_id: FieldRef<"order_attachments", 'String'>
    readonly file_name: FieldRef<"order_attachments", 'String'>
    readonly file_path: FieldRef<"order_attachments", 'String'>
    readonly is_public: FieldRef<"order_attachments", 'Boolean'>
    readonly content_type: FieldRef<"order_attachments", 'String'>
    readonly description: FieldRef<"order_attachments", 'String'>
    readonly created_at: FieldRef<"order_attachments", 'DateTime'>
    readonly created_by_id: FieldRef<"order_attachments", 'String'>
    readonly created_by: FieldRef<"order_attachments", 'String'>
    readonly updated_at: FieldRef<"order_attachments", 'DateTime'>
    readonly updated_by_id: FieldRef<"order_attachments", 'String'>
    readonly updated_by: FieldRef<"order_attachments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * order_attachments findUnique
   */
  export type order_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which order_attachments to fetch.
     */
    where: order_attachmentsWhereUniqueInput
  }

  /**
   * order_attachments findUniqueOrThrow
   */
  export type order_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which order_attachments to fetch.
     */
    where: order_attachmentsWhereUniqueInput
  }

  /**
   * order_attachments findFirst
   */
  export type order_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which order_attachments to fetch.
     */
    where?: order_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_attachments to fetch.
     */
    orderBy?: order_attachmentsOrderByWithRelationInput | order_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_attachments.
     */
    cursor?: order_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_attachments.
     */
    distinct?: Order_attachmentsScalarFieldEnum | Order_attachmentsScalarFieldEnum[]
  }

  /**
   * order_attachments findFirstOrThrow
   */
  export type order_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which order_attachments to fetch.
     */
    where?: order_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_attachments to fetch.
     */
    orderBy?: order_attachmentsOrderByWithRelationInput | order_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_attachments.
     */
    cursor?: order_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_attachments.
     */
    distinct?: Order_attachmentsScalarFieldEnum | Order_attachmentsScalarFieldEnum[]
  }

  /**
   * order_attachments findMany
   */
  export type order_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which order_attachments to fetch.
     */
    where?: order_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_attachments to fetch.
     */
    orderBy?: order_attachmentsOrderByWithRelationInput | order_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_attachments.
     */
    cursor?: order_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_attachments.
     */
    skip?: number
    distinct?: Order_attachmentsScalarFieldEnum | Order_attachmentsScalarFieldEnum[]
  }

  /**
   * order_attachments create
   */
  export type order_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a order_attachments.
     */
    data: XOR<order_attachmentsCreateInput, order_attachmentsUncheckedCreateInput>
  }

  /**
   * order_attachments createMany
   */
  export type order_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_attachments.
     */
    data: order_attachmentsCreateManyInput | order_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_attachments createManyAndReturn
   */
  export type order_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to create many order_attachments.
     */
    data: order_attachmentsCreateManyInput | order_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_attachments update
   */
  export type order_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a order_attachments.
     */
    data: XOR<order_attachmentsUpdateInput, order_attachmentsUncheckedUpdateInput>
    /**
     * Choose, which order_attachments to update.
     */
    where: order_attachmentsWhereUniqueInput
  }

  /**
   * order_attachments updateMany
   */
  export type order_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_attachments.
     */
    data: XOR<order_attachmentsUpdateManyMutationInput, order_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which order_attachments to update
     */
    where?: order_attachmentsWhereInput
    /**
     * Limit how many order_attachments to update.
     */
    limit?: number
  }

  /**
   * order_attachments updateManyAndReturn
   */
  export type order_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to update order_attachments.
     */
    data: XOR<order_attachmentsUpdateManyMutationInput, order_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which order_attachments to update
     */
    where?: order_attachmentsWhereInput
    /**
     * Limit how many order_attachments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_attachments upsert
   */
  export type order_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the order_attachments to update in case it exists.
     */
    where: order_attachmentsWhereUniqueInput
    /**
     * In case the order_attachments found by the `where` argument doesn't exist, create a new order_attachments with this data.
     */
    create: XOR<order_attachmentsCreateInput, order_attachmentsUncheckedCreateInput>
    /**
     * In case the order_attachments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_attachmentsUpdateInput, order_attachmentsUncheckedUpdateInput>
  }

  /**
   * order_attachments delete
   */
  export type order_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    /**
     * Filter which order_attachments to delete.
     */
    where: order_attachmentsWhereUniqueInput
  }

  /**
   * order_attachments deleteMany
   */
  export type order_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_attachments to delete
     */
    where?: order_attachmentsWhereInput
    /**
     * Limit how many order_attachments to delete.
     */
    limit?: number
  }

  /**
   * order_attachments without action
   */
  export type order_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
  }


  /**
   * Model order_requests
   */

  export type AggregateOrder_requests = {
    _count: Order_requestsCountAggregateOutputType | null
    _avg: Order_requestsAvgAggregateOutputType | null
    _sum: Order_requestsSumAggregateOutputType | null
    _min: Order_requestsMinAggregateOutputType | null
    _max: Order_requestsMaxAggregateOutputType | null
  }

  export type Order_requestsAvgAggregateOutputType = {
    request_amount: number | null
    received_amount: number | null
    from_age: number | null
    to_age: number | null
    from_weight: Decimal | null
    to_weight: Decimal | null
  }

  export type Order_requestsSumAggregateOutputType = {
    request_amount: number | null
    received_amount: number | null
    from_age: number | null
    to_age: number | null
    from_weight: Decimal | null
    to_weight: Decimal | null
  }

  export type Order_requestsMinAggregateOutputType = {
    id: string | null
    order_id: string | null
    cattle_breed_id: string | null
    request_amount: number | null
    received_amount: number | null
    from_age: number | null
    to_age: number | null
    from_weight: Decimal | null
    to_weight: Decimal | null
    castration_status: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    gender: string | null
    pregnant_status: string | null
  }

  export type Order_requestsMaxAggregateOutputType = {
    id: string | null
    order_id: string | null
    cattle_breed_id: string | null
    request_amount: number | null
    received_amount: number | null
    from_age: number | null
    to_age: number | null
    from_weight: Decimal | null
    to_weight: Decimal | null
    castration_status: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
    gender: string | null
    pregnant_status: string | null
  }

  export type Order_requestsCountAggregateOutputType = {
    id: number
    order_id: number
    cattle_breed_id: number
    cattle_type_ids: number
    request_amount: number
    received_amount: number
    from_age: number
    to_age: number
    from_weight: number
    to_weight: number
    castration_status: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    gender: number
    pregnant_status: number
    _all: number
  }


  export type Order_requestsAvgAggregateInputType = {
    request_amount?: true
    received_amount?: true
    from_age?: true
    to_age?: true
    from_weight?: true
    to_weight?: true
  }

  export type Order_requestsSumAggregateInputType = {
    request_amount?: true
    received_amount?: true
    from_age?: true
    to_age?: true
    from_weight?: true
    to_weight?: true
  }

  export type Order_requestsMinAggregateInputType = {
    id?: true
    order_id?: true
    cattle_breed_id?: true
    request_amount?: true
    received_amount?: true
    from_age?: true
    to_age?: true
    from_weight?: true
    to_weight?: true
    castration_status?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    gender?: true
    pregnant_status?: true
  }

  export type Order_requestsMaxAggregateInputType = {
    id?: true
    order_id?: true
    cattle_breed_id?: true
    request_amount?: true
    received_amount?: true
    from_age?: true
    to_age?: true
    from_weight?: true
    to_weight?: true
    castration_status?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    gender?: true
    pregnant_status?: true
  }

  export type Order_requestsCountAggregateInputType = {
    id?: true
    order_id?: true
    cattle_breed_id?: true
    cattle_type_ids?: true
    request_amount?: true
    received_amount?: true
    from_age?: true
    to_age?: true
    from_weight?: true
    to_weight?: true
    castration_status?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    gender?: true
    pregnant_status?: true
    _all?: true
  }

  export type Order_requestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_requests to aggregate.
     */
    where?: order_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_requests to fetch.
     */
    orderBy?: order_requestsOrderByWithRelationInput | order_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_requests
    **/
    _count?: true | Order_requestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Order_requestsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Order_requestsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_requestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_requestsMaxAggregateInputType
  }

  export type GetOrder_requestsAggregateType<T extends Order_requestsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_requests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_requests[P]>
      : GetScalarType<T[P], AggregateOrder_requests[P]>
  }




  export type order_requestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_requestsWhereInput
    orderBy?: order_requestsOrderByWithAggregationInput | order_requestsOrderByWithAggregationInput[]
    by: Order_requestsScalarFieldEnum[] | Order_requestsScalarFieldEnum
    having?: order_requestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_requestsCountAggregateInputType | true
    _avg?: Order_requestsAvgAggregateInputType
    _sum?: Order_requestsSumAggregateInputType
    _min?: Order_requestsMinAggregateInputType
    _max?: Order_requestsMaxAggregateInputType
  }

  export type Order_requestsGroupByOutputType = {
    id: string
    order_id: string
    cattle_breed_id: string
    cattle_type_ids: string[]
    request_amount: number
    received_amount: number | null
    from_age: number
    to_age: number
    from_weight: Decimal
    to_weight: Decimal
    castration_status: string
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    gender: string | null
    pregnant_status: string | null
    _count: Order_requestsCountAggregateOutputType | null
    _avg: Order_requestsAvgAggregateOutputType | null
    _sum: Order_requestsSumAggregateOutputType | null
    _min: Order_requestsMinAggregateOutputType | null
    _max: Order_requestsMaxAggregateOutputType | null
  }

  type GetOrder_requestsGroupByPayload<T extends order_requestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_requestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_requestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_requestsGroupByOutputType[P]>
            : GetScalarType<T[P], Order_requestsGroupByOutputType[P]>
        }
      >
    >


  export type order_requestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    cattle_breed_id?: boolean
    cattle_type_ids?: boolean
    request_amount?: boolean
    received_amount?: boolean
    from_age?: boolean
    to_age?: boolean
    from_weight?: boolean
    to_weight?: boolean
    castration_status?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    gender?: boolean
    pregnant_status?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_requests"]>

  export type order_requestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    cattle_breed_id?: boolean
    cattle_type_ids?: boolean
    request_amount?: boolean
    received_amount?: boolean
    from_age?: boolean
    to_age?: boolean
    from_weight?: boolean
    to_weight?: boolean
    castration_status?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    gender?: boolean
    pregnant_status?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_requests"]>

  export type order_requestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    cattle_breed_id?: boolean
    cattle_type_ids?: boolean
    request_amount?: boolean
    received_amount?: boolean
    from_age?: boolean
    to_age?: boolean
    from_weight?: boolean
    to_weight?: boolean
    castration_status?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    gender?: boolean
    pregnant_status?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_requests"]>

  export type order_requestsSelectScalar = {
    id?: boolean
    order_id?: boolean
    cattle_breed_id?: boolean
    cattle_type_ids?: boolean
    request_amount?: boolean
    received_amount?: boolean
    from_age?: boolean
    to_age?: boolean
    from_weight?: boolean
    to_weight?: boolean
    castration_status?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    gender?: boolean
    pregnant_status?: boolean
  }

  export type order_requestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "cattle_breed_id" | "cattle_type_ids" | "request_amount" | "received_amount" | "from_age" | "to_age" | "from_weight" | "to_weight" | "castration_status" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by" | "gender" | "pregnant_status", ExtArgs["result"]["order_requests"]>
  export type order_requestsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }
  export type order_requestsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }
  export type order_requestsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
  }

  export type $order_requestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_requests"
    objects: {
      orders: Prisma.$ordersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      order_id: string
      cattle_breed_id: string
      cattle_type_ids: string[]
      request_amount: number
      received_amount: number | null
      from_age: number
      to_age: number
      from_weight: Prisma.Decimal
      to_weight: Prisma.Decimal
      castration_status: string
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
      gender: string | null
      pregnant_status: string | null
    }, ExtArgs["result"]["order_requests"]>
    composites: {}
  }

  type order_requestsGetPayload<S extends boolean | null | undefined | order_requestsDefaultArgs> = $Result.GetResult<Prisma.$order_requestsPayload, S>

  type order_requestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_requestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_requestsCountAggregateInputType | true
    }

  export interface order_requestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_requests'], meta: { name: 'order_requests' } }
    /**
     * Find zero or one Order_requests that matches the filter.
     * @param {order_requestsFindUniqueArgs} args - Arguments to find a Order_requests
     * @example
     * // Get one Order_requests
     * const order_requests = await prisma.order_requests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_requestsFindUniqueArgs>(args: SelectSubset<T, order_requestsFindUniqueArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_requests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_requestsFindUniqueOrThrowArgs} args - Arguments to find a Order_requests
     * @example
     * // Get one Order_requests
     * const order_requests = await prisma.order_requests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_requestsFindUniqueOrThrowArgs>(args: SelectSubset<T, order_requestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_requestsFindFirstArgs} args - Arguments to find a Order_requests
     * @example
     * // Get one Order_requests
     * const order_requests = await prisma.order_requests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_requestsFindFirstArgs>(args?: SelectSubset<T, order_requestsFindFirstArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_requests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_requestsFindFirstOrThrowArgs} args - Arguments to find a Order_requests
     * @example
     * // Get one Order_requests
     * const order_requests = await prisma.order_requests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_requestsFindFirstOrThrowArgs>(args?: SelectSubset<T, order_requestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_requestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_requests
     * const order_requests = await prisma.order_requests.findMany()
     * 
     * // Get first 10 Order_requests
     * const order_requests = await prisma.order_requests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_requestsWithIdOnly = await prisma.order_requests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_requestsFindManyArgs>(args?: SelectSubset<T, order_requestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_requests.
     * @param {order_requestsCreateArgs} args - Arguments to create a Order_requests.
     * @example
     * // Create one Order_requests
     * const Order_requests = await prisma.order_requests.create({
     *   data: {
     *     // ... data to create a Order_requests
     *   }
     * })
     * 
     */
    create<T extends order_requestsCreateArgs>(args: SelectSubset<T, order_requestsCreateArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_requests.
     * @param {order_requestsCreateManyArgs} args - Arguments to create many Order_requests.
     * @example
     * // Create many Order_requests
     * const order_requests = await prisma.order_requests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_requestsCreateManyArgs>(args?: SelectSubset<T, order_requestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_requests and returns the data saved in the database.
     * @param {order_requestsCreateManyAndReturnArgs} args - Arguments to create many Order_requests.
     * @example
     * // Create many Order_requests
     * const order_requests = await prisma.order_requests.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_requests and only return the `id`
     * const order_requestsWithIdOnly = await prisma.order_requests.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_requestsCreateManyAndReturnArgs>(args?: SelectSubset<T, order_requestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_requests.
     * @param {order_requestsDeleteArgs} args - Arguments to delete one Order_requests.
     * @example
     * // Delete one Order_requests
     * const Order_requests = await prisma.order_requests.delete({
     *   where: {
     *     // ... filter to delete one Order_requests
     *   }
     * })
     * 
     */
    delete<T extends order_requestsDeleteArgs>(args: SelectSubset<T, order_requestsDeleteArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_requests.
     * @param {order_requestsUpdateArgs} args - Arguments to update one Order_requests.
     * @example
     * // Update one Order_requests
     * const order_requests = await prisma.order_requests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_requestsUpdateArgs>(args: SelectSubset<T, order_requestsUpdateArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_requests.
     * @param {order_requestsDeleteManyArgs} args - Arguments to filter Order_requests to delete.
     * @example
     * // Delete a few Order_requests
     * const { count } = await prisma.order_requests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_requestsDeleteManyArgs>(args?: SelectSubset<T, order_requestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_requestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_requests
     * const order_requests = await prisma.order_requests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_requestsUpdateManyArgs>(args: SelectSubset<T, order_requestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_requests and returns the data updated in the database.
     * @param {order_requestsUpdateManyAndReturnArgs} args - Arguments to update many Order_requests.
     * @example
     * // Update many Order_requests
     * const order_requests = await prisma.order_requests.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_requests and only return the `id`
     * const order_requestsWithIdOnly = await prisma.order_requests.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_requestsUpdateManyAndReturnArgs>(args: SelectSubset<T, order_requestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_requests.
     * @param {order_requestsUpsertArgs} args - Arguments to update or create a Order_requests.
     * @example
     * // Update or create a Order_requests
     * const order_requests = await prisma.order_requests.upsert({
     *   create: {
     *     // ... data to create a Order_requests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_requests we want to update
     *   }
     * })
     */
    upsert<T extends order_requestsUpsertArgs>(args: SelectSubset<T, order_requestsUpsertArgs<ExtArgs>>): Prisma__order_requestsClient<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_requestsCountArgs} args - Arguments to filter Order_requests to count.
     * @example
     * // Count the number of Order_requests
     * const count = await prisma.order_requests.count({
     *   where: {
     *     // ... the filter for the Order_requests we want to count
     *   }
     * })
    **/
    count<T extends order_requestsCountArgs>(
      args?: Subset<T, order_requestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_requestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_requestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_requestsAggregateArgs>(args: Subset<T, Order_requestsAggregateArgs>): Prisma.PrismaPromise<GetOrder_requestsAggregateType<T>>

    /**
     * Group by Order_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_requestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_requestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_requestsGroupByArgs['orderBy'] }
        : { orderBy?: order_requestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_requestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_requestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_requests model
   */
  readonly fields: order_requestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_requests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_requestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_requests model
   */
  interface order_requestsFieldRefs {
    readonly id: FieldRef<"order_requests", 'String'>
    readonly order_id: FieldRef<"order_requests", 'String'>
    readonly cattle_breed_id: FieldRef<"order_requests", 'String'>
    readonly cattle_type_ids: FieldRef<"order_requests", 'String[]'>
    readonly request_amount: FieldRef<"order_requests", 'Int'>
    readonly received_amount: FieldRef<"order_requests", 'Int'>
    readonly from_age: FieldRef<"order_requests", 'Int'>
    readonly to_age: FieldRef<"order_requests", 'Int'>
    readonly from_weight: FieldRef<"order_requests", 'Decimal'>
    readonly to_weight: FieldRef<"order_requests", 'Decimal'>
    readonly castration_status: FieldRef<"order_requests", 'String'>
    readonly status: FieldRef<"order_requests", 'String'>
    readonly created_at: FieldRef<"order_requests", 'DateTime'>
    readonly created_by_id: FieldRef<"order_requests", 'String'>
    readonly created_by: FieldRef<"order_requests", 'String'>
    readonly updated_at: FieldRef<"order_requests", 'DateTime'>
    readonly updated_by_id: FieldRef<"order_requests", 'String'>
    readonly updated_by: FieldRef<"order_requests", 'String'>
    readonly gender: FieldRef<"order_requests", 'String'>
    readonly pregnant_status: FieldRef<"order_requests", 'String'>
  }
    

  // Custom InputTypes
  /**
   * order_requests findUnique
   */
  export type order_requestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * Filter, which order_requests to fetch.
     */
    where: order_requestsWhereUniqueInput
  }

  /**
   * order_requests findUniqueOrThrow
   */
  export type order_requestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * Filter, which order_requests to fetch.
     */
    where: order_requestsWhereUniqueInput
  }

  /**
   * order_requests findFirst
   */
  export type order_requestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * Filter, which order_requests to fetch.
     */
    where?: order_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_requests to fetch.
     */
    orderBy?: order_requestsOrderByWithRelationInput | order_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_requests.
     */
    cursor?: order_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_requests.
     */
    distinct?: Order_requestsScalarFieldEnum | Order_requestsScalarFieldEnum[]
  }

  /**
   * order_requests findFirstOrThrow
   */
  export type order_requestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * Filter, which order_requests to fetch.
     */
    where?: order_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_requests to fetch.
     */
    orderBy?: order_requestsOrderByWithRelationInput | order_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_requests.
     */
    cursor?: order_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_requests.
     */
    distinct?: Order_requestsScalarFieldEnum | Order_requestsScalarFieldEnum[]
  }

  /**
   * order_requests findMany
   */
  export type order_requestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * Filter, which order_requests to fetch.
     */
    where?: order_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_requests to fetch.
     */
    orderBy?: order_requestsOrderByWithRelationInput | order_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_requests.
     */
    cursor?: order_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_requests.
     */
    skip?: number
    distinct?: Order_requestsScalarFieldEnum | Order_requestsScalarFieldEnum[]
  }

  /**
   * order_requests create
   */
  export type order_requestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * The data needed to create a order_requests.
     */
    data: XOR<order_requestsCreateInput, order_requestsUncheckedCreateInput>
  }

  /**
   * order_requests createMany
   */
  export type order_requestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_requests.
     */
    data: order_requestsCreateManyInput | order_requestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_requests createManyAndReturn
   */
  export type order_requestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * The data used to create many order_requests.
     */
    data: order_requestsCreateManyInput | order_requestsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_requests update
   */
  export type order_requestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * The data needed to update a order_requests.
     */
    data: XOR<order_requestsUpdateInput, order_requestsUncheckedUpdateInput>
    /**
     * Choose, which order_requests to update.
     */
    where: order_requestsWhereUniqueInput
  }

  /**
   * order_requests updateMany
   */
  export type order_requestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_requests.
     */
    data: XOR<order_requestsUpdateManyMutationInput, order_requestsUncheckedUpdateManyInput>
    /**
     * Filter which order_requests to update
     */
    where?: order_requestsWhereInput
    /**
     * Limit how many order_requests to update.
     */
    limit?: number
  }

  /**
   * order_requests updateManyAndReturn
   */
  export type order_requestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * The data used to update order_requests.
     */
    data: XOR<order_requestsUpdateManyMutationInput, order_requestsUncheckedUpdateManyInput>
    /**
     * Filter which order_requests to update
     */
    where?: order_requestsWhereInput
    /**
     * Limit how many order_requests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_requests upsert
   */
  export type order_requestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * The filter to search for the order_requests to update in case it exists.
     */
    where: order_requestsWhereUniqueInput
    /**
     * In case the order_requests found by the `where` argument doesn't exist, create a new order_requests with this data.
     */
    create: XOR<order_requestsCreateInput, order_requestsUncheckedCreateInput>
    /**
     * In case the order_requests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_requestsUpdateInput, order_requestsUncheckedUpdateInput>
  }

  /**
   * order_requests delete
   */
  export type order_requestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    /**
     * Filter which order_requests to delete.
     */
    where: order_requestsWhereUniqueInput
  }

  /**
   * order_requests deleteMany
   */
  export type order_requestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_requests to delete
     */
    where?: order_requestsWhereInput
    /**
     * Limit how many order_requests to delete.
     */
    limit?: number
  }

  /**
   * order_requests without action
   */
  export type order_requestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
  }


  /**
   * Model orders
   */

  export type AggregateOrders = {
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  export type OrdersAvgAggregateOutputType = {
    total_price: Decimal | null
    quarantine_day: number | null
  }

  export type OrdersSumAggregateOutputType = {
    total_price: Decimal | null
    quarantine_day: number | null
  }

  export type OrdersMinAggregateOutputType = {
    id: string | null
    buyer_id: string | null
    buyer_code: string | null
    buyer_company_name: string | null
    buyer_register_date: Date | null
    order_code: string | null
    remark: string | null
    delivery_from_date: Date | null
    delivery_to_date: Date | null
    delivery_type: string | null
    origin_address: string | null
    destination_address: string | null
    destination_country: string | null
    destination_country_code: string | null
    total_price: Decimal | null
    quarantine_day: number | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type OrdersMaxAggregateOutputType = {
    id: string | null
    buyer_id: string | null
    buyer_code: string | null
    buyer_company_name: string | null
    buyer_register_date: Date | null
    order_code: string | null
    remark: string | null
    delivery_from_date: Date | null
    delivery_to_date: Date | null
    delivery_type: string | null
    origin_address: string | null
    destination_address: string | null
    destination_country: string | null
    destination_country_code: string | null
    total_price: Decimal | null
    quarantine_day: number | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type OrdersCountAggregateOutputType = {
    id: number
    buyer_id: number
    buyer_code: number
    buyer_company_name: number
    buyer_register_date: number
    order_code: number
    remark: number
    delivery_from_date: number
    delivery_to_date: number
    delivery_type: number
    origin_address: number
    destination_address: number
    destination_country: number
    destination_country_code: number
    total_price: number
    quarantine_day: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type OrdersAvgAggregateInputType = {
    total_price?: true
    quarantine_day?: true
  }

  export type OrdersSumAggregateInputType = {
    total_price?: true
    quarantine_day?: true
  }

  export type OrdersMinAggregateInputType = {
    id?: true
    buyer_id?: true
    buyer_code?: true
    buyer_company_name?: true
    buyer_register_date?: true
    order_code?: true
    remark?: true
    delivery_from_date?: true
    delivery_to_date?: true
    delivery_type?: true
    origin_address?: true
    destination_address?: true
    destination_country?: true
    destination_country_code?: true
    total_price?: true
    quarantine_day?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type OrdersMaxAggregateInputType = {
    id?: true
    buyer_id?: true
    buyer_code?: true
    buyer_company_name?: true
    buyer_register_date?: true
    order_code?: true
    remark?: true
    delivery_from_date?: true
    delivery_to_date?: true
    delivery_type?: true
    origin_address?: true
    destination_address?: true
    destination_country?: true
    destination_country_code?: true
    total_price?: true
    quarantine_day?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type OrdersCountAggregateInputType = {
    id?: true
    buyer_id?: true
    buyer_code?: true
    buyer_company_name?: true
    buyer_register_date?: true
    order_code?: true
    remark?: true
    delivery_from_date?: true
    delivery_to_date?: true
    delivery_type?: true
    origin_address?: true
    destination_address?: true
    destination_country?: true
    destination_country_code?: true
    total_price?: true
    quarantine_day?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type OrdersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to aggregate.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned orders
    **/
    _count?: true | OrdersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdersMaxAggregateInputType
  }

  export type GetOrdersAggregateType<T extends OrdersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders[P]>
      : GetScalarType<T[P], AggregateOrders[P]>
  }




  export type ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithAggregationInput | ordersOrderByWithAggregationInput[]
    by: OrdersScalarFieldEnum[] | OrdersScalarFieldEnum
    having?: ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdersCountAggregateInputType | true
    _avg?: OrdersAvgAggregateInputType
    _sum?: OrdersSumAggregateInputType
    _min?: OrdersMinAggregateInputType
    _max?: OrdersMaxAggregateInputType
  }

  export type OrdersGroupByOutputType = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date
    order_code: string
    remark: string | null
    delivery_from_date: Date
    delivery_to_date: Date
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal
    quarantine_day: number
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  type GetOrdersGroupByPayload<T extends ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdersGroupByOutputType[P]>
            : GetScalarType<T[P], OrdersGroupByOutputType[P]>
        }
      >
    >


  export type ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_id?: boolean
    buyer_code?: boolean
    buyer_company_name?: boolean
    buyer_register_date?: boolean
    order_code?: boolean
    remark?: boolean
    delivery_from_date?: boolean
    delivery_to_date?: boolean
    delivery_type?: boolean
    origin_address?: boolean
    destination_address?: boolean
    destination_country?: boolean
    destination_country_code?: boolean
    total_price?: boolean
    quarantine_day?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    order_attachments?: boolean | orders$order_attachmentsArgs<ExtArgs>
    order_requests?: boolean | orders$order_requestsArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_id?: boolean
    buyer_code?: boolean
    buyer_company_name?: boolean
    buyer_register_date?: boolean
    order_code?: boolean
    remark?: boolean
    delivery_from_date?: boolean
    delivery_to_date?: boolean
    delivery_type?: boolean
    origin_address?: boolean
    destination_address?: boolean
    destination_country?: boolean
    destination_country_code?: boolean
    total_price?: boolean
    quarantine_day?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    buyer_id?: boolean
    buyer_code?: boolean
    buyer_company_name?: boolean
    buyer_register_date?: boolean
    order_code?: boolean
    remark?: boolean
    delivery_from_date?: boolean
    delivery_to_date?: boolean
    delivery_type?: boolean
    origin_address?: boolean
    destination_address?: boolean
    destination_country?: boolean
    destination_country_code?: boolean
    total_price?: boolean
    quarantine_day?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectScalar = {
    id?: boolean
    buyer_id?: boolean
    buyer_code?: boolean
    buyer_company_name?: boolean
    buyer_register_date?: boolean
    order_code?: boolean
    remark?: boolean
    delivery_from_date?: boolean
    delivery_to_date?: boolean
    delivery_type?: boolean
    origin_address?: boolean
    destination_address?: boolean
    destination_country?: boolean
    destination_country_code?: boolean
    total_price?: boolean
    quarantine_day?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type ordersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "buyer_id" | "buyer_code" | "buyer_company_name" | "buyer_register_date" | "order_code" | "remark" | "delivery_from_date" | "delivery_to_date" | "delivery_type" | "origin_address" | "destination_address" | "destination_country" | "destination_country_code" | "total_price" | "quarantine_day" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["orders"]>
  export type ordersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_attachments?: boolean | orders$order_attachmentsArgs<ExtArgs>
    order_requests?: boolean | orders$order_requestsArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ordersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "orders"
    objects: {
      order_attachments: Prisma.$order_attachmentsPayload<ExtArgs>[]
      order_requests: Prisma.$order_requestsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      buyer_id: string
      buyer_code: string
      buyer_company_name: string
      buyer_register_date: Date
      order_code: string
      remark: string | null
      delivery_from_date: Date
      delivery_to_date: Date
      delivery_type: string
      origin_address: string
      destination_address: string
      destination_country: string
      destination_country_code: string
      total_price: Prisma.Decimal
      quarantine_day: number
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["orders"]>
    composites: {}
  }

  type ordersGetPayload<S extends boolean | null | undefined | ordersDefaultArgs> = $Result.GetResult<Prisma.$ordersPayload, S>

  type ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdersCountAggregateInputType | true
    }

  export interface ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['orders'], meta: { name: 'orders' } }
    /**
     * Find zero or one Orders that matches the filter.
     * @param {ordersFindUniqueArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordersFindUniqueArgs>(args: SelectSubset<T, ordersFindUniqueArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordersFindUniqueOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordersFindFirstArgs>(args?: SelectSubset<T, ordersFindFirstArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.orders.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordersWithIdOnly = await prisma.orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordersFindManyArgs>(args?: SelectSubset<T, ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orders.
     * @param {ordersCreateArgs} args - Arguments to create a Orders.
     * @example
     * // Create one Orders
     * const Orders = await prisma.orders.create({
     *   data: {
     *     // ... data to create a Orders
     *   }
     * })
     * 
     */
    create<T extends ordersCreateArgs>(args: SelectSubset<T, ordersCreateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {ordersCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordersCreateManyArgs>(args?: SelectSubset<T, ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {ordersCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordersCreateManyAndReturnArgs>(args?: SelectSubset<T, ordersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Orders.
     * @param {ordersDeleteArgs} args - Arguments to delete one Orders.
     * @example
     * // Delete one Orders
     * const Orders = await prisma.orders.delete({
     *   where: {
     *     // ... filter to delete one Orders
     *   }
     * })
     * 
     */
    delete<T extends ordersDeleteArgs>(args: SelectSubset<T, ordersDeleteArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orders.
     * @param {ordersUpdateArgs} args - Arguments to update one Orders.
     * @example
     * // Update one Orders
     * const orders = await prisma.orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordersUpdateArgs>(args: SelectSubset<T, ordersUpdateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {ordersDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordersDeleteManyArgs>(args?: SelectSubset<T, ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordersUpdateManyArgs>(args: SelectSubset<T, ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {ordersUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordersUpdateManyAndReturnArgs>(args: SelectSubset<T, ordersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Orders.
     * @param {ordersUpsertArgs} args - Arguments to update or create a Orders.
     * @example
     * // Update or create a Orders
     * const orders = await prisma.orders.upsert({
     *   create: {
     *     // ... data to create a Orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders we want to update
     *   }
     * })
     */
    upsert<T extends ordersUpsertArgs>(args: SelectSubset<T, ordersUpsertArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.orders.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends ordersCountArgs>(
      args?: Subset<T, ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdersAggregateArgs>(args: Subset<T, OrdersAggregateArgs>): Prisma.PrismaPromise<GetOrdersAggregateType<T>>

    /**
     * Group by Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordersGroupByArgs['orderBy'] }
        : { orderBy?: ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the orders model
   */
  readonly fields: ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_attachments<T extends orders$order_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, orders$order_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    order_requests<T extends orders$order_requestsArgs<ExtArgs> = {}>(args?: Subset<T, orders$order_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the orders model
   */
  interface ordersFieldRefs {
    readonly id: FieldRef<"orders", 'String'>
    readonly buyer_id: FieldRef<"orders", 'String'>
    readonly buyer_code: FieldRef<"orders", 'String'>
    readonly buyer_company_name: FieldRef<"orders", 'String'>
    readonly buyer_register_date: FieldRef<"orders", 'DateTime'>
    readonly order_code: FieldRef<"orders", 'String'>
    readonly remark: FieldRef<"orders", 'String'>
    readonly delivery_from_date: FieldRef<"orders", 'DateTime'>
    readonly delivery_to_date: FieldRef<"orders", 'DateTime'>
    readonly delivery_type: FieldRef<"orders", 'String'>
    readonly origin_address: FieldRef<"orders", 'String'>
    readonly destination_address: FieldRef<"orders", 'String'>
    readonly destination_country: FieldRef<"orders", 'String'>
    readonly destination_country_code: FieldRef<"orders", 'String'>
    readonly total_price: FieldRef<"orders", 'Decimal'>
    readonly quarantine_day: FieldRef<"orders", 'Int'>
    readonly status: FieldRef<"orders", 'String'>
    readonly created_at: FieldRef<"orders", 'DateTime'>
    readonly created_by_id: FieldRef<"orders", 'String'>
    readonly created_by: FieldRef<"orders", 'String'>
    readonly updated_at: FieldRef<"orders", 'DateTime'>
    readonly updated_by_id: FieldRef<"orders", 'String'>
    readonly updated_by: FieldRef<"orders", 'String'>
  }
    

  // Custom InputTypes
  /**
   * orders findUnique
   */
  export type ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findUniqueOrThrow
   */
  export type ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findFirst
   */
  export type ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findFirstOrThrow
   */
  export type ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findMany
   */
  export type ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders create
   */
  export type ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to create a orders.
     */
    data: XOR<ordersCreateInput, ordersUncheckedCreateInput>
  }

  /**
   * orders createMany
   */
  export type ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders createManyAndReturn
   */
  export type ordersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders update
   */
  export type ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to update a orders.
     */
    data: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    /**
     * Choose, which orders to update.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders updateMany
   */
  export type ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders updateManyAndReturn
   */
  export type ordersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders upsert
   */
  export type ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The filter to search for the orders to update in case it exists.
     */
    where: ordersWhereUniqueInput
    /**
     * In case the orders found by the `where` argument doesn't exist, create a new orders with this data.
     */
    create: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    /**
     * In case the orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
  }

  /**
   * orders delete
   */
  export type ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter which orders to delete.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders deleteMany
   */
  export type ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to delete
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to delete.
     */
    limit?: number
  }

  /**
   * orders.order_attachments
   */
  export type orders$order_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_attachments
     */
    select?: order_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_attachments
     */
    omit?: order_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_attachmentsInclude<ExtArgs> | null
    where?: order_attachmentsWhereInput
    orderBy?: order_attachmentsOrderByWithRelationInput | order_attachmentsOrderByWithRelationInput[]
    cursor?: order_attachmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_attachmentsScalarFieldEnum | Order_attachmentsScalarFieldEnum[]
  }

  /**
   * orders.order_requests
   */
  export type orders$order_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_requests
     */
    select?: order_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_requests
     */
    omit?: order_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_requestsInclude<ExtArgs> | null
    where?: order_requestsWhereInput
    orderBy?: order_requestsOrderByWithRelationInput | order_requestsOrderByWithRelationInput[]
    cursor?: order_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_requestsScalarFieldEnum | Order_requestsScalarFieldEnum[]
  }

  /**
   * orders without action
   */
  export type ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
  }


  /**
   * Model pen_attachments
   */

  export type AggregatePen_attachments = {
    _count: Pen_attachmentsCountAggregateOutputType | null
    _min: Pen_attachmentsMinAggregateOutputType | null
    _max: Pen_attachmentsMaxAggregateOutputType | null
  }

  export type Pen_attachmentsMinAggregateOutputType = {
    id: string | null
    pen_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Pen_attachmentsMaxAggregateOutputType = {
    id: string | null
    pen_id: string | null
    file_name: string | null
    file_path: string | null
    is_public: boolean | null
    content_type: string | null
    description: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Pen_attachmentsCountAggregateOutputType = {
    id: number
    pen_id: number
    file_name: number
    file_path: number
    is_public: number
    content_type: number
    description: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Pen_attachmentsMinAggregateInputType = {
    id?: true
    pen_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Pen_attachmentsMaxAggregateInputType = {
    id?: true
    pen_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Pen_attachmentsCountAggregateInputType = {
    id?: true
    pen_id?: true
    file_name?: true
    file_path?: true
    is_public?: true
    content_type?: true
    description?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Pen_attachmentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pen_attachments to aggregate.
     */
    where?: pen_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pen_attachments to fetch.
     */
    orderBy?: pen_attachmentsOrderByWithRelationInput | pen_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pen_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pen_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pen_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pen_attachments
    **/
    _count?: true | Pen_attachmentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pen_attachmentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pen_attachmentsMaxAggregateInputType
  }

  export type GetPen_attachmentsAggregateType<T extends Pen_attachmentsAggregateArgs> = {
        [P in keyof T & keyof AggregatePen_attachments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePen_attachments[P]>
      : GetScalarType<T[P], AggregatePen_attachments[P]>
  }




  export type pen_attachmentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pen_attachmentsWhereInput
    orderBy?: pen_attachmentsOrderByWithAggregationInput | pen_attachmentsOrderByWithAggregationInput[]
    by: Pen_attachmentsScalarFieldEnum[] | Pen_attachmentsScalarFieldEnum
    having?: pen_attachmentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pen_attachmentsCountAggregateInputType | true
    _min?: Pen_attachmentsMinAggregateInputType
    _max?: Pen_attachmentsMaxAggregateInputType
  }

  export type Pen_attachmentsGroupByOutputType = {
    id: string
    pen_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description: string | null
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Pen_attachmentsCountAggregateOutputType | null
    _min: Pen_attachmentsMinAggregateOutputType | null
    _max: Pen_attachmentsMaxAggregateOutputType | null
  }

  type GetPen_attachmentsGroupByPayload<T extends pen_attachmentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pen_attachmentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pen_attachmentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pen_attachmentsGroupByOutputType[P]>
            : GetScalarType<T[P], Pen_attachmentsGroupByOutputType[P]>
        }
      >
    >


  export type pen_attachmentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pen_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pen_attachments"]>

  export type pen_attachmentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pen_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pen_attachments"]>

  export type pen_attachmentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    pen_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pen_attachments"]>

  export type pen_attachmentsSelectScalar = {
    id?: boolean
    pen_id?: boolean
    file_name?: boolean
    file_path?: boolean
    is_public?: boolean
    content_type?: boolean
    description?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type pen_attachmentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "pen_id" | "file_name" | "file_path" | "is_public" | "content_type" | "description" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["pen_attachments"]>
  export type pen_attachmentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }
  export type pen_attachmentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }
  export type pen_attachmentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pens?: boolean | pensDefaultArgs<ExtArgs>
  }

  export type $pen_attachmentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pen_attachments"
    objects: {
      pens: Prisma.$pensPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      pen_id: string
      file_name: string
      file_path: string
      is_public: boolean
      content_type: string
      description: string | null
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["pen_attachments"]>
    composites: {}
  }

  type pen_attachmentsGetPayload<S extends boolean | null | undefined | pen_attachmentsDefaultArgs> = $Result.GetResult<Prisma.$pen_attachmentsPayload, S>

  type pen_attachmentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pen_attachmentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pen_attachmentsCountAggregateInputType | true
    }

  export interface pen_attachmentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pen_attachments'], meta: { name: 'pen_attachments' } }
    /**
     * Find zero or one Pen_attachments that matches the filter.
     * @param {pen_attachmentsFindUniqueArgs} args - Arguments to find a Pen_attachments
     * @example
     * // Get one Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pen_attachmentsFindUniqueArgs>(args: SelectSubset<T, pen_attachmentsFindUniqueArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pen_attachments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pen_attachmentsFindUniqueOrThrowArgs} args - Arguments to find a Pen_attachments
     * @example
     * // Get one Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pen_attachmentsFindUniqueOrThrowArgs>(args: SelectSubset<T, pen_attachmentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pen_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pen_attachmentsFindFirstArgs} args - Arguments to find a Pen_attachments
     * @example
     * // Get one Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pen_attachmentsFindFirstArgs>(args?: SelectSubset<T, pen_attachmentsFindFirstArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pen_attachments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pen_attachmentsFindFirstOrThrowArgs} args - Arguments to find a Pen_attachments
     * @example
     * // Get one Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pen_attachmentsFindFirstOrThrowArgs>(args?: SelectSubset<T, pen_attachmentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pen_attachments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pen_attachmentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.findMany()
     * 
     * // Get first 10 Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pen_attachmentsWithIdOnly = await prisma.pen_attachments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pen_attachmentsFindManyArgs>(args?: SelectSubset<T, pen_attachmentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pen_attachments.
     * @param {pen_attachmentsCreateArgs} args - Arguments to create a Pen_attachments.
     * @example
     * // Create one Pen_attachments
     * const Pen_attachments = await prisma.pen_attachments.create({
     *   data: {
     *     // ... data to create a Pen_attachments
     *   }
     * })
     * 
     */
    create<T extends pen_attachmentsCreateArgs>(args: SelectSubset<T, pen_attachmentsCreateArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pen_attachments.
     * @param {pen_attachmentsCreateManyArgs} args - Arguments to create many Pen_attachments.
     * @example
     * // Create many Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pen_attachmentsCreateManyArgs>(args?: SelectSubset<T, pen_attachmentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pen_attachments and returns the data saved in the database.
     * @param {pen_attachmentsCreateManyAndReturnArgs} args - Arguments to create many Pen_attachments.
     * @example
     * // Create many Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pen_attachments and only return the `id`
     * const pen_attachmentsWithIdOnly = await prisma.pen_attachments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pen_attachmentsCreateManyAndReturnArgs>(args?: SelectSubset<T, pen_attachmentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pen_attachments.
     * @param {pen_attachmentsDeleteArgs} args - Arguments to delete one Pen_attachments.
     * @example
     * // Delete one Pen_attachments
     * const Pen_attachments = await prisma.pen_attachments.delete({
     *   where: {
     *     // ... filter to delete one Pen_attachments
     *   }
     * })
     * 
     */
    delete<T extends pen_attachmentsDeleteArgs>(args: SelectSubset<T, pen_attachmentsDeleteArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pen_attachments.
     * @param {pen_attachmentsUpdateArgs} args - Arguments to update one Pen_attachments.
     * @example
     * // Update one Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pen_attachmentsUpdateArgs>(args: SelectSubset<T, pen_attachmentsUpdateArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pen_attachments.
     * @param {pen_attachmentsDeleteManyArgs} args - Arguments to filter Pen_attachments to delete.
     * @example
     * // Delete a few Pen_attachments
     * const { count } = await prisma.pen_attachments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pen_attachmentsDeleteManyArgs>(args?: SelectSubset<T, pen_attachmentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pen_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pen_attachmentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pen_attachmentsUpdateManyArgs>(args: SelectSubset<T, pen_attachmentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pen_attachments and returns the data updated in the database.
     * @param {pen_attachmentsUpdateManyAndReturnArgs} args - Arguments to update many Pen_attachments.
     * @example
     * // Update many Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pen_attachments and only return the `id`
     * const pen_attachmentsWithIdOnly = await prisma.pen_attachments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pen_attachmentsUpdateManyAndReturnArgs>(args: SelectSubset<T, pen_attachmentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pen_attachments.
     * @param {pen_attachmentsUpsertArgs} args - Arguments to update or create a Pen_attachments.
     * @example
     * // Update or create a Pen_attachments
     * const pen_attachments = await prisma.pen_attachments.upsert({
     *   create: {
     *     // ... data to create a Pen_attachments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pen_attachments we want to update
     *   }
     * })
     */
    upsert<T extends pen_attachmentsUpsertArgs>(args: SelectSubset<T, pen_attachmentsUpsertArgs<ExtArgs>>): Prisma__pen_attachmentsClient<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pen_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pen_attachmentsCountArgs} args - Arguments to filter Pen_attachments to count.
     * @example
     * // Count the number of Pen_attachments
     * const count = await prisma.pen_attachments.count({
     *   where: {
     *     // ... the filter for the Pen_attachments we want to count
     *   }
     * })
    **/
    count<T extends pen_attachmentsCountArgs>(
      args?: Subset<T, pen_attachmentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pen_attachmentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pen_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pen_attachmentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pen_attachmentsAggregateArgs>(args: Subset<T, Pen_attachmentsAggregateArgs>): Prisma.PrismaPromise<GetPen_attachmentsAggregateType<T>>

    /**
     * Group by Pen_attachments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pen_attachmentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pen_attachmentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pen_attachmentsGroupByArgs['orderBy'] }
        : { orderBy?: pen_attachmentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pen_attachmentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPen_attachmentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pen_attachments model
   */
  readonly fields: pen_attachmentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pen_attachments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pen_attachmentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pens<T extends pensDefaultArgs<ExtArgs> = {}>(args?: Subset<T, pensDefaultArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pen_attachments model
   */
  interface pen_attachmentsFieldRefs {
    readonly id: FieldRef<"pen_attachments", 'String'>
    readonly pen_id: FieldRef<"pen_attachments", 'String'>
    readonly file_name: FieldRef<"pen_attachments", 'String'>
    readonly file_path: FieldRef<"pen_attachments", 'String'>
    readonly is_public: FieldRef<"pen_attachments", 'Boolean'>
    readonly content_type: FieldRef<"pen_attachments", 'String'>
    readonly description: FieldRef<"pen_attachments", 'String'>
    readonly created_at: FieldRef<"pen_attachments", 'DateTime'>
    readonly created_by_id: FieldRef<"pen_attachments", 'String'>
    readonly created_by: FieldRef<"pen_attachments", 'String'>
    readonly updated_at: FieldRef<"pen_attachments", 'DateTime'>
    readonly updated_by_id: FieldRef<"pen_attachments", 'String'>
    readonly updated_by: FieldRef<"pen_attachments", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pen_attachments findUnique
   */
  export type pen_attachmentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which pen_attachments to fetch.
     */
    where: pen_attachmentsWhereUniqueInput
  }

  /**
   * pen_attachments findUniqueOrThrow
   */
  export type pen_attachmentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which pen_attachments to fetch.
     */
    where: pen_attachmentsWhereUniqueInput
  }

  /**
   * pen_attachments findFirst
   */
  export type pen_attachmentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which pen_attachments to fetch.
     */
    where?: pen_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pen_attachments to fetch.
     */
    orderBy?: pen_attachmentsOrderByWithRelationInput | pen_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pen_attachments.
     */
    cursor?: pen_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pen_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pen_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pen_attachments.
     */
    distinct?: Pen_attachmentsScalarFieldEnum | Pen_attachmentsScalarFieldEnum[]
  }

  /**
   * pen_attachments findFirstOrThrow
   */
  export type pen_attachmentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which pen_attachments to fetch.
     */
    where?: pen_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pen_attachments to fetch.
     */
    orderBy?: pen_attachmentsOrderByWithRelationInput | pen_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pen_attachments.
     */
    cursor?: pen_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pen_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pen_attachments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pen_attachments.
     */
    distinct?: Pen_attachmentsScalarFieldEnum | Pen_attachmentsScalarFieldEnum[]
  }

  /**
   * pen_attachments findMany
   */
  export type pen_attachmentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * Filter, which pen_attachments to fetch.
     */
    where?: pen_attachmentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pen_attachments to fetch.
     */
    orderBy?: pen_attachmentsOrderByWithRelationInput | pen_attachmentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pen_attachments.
     */
    cursor?: pen_attachmentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pen_attachments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pen_attachments.
     */
    skip?: number
    distinct?: Pen_attachmentsScalarFieldEnum | Pen_attachmentsScalarFieldEnum[]
  }

  /**
   * pen_attachments create
   */
  export type pen_attachmentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to create a pen_attachments.
     */
    data: XOR<pen_attachmentsCreateInput, pen_attachmentsUncheckedCreateInput>
  }

  /**
   * pen_attachments createMany
   */
  export type pen_attachmentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pen_attachments.
     */
    data: pen_attachmentsCreateManyInput | pen_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pen_attachments createManyAndReturn
   */
  export type pen_attachmentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to create many pen_attachments.
     */
    data: pen_attachmentsCreateManyInput | pen_attachmentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pen_attachments update
   */
  export type pen_attachmentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * The data needed to update a pen_attachments.
     */
    data: XOR<pen_attachmentsUpdateInput, pen_attachmentsUncheckedUpdateInput>
    /**
     * Choose, which pen_attachments to update.
     */
    where: pen_attachmentsWhereUniqueInput
  }

  /**
   * pen_attachments updateMany
   */
  export type pen_attachmentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pen_attachments.
     */
    data: XOR<pen_attachmentsUpdateManyMutationInput, pen_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which pen_attachments to update
     */
    where?: pen_attachmentsWhereInput
    /**
     * Limit how many pen_attachments to update.
     */
    limit?: number
  }

  /**
   * pen_attachments updateManyAndReturn
   */
  export type pen_attachmentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * The data used to update pen_attachments.
     */
    data: XOR<pen_attachmentsUpdateManyMutationInput, pen_attachmentsUncheckedUpdateManyInput>
    /**
     * Filter which pen_attachments to update
     */
    where?: pen_attachmentsWhereInput
    /**
     * Limit how many pen_attachments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pen_attachments upsert
   */
  export type pen_attachmentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * The filter to search for the pen_attachments to update in case it exists.
     */
    where: pen_attachmentsWhereUniqueInput
    /**
     * In case the pen_attachments found by the `where` argument doesn't exist, create a new pen_attachments with this data.
     */
    create: XOR<pen_attachmentsCreateInput, pen_attachmentsUncheckedCreateInput>
    /**
     * In case the pen_attachments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pen_attachmentsUpdateInput, pen_attachmentsUncheckedUpdateInput>
  }

  /**
   * pen_attachments delete
   */
  export type pen_attachmentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    /**
     * Filter which pen_attachments to delete.
     */
    where: pen_attachmentsWhereUniqueInput
  }

  /**
   * pen_attachments deleteMany
   */
  export type pen_attachmentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pen_attachments to delete
     */
    where?: pen_attachmentsWhereInput
    /**
     * Limit how many pen_attachments to delete.
     */
    limit?: number
  }

  /**
   * pen_attachments without action
   */
  export type pen_attachmentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
  }


  /**
   * Model pens
   */

  export type AggregatePens = {
    _count: PensCountAggregateOutputType | null
    _avg: PensAvgAggregateOutputType | null
    _sum: PensSumAggregateOutputType | null
    _min: PensMinAggregateOutputType | null
    _max: PensMaxAggregateOutputType | null
  }

  export type PensAvgAggregateOutputType = {
    capacity: number | null
    wa: Decimal | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type PensSumAggregateOutputType = {
    capacity: number | null
    wa: Decimal | null
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type PensMinAggregateOutputType = {
    id: string | null
    farm_id: string | null
    pen_type: string | null
    pen_number: string | null
    capacity: number | null
    name: string | null
    wa: Decimal | null
    latitude: Decimal | null
    longitude: Decimal | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type PensMaxAggregateOutputType = {
    id: string | null
    farm_id: string | null
    pen_type: string | null
    pen_number: string | null
    capacity: number | null
    name: string | null
    wa: Decimal | null
    latitude: Decimal | null
    longitude: Decimal | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type PensCountAggregateOutputType = {
    id: number
    farm_id: number
    pen_type: number
    pen_number: number
    capacity: number
    name: number
    wa: number
    latitude: number
    longitude: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type PensAvgAggregateInputType = {
    capacity?: true
    wa?: true
    latitude?: true
    longitude?: true
  }

  export type PensSumAggregateInputType = {
    capacity?: true
    wa?: true
    latitude?: true
    longitude?: true
  }

  export type PensMinAggregateInputType = {
    id?: true
    farm_id?: true
    pen_type?: true
    pen_number?: true
    capacity?: true
    name?: true
    wa?: true
    latitude?: true
    longitude?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type PensMaxAggregateInputType = {
    id?: true
    farm_id?: true
    pen_type?: true
    pen_number?: true
    capacity?: true
    name?: true
    wa?: true
    latitude?: true
    longitude?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type PensCountAggregateInputType = {
    id?: true
    farm_id?: true
    pen_type?: true
    pen_number?: true
    capacity?: true
    name?: true
    wa?: true
    latitude?: true
    longitude?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type PensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pens to aggregate.
     */
    where?: pensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pens to fetch.
     */
    orderBy?: pensOrderByWithRelationInput | pensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pens
    **/
    _count?: true | PensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PensMaxAggregateInputType
  }

  export type GetPensAggregateType<T extends PensAggregateArgs> = {
        [P in keyof T & keyof AggregatePens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePens[P]>
      : GetScalarType<T[P], AggregatePens[P]>
  }




  export type pensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pensWhereInput
    orderBy?: pensOrderByWithAggregationInput | pensOrderByWithAggregationInput[]
    by: PensScalarFieldEnum[] | PensScalarFieldEnum
    having?: pensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PensCountAggregateInputType | true
    _avg?: PensAvgAggregateInputType
    _sum?: PensSumAggregateInputType
    _min?: PensMinAggregateInputType
    _max?: PensMaxAggregateInputType
  }

  export type PensGroupByOutputType = {
    id: string
    farm_id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal
    latitude: Decimal
    longitude: Decimal
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: PensCountAggregateOutputType | null
    _avg: PensAvgAggregateOutputType | null
    _sum: PensSumAggregateOutputType | null
    _min: PensMinAggregateOutputType | null
    _max: PensMaxAggregateOutputType | null
  }

  type GetPensGroupByPayload<T extends pensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PensGroupByOutputType[P]>
            : GetScalarType<T[P], PensGroupByOutputType[P]>
        }
      >
    >


  export type pensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    pen_type?: boolean
    pen_number?: boolean
    capacity?: boolean
    name?: boolean
    wa?: boolean
    latitude?: boolean
    longitude?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    cattles?: boolean | pens$cattlesArgs<ExtArgs>
    pen_attachments?: boolean | pens$pen_attachmentsArgs<ExtArgs>
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    _count?: boolean | PensCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pens"]>

  export type pensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    pen_type?: boolean
    pen_number?: boolean
    capacity?: boolean
    name?: boolean
    wa?: boolean
    latitude?: boolean
    longitude?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pens"]>

  export type pensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    farm_id?: boolean
    pen_type?: boolean
    pen_number?: boolean
    capacity?: boolean
    name?: boolean
    wa?: boolean
    latitude?: boolean
    longitude?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pens"]>

  export type pensSelectScalar = {
    id?: boolean
    farm_id?: boolean
    pen_type?: boolean
    pen_number?: boolean
    capacity?: boolean
    name?: boolean
    wa?: boolean
    latitude?: boolean
    longitude?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type pensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "farm_id" | "pen_type" | "pen_number" | "capacity" | "name" | "wa" | "latitude" | "longitude" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["pens"]>
  export type pensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cattles?: boolean | pens$cattlesArgs<ExtArgs>
    pen_attachments?: boolean | pens$pen_attachmentsArgs<ExtArgs>
    farms?: boolean | farmsDefaultArgs<ExtArgs>
    _count?: boolean | PensCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type pensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }
  export type pensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    farms?: boolean | farmsDefaultArgs<ExtArgs>
  }

  export type $pensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pens"
    objects: {
      cattles: Prisma.$cattlesPayload<ExtArgs>[]
      pen_attachments: Prisma.$pen_attachmentsPayload<ExtArgs>[]
      farms: Prisma.$farmsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      farm_id: string
      pen_type: string
      pen_number: string
      capacity: number
      name: string
      wa: Prisma.Decimal
      latitude: Prisma.Decimal
      longitude: Prisma.Decimal
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["pens"]>
    composites: {}
  }

  type pensGetPayload<S extends boolean | null | undefined | pensDefaultArgs> = $Result.GetResult<Prisma.$pensPayload, S>

  type pensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PensCountAggregateInputType | true
    }

  export interface pensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pens'], meta: { name: 'pens' } }
    /**
     * Find zero or one Pens that matches the filter.
     * @param {pensFindUniqueArgs} args - Arguments to find a Pens
     * @example
     * // Get one Pens
     * const pens = await prisma.pens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pensFindUniqueArgs>(args: SelectSubset<T, pensFindUniqueArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pensFindUniqueOrThrowArgs} args - Arguments to find a Pens
     * @example
     * // Get one Pens
     * const pens = await prisma.pens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pensFindUniqueOrThrowArgs>(args: SelectSubset<T, pensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pensFindFirstArgs} args - Arguments to find a Pens
     * @example
     * // Get one Pens
     * const pens = await prisma.pens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pensFindFirstArgs>(args?: SelectSubset<T, pensFindFirstArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pensFindFirstOrThrowArgs} args - Arguments to find a Pens
     * @example
     * // Get one Pens
     * const pens = await prisma.pens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pensFindFirstOrThrowArgs>(args?: SelectSubset<T, pensFindFirstOrThrowArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pens
     * const pens = await prisma.pens.findMany()
     * 
     * // Get first 10 Pens
     * const pens = await prisma.pens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pensWithIdOnly = await prisma.pens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pensFindManyArgs>(args?: SelectSubset<T, pensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pens.
     * @param {pensCreateArgs} args - Arguments to create a Pens.
     * @example
     * // Create one Pens
     * const Pens = await prisma.pens.create({
     *   data: {
     *     // ... data to create a Pens
     *   }
     * })
     * 
     */
    create<T extends pensCreateArgs>(args: SelectSubset<T, pensCreateArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pens.
     * @param {pensCreateManyArgs} args - Arguments to create many Pens.
     * @example
     * // Create many Pens
     * const pens = await prisma.pens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pensCreateManyArgs>(args?: SelectSubset<T, pensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pens and returns the data saved in the database.
     * @param {pensCreateManyAndReturnArgs} args - Arguments to create many Pens.
     * @example
     * // Create many Pens
     * const pens = await prisma.pens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pens and only return the `id`
     * const pensWithIdOnly = await prisma.pens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pensCreateManyAndReturnArgs>(args?: SelectSubset<T, pensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pens.
     * @param {pensDeleteArgs} args - Arguments to delete one Pens.
     * @example
     * // Delete one Pens
     * const Pens = await prisma.pens.delete({
     *   where: {
     *     // ... filter to delete one Pens
     *   }
     * })
     * 
     */
    delete<T extends pensDeleteArgs>(args: SelectSubset<T, pensDeleteArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pens.
     * @param {pensUpdateArgs} args - Arguments to update one Pens.
     * @example
     * // Update one Pens
     * const pens = await prisma.pens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pensUpdateArgs>(args: SelectSubset<T, pensUpdateArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pens.
     * @param {pensDeleteManyArgs} args - Arguments to filter Pens to delete.
     * @example
     * // Delete a few Pens
     * const { count } = await prisma.pens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pensDeleteManyArgs>(args?: SelectSubset<T, pensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pens
     * const pens = await prisma.pens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pensUpdateManyArgs>(args: SelectSubset<T, pensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pens and returns the data updated in the database.
     * @param {pensUpdateManyAndReturnArgs} args - Arguments to update many Pens.
     * @example
     * // Update many Pens
     * const pens = await prisma.pens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pens and only return the `id`
     * const pensWithIdOnly = await prisma.pens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pensUpdateManyAndReturnArgs>(args: SelectSubset<T, pensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pens.
     * @param {pensUpsertArgs} args - Arguments to update or create a Pens.
     * @example
     * // Update or create a Pens
     * const pens = await prisma.pens.upsert({
     *   create: {
     *     // ... data to create a Pens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pens we want to update
     *   }
     * })
     */
    upsert<T extends pensUpsertArgs>(args: SelectSubset<T, pensUpsertArgs<ExtArgs>>): Prisma__pensClient<$Result.GetResult<Prisma.$pensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pensCountArgs} args - Arguments to filter Pens to count.
     * @example
     * // Count the number of Pens
     * const count = await prisma.pens.count({
     *   where: {
     *     // ... the filter for the Pens we want to count
     *   }
     * })
    **/
    count<T extends pensCountArgs>(
      args?: Subset<T, pensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PensAggregateArgs>(args: Subset<T, PensAggregateArgs>): Prisma.PrismaPromise<GetPensAggregateType<T>>

    /**
     * Group by Pens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pensGroupByArgs['orderBy'] }
        : { orderBy?: pensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pens model
   */
  readonly fields: pensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cattles<T extends pens$cattlesArgs<ExtArgs> = {}>(args?: Subset<T, pens$cattlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cattlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pen_attachments<T extends pens$pen_attachmentsArgs<ExtArgs> = {}>(args?: Subset<T, pens$pen_attachmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pen_attachmentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    farms<T extends farmsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, farmsDefaultArgs<ExtArgs>>): Prisma__farmsClient<$Result.GetResult<Prisma.$farmsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pens model
   */
  interface pensFieldRefs {
    readonly id: FieldRef<"pens", 'String'>
    readonly farm_id: FieldRef<"pens", 'String'>
    readonly pen_type: FieldRef<"pens", 'String'>
    readonly pen_number: FieldRef<"pens", 'String'>
    readonly capacity: FieldRef<"pens", 'Int'>
    readonly name: FieldRef<"pens", 'String'>
    readonly wa: FieldRef<"pens", 'Decimal'>
    readonly latitude: FieldRef<"pens", 'Decimal'>
    readonly longitude: FieldRef<"pens", 'Decimal'>
    readonly status: FieldRef<"pens", 'String'>
    readonly created_at: FieldRef<"pens", 'DateTime'>
    readonly created_by_id: FieldRef<"pens", 'String'>
    readonly created_by: FieldRef<"pens", 'String'>
    readonly updated_at: FieldRef<"pens", 'DateTime'>
    readonly updated_by_id: FieldRef<"pens", 'String'>
    readonly updated_by: FieldRef<"pens", 'String'>
  }
    

  // Custom InputTypes
  /**
   * pens findUnique
   */
  export type pensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * Filter, which pens to fetch.
     */
    where: pensWhereUniqueInput
  }

  /**
   * pens findUniqueOrThrow
   */
  export type pensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * Filter, which pens to fetch.
     */
    where: pensWhereUniqueInput
  }

  /**
   * pens findFirst
   */
  export type pensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * Filter, which pens to fetch.
     */
    where?: pensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pens to fetch.
     */
    orderBy?: pensOrderByWithRelationInput | pensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pens.
     */
    cursor?: pensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pens.
     */
    distinct?: PensScalarFieldEnum | PensScalarFieldEnum[]
  }

  /**
   * pens findFirstOrThrow
   */
  export type pensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * Filter, which pens to fetch.
     */
    where?: pensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pens to fetch.
     */
    orderBy?: pensOrderByWithRelationInput | pensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pens.
     */
    cursor?: pensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pens.
     */
    distinct?: PensScalarFieldEnum | PensScalarFieldEnum[]
  }

  /**
   * pens findMany
   */
  export type pensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * Filter, which pens to fetch.
     */
    where?: pensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pens to fetch.
     */
    orderBy?: pensOrderByWithRelationInput | pensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pens.
     */
    cursor?: pensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pens.
     */
    skip?: number
    distinct?: PensScalarFieldEnum | PensScalarFieldEnum[]
  }

  /**
   * pens create
   */
  export type pensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * The data needed to create a pens.
     */
    data: XOR<pensCreateInput, pensUncheckedCreateInput>
  }

  /**
   * pens createMany
   */
  export type pensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pens.
     */
    data: pensCreateManyInput | pensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pens createManyAndReturn
   */
  export type pensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * The data used to create many pens.
     */
    data: pensCreateManyInput | pensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pens update
   */
  export type pensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * The data needed to update a pens.
     */
    data: XOR<pensUpdateInput, pensUncheckedUpdateInput>
    /**
     * Choose, which pens to update.
     */
    where: pensWhereUniqueInput
  }

  /**
   * pens updateMany
   */
  export type pensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pens.
     */
    data: XOR<pensUpdateManyMutationInput, pensUncheckedUpdateManyInput>
    /**
     * Filter which pens to update
     */
    where?: pensWhereInput
    /**
     * Limit how many pens to update.
     */
    limit?: number
  }

  /**
   * pens updateManyAndReturn
   */
  export type pensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * The data used to update pens.
     */
    data: XOR<pensUpdateManyMutationInput, pensUncheckedUpdateManyInput>
    /**
     * Filter which pens to update
     */
    where?: pensWhereInput
    /**
     * Limit how many pens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pens upsert
   */
  export type pensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * The filter to search for the pens to update in case it exists.
     */
    where: pensWhereUniqueInput
    /**
     * In case the pens found by the `where` argument doesn't exist, create a new pens with this data.
     */
    create: XOR<pensCreateInput, pensUncheckedCreateInput>
    /**
     * In case the pens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pensUpdateInput, pensUncheckedUpdateInput>
  }

  /**
   * pens delete
   */
  export type pensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
    /**
     * Filter which pens to delete.
     */
    where: pensWhereUniqueInput
  }

  /**
   * pens deleteMany
   */
  export type pensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pens to delete
     */
    where?: pensWhereInput
    /**
     * Limit how many pens to delete.
     */
    limit?: number
  }

  /**
   * pens.cattles
   */
  export type pens$cattlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cattles
     */
    select?: cattlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cattles
     */
    omit?: cattlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cattlesInclude<ExtArgs> | null
    where?: cattlesWhereInput
    orderBy?: cattlesOrderByWithRelationInput | cattlesOrderByWithRelationInput[]
    cursor?: cattlesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CattlesScalarFieldEnum | CattlesScalarFieldEnum[]
  }

  /**
   * pens.pen_attachments
   */
  export type pens$pen_attachmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pen_attachments
     */
    select?: pen_attachmentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pen_attachments
     */
    omit?: pen_attachmentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pen_attachmentsInclude<ExtArgs> | null
    where?: pen_attachmentsWhereInput
    orderBy?: pen_attachmentsOrderByWithRelationInput | pen_attachmentsOrderByWithRelationInput[]
    cursor?: pen_attachmentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Pen_attachmentsScalarFieldEnum | Pen_attachmentsScalarFieldEnum[]
  }

  /**
   * pens without action
   */
  export type pensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pens
     */
    select?: pensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pens
     */
    omit?: pensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pensInclude<ExtArgs> | null
  }


  /**
   * Model schema_migrations
   */

  export type AggregateSchema_migrations = {
    _count: Schema_migrationsCountAggregateOutputType | null
    _avg: Schema_migrationsAvgAggregateOutputType | null
    _sum: Schema_migrationsSumAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  export type Schema_migrationsAvgAggregateOutputType = {
    version: number | null
  }

  export type Schema_migrationsSumAggregateOutputType = {
    version: bigint | null
  }

  export type Schema_migrationsMinAggregateOutputType = {
    version: bigint | null
    dirty: boolean | null
  }

  export type Schema_migrationsMaxAggregateOutputType = {
    version: bigint | null
    dirty: boolean | null
  }

  export type Schema_migrationsCountAggregateOutputType = {
    version: number
    dirty: number
    _all: number
  }


  export type Schema_migrationsAvgAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsSumAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsMinAggregateInputType = {
    version?: true
    dirty?: true
  }

  export type Schema_migrationsMaxAggregateInputType = {
    version?: true
    dirty?: true
  }

  export type Schema_migrationsCountAggregateInputType = {
    version?: true
    dirty?: true
    _all?: true
  }

  export type Schema_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to aggregate.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned schema_migrations
    **/
    _count?: true | Schema_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Schema_migrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Schema_migrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Schema_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type GetSchema_migrationsAggregateType<T extends Schema_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateSchema_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchema_migrations[P]>
      : GetScalarType<T[P], AggregateSchema_migrations[P]>
  }




  export type schema_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schema_migrationsWhereInput
    orderBy?: schema_migrationsOrderByWithAggregationInput | schema_migrationsOrderByWithAggregationInput[]
    by: Schema_migrationsScalarFieldEnum[] | Schema_migrationsScalarFieldEnum
    having?: schema_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Schema_migrationsCountAggregateInputType | true
    _avg?: Schema_migrationsAvgAggregateInputType
    _sum?: Schema_migrationsSumAggregateInputType
    _min?: Schema_migrationsMinAggregateInputType
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type Schema_migrationsGroupByOutputType = {
    version: bigint
    dirty: boolean
    _count: Schema_migrationsCountAggregateOutputType | null
    _avg: Schema_migrationsAvgAggregateOutputType | null
    _sum: Schema_migrationsSumAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  type GetSchema_migrationsGroupByPayload<T extends schema_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Schema_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Schema_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type schema_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
    dirty?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectScalar = {
    version?: boolean
    dirty?: boolean
  }

  export type schema_migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"version" | "dirty", ExtArgs["result"]["schema_migrations"]>

  export type $schema_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "schema_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      version: bigint
      dirty: boolean
    }, ExtArgs["result"]["schema_migrations"]>
    composites: {}
  }

  type schema_migrationsGetPayload<S extends boolean | null | undefined | schema_migrationsDefaultArgs> = $Result.GetResult<Prisma.$schema_migrationsPayload, S>

  type schema_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<schema_migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Schema_migrationsCountAggregateInputType | true
    }

  export interface schema_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['schema_migrations'], meta: { name: 'schema_migrations' } }
    /**
     * Find zero or one Schema_migrations that matches the filter.
     * @param {schema_migrationsFindUniqueArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends schema_migrationsFindUniqueArgs>(args: SelectSubset<T, schema_migrationsFindUniqueArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Schema_migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {schema_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends schema_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, schema_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends schema_migrationsFindFirstArgs>(args?: SelectSubset<T, schema_migrationsFindFirstArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends schema_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, schema_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany()
     * 
     * // Get first 10 Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany({ take: 10 })
     * 
     * // Only select the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.findMany({ select: { version: true } })
     * 
     */
    findMany<T extends schema_migrationsFindManyArgs>(args?: SelectSubset<T, schema_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Schema_migrations.
     * @param {schema_migrationsCreateArgs} args - Arguments to create a Schema_migrations.
     * @example
     * // Create one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.create({
     *   data: {
     *     // ... data to create a Schema_migrations
     *   }
     * })
     * 
     */
    create<T extends schema_migrationsCreateArgs>(args: SelectSubset<T, schema_migrationsCreateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Schema_migrations.
     * @param {schema_migrationsCreateManyArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends schema_migrationsCreateManyArgs>(args?: SelectSubset<T, schema_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Schema_migrations and returns the data saved in the database.
     * @param {schema_migrationsCreateManyAndReturnArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.createManyAndReturn({
     *   select: { version: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends schema_migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, schema_migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Schema_migrations.
     * @param {schema_migrationsDeleteArgs} args - Arguments to delete one Schema_migrations.
     * @example
     * // Delete one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.delete({
     *   where: {
     *     // ... filter to delete one Schema_migrations
     *   }
     * })
     * 
     */
    delete<T extends schema_migrationsDeleteArgs>(args: SelectSubset<T, schema_migrationsDeleteArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Schema_migrations.
     * @param {schema_migrationsUpdateArgs} args - Arguments to update one Schema_migrations.
     * @example
     * // Update one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends schema_migrationsUpdateArgs>(args: SelectSubset<T, schema_migrationsUpdateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Schema_migrations.
     * @param {schema_migrationsDeleteManyArgs} args - Arguments to filter Schema_migrations to delete.
     * @example
     * // Delete a few Schema_migrations
     * const { count } = await prisma.schema_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends schema_migrationsDeleteManyArgs>(args?: SelectSubset<T, schema_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends schema_migrationsUpdateManyArgs>(args: SelectSubset<T, schema_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations and returns the data updated in the database.
     * @param {schema_migrationsUpdateManyAndReturnArgs} args - Arguments to update many Schema_migrations.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.updateManyAndReturn({
     *   select: { version: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends schema_migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, schema_migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Schema_migrations.
     * @param {schema_migrationsUpsertArgs} args - Arguments to update or create a Schema_migrations.
     * @example
     * // Update or create a Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.upsert({
     *   create: {
     *     // ... data to create a Schema_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schema_migrations we want to update
     *   }
     * })
     */
    upsert<T extends schema_migrationsUpsertArgs>(args: SelectSubset<T, schema_migrationsUpsertArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsCountArgs} args - Arguments to filter Schema_migrations to count.
     * @example
     * // Count the number of Schema_migrations
     * const count = await prisma.schema_migrations.count({
     *   where: {
     *     // ... the filter for the Schema_migrations we want to count
     *   }
     * })
    **/
    count<T extends schema_migrationsCountArgs>(
      args?: Subset<T, schema_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Schema_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Schema_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Schema_migrationsAggregateArgs>(args: Subset<T, Schema_migrationsAggregateArgs>): Prisma.PrismaPromise<GetSchema_migrationsAggregateType<T>>

    /**
     * Group by Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends schema_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: schema_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: schema_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, schema_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSchema_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the schema_migrations model
   */
  readonly fields: schema_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for schema_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__schema_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the schema_migrations model
   */
  interface schema_migrationsFieldRefs {
    readonly version: FieldRef<"schema_migrations", 'BigInt'>
    readonly dirty: FieldRef<"schema_migrations", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * schema_migrations findUnique
   */
  export type schema_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findUniqueOrThrow
   */
  export type schema_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findFirst
   */
  export type schema_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findFirstOrThrow
   */
  export type schema_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findMany
   */
  export type schema_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations create
   */
  export type schema_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a schema_migrations.
     */
    data: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
  }

  /**
   * schema_migrations createMany
   */
  export type schema_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations createManyAndReturn
   */
  export type schema_migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations update
   */
  export type schema_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a schema_migrations.
     */
    data: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
    /**
     * Choose, which schema_migrations to update.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations updateMany
   */
  export type schema_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations updateManyAndReturn
   */
  export type schema_migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations upsert
   */
  export type schema_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the schema_migrations to update in case it exists.
     */
    where: schema_migrationsWhereUniqueInput
    /**
     * In case the schema_migrations found by the `where` argument doesn't exist, create a new schema_migrations with this data.
     */
    create: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
    /**
     * In case the schema_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
  }

  /**
   * schema_migrations delete
   */
  export type schema_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter which schema_migrations to delete.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations deleteMany
   */
  export type schema_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to delete
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to delete.
     */
    limit?: number
  }

  /**
   * schema_migrations without action
   */
  export type schema_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
  }


  /**
   * Model traceability
   */

  export type AggregateTraceability = {
    _count: TraceabilityCountAggregateOutputType | null
    _avg: TraceabilityAvgAggregateOutputType | null
    _sum: TraceabilitySumAggregateOutputType | null
    _min: TraceabilityMinAggregateOutputType | null
    _max: TraceabilityMaxAggregateOutputType | null
  }

  export type TraceabilityAvgAggregateOutputType = {
    total_animal: number | null
  }

  export type TraceabilitySumAggregateOutputType = {
    total_animal: number | null
  }

  export type TraceabilityMinAggregateOutputType = {
    id: string | null
    reason: string | null
    document_no: string | null
    total_animal: number | null
    origin_farm_id: string | null
    origin_pen_id: string | null
    destination_farm_id: string | null
    destination_pen_id: string | null
    specific_destination_name: string | null
    destination_province: string | null
    shipment_date: Date | null
    estimated_arrival_date: Date | null
    destination_type: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type TraceabilityMaxAggregateOutputType = {
    id: string | null
    reason: string | null
    document_no: string | null
    total_animal: number | null
    origin_farm_id: string | null
    origin_pen_id: string | null
    destination_farm_id: string | null
    destination_pen_id: string | null
    specific_destination_name: string | null
    destination_province: string | null
    shipment_date: Date | null
    estimated_arrival_date: Date | null
    destination_type: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type TraceabilityCountAggregateOutputType = {
    id: number
    reason: number
    document_no: number
    total_animal: number
    origin_farm_id: number
    origin_pen_id: number
    destination_farm_id: number
    destination_pen_id: number
    specific_destination_name: number
    destination_province: number
    shipment_date: number
    estimated_arrival_date: number
    destination_type: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type TraceabilityAvgAggregateInputType = {
    total_animal?: true
  }

  export type TraceabilitySumAggregateInputType = {
    total_animal?: true
  }

  export type TraceabilityMinAggregateInputType = {
    id?: true
    reason?: true
    document_no?: true
    total_animal?: true
    origin_farm_id?: true
    origin_pen_id?: true
    destination_farm_id?: true
    destination_pen_id?: true
    specific_destination_name?: true
    destination_province?: true
    shipment_date?: true
    estimated_arrival_date?: true
    destination_type?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type TraceabilityMaxAggregateInputType = {
    id?: true
    reason?: true
    document_no?: true
    total_animal?: true
    origin_farm_id?: true
    origin_pen_id?: true
    destination_farm_id?: true
    destination_pen_id?: true
    specific_destination_name?: true
    destination_province?: true
    shipment_date?: true
    estimated_arrival_date?: true
    destination_type?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type TraceabilityCountAggregateInputType = {
    id?: true
    reason?: true
    document_no?: true
    total_animal?: true
    origin_farm_id?: true
    origin_pen_id?: true
    destination_farm_id?: true
    destination_pen_id?: true
    specific_destination_name?: true
    destination_province?: true
    shipment_date?: true
    estimated_arrival_date?: true
    destination_type?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type TraceabilityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability to aggregate.
     */
    where?: traceabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceabilities to fetch.
     */
    orderBy?: traceabilityOrderByWithRelationInput | traceabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: traceabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceabilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned traceabilities
    **/
    _count?: true | TraceabilityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TraceabilityAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TraceabilitySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TraceabilityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TraceabilityMaxAggregateInputType
  }

  export type GetTraceabilityAggregateType<T extends TraceabilityAggregateArgs> = {
        [P in keyof T & keyof AggregateTraceability]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTraceability[P]>
      : GetScalarType<T[P], AggregateTraceability[P]>
  }




  export type traceabilityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceabilityWhereInput
    orderBy?: traceabilityOrderByWithAggregationInput | traceabilityOrderByWithAggregationInput[]
    by: TraceabilityScalarFieldEnum[] | TraceabilityScalarFieldEnum
    having?: traceabilityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TraceabilityCountAggregateInputType | true
    _avg?: TraceabilityAvgAggregateInputType
    _sum?: TraceabilitySumAggregateInputType
    _min?: TraceabilityMinAggregateInputType
    _max?: TraceabilityMaxAggregateInputType
  }

  export type TraceabilityGroupByOutputType = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id: string | null
    destination_pen_id: string | null
    specific_destination_name: string | null
    destination_province: string | null
    shipment_date: Date
    estimated_arrival_date: Date
    destination_type: string
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: TraceabilityCountAggregateOutputType | null
    _avg: TraceabilityAvgAggregateOutputType | null
    _sum: TraceabilitySumAggregateOutputType | null
    _min: TraceabilityMinAggregateOutputType | null
    _max: TraceabilityMaxAggregateOutputType | null
  }

  type GetTraceabilityGroupByPayload<T extends traceabilityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TraceabilityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TraceabilityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TraceabilityGroupByOutputType[P]>
            : GetScalarType<T[P], TraceabilityGroupByOutputType[P]>
        }
      >
    >


  export type traceabilitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reason?: boolean
    document_no?: boolean
    total_animal?: boolean
    origin_farm_id?: boolean
    origin_pen_id?: boolean
    destination_farm_id?: boolean
    destination_pen_id?: boolean
    specific_destination_name?: boolean
    destination_province?: boolean
    shipment_date?: boolean
    estimated_arrival_date?: boolean
    destination_type?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability_cattle?: boolean | traceability$traceability_cattleArgs<ExtArgs>
    traceability_status?: boolean | traceability$traceability_statusArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability$traceability_vehicleArgs<ExtArgs>
    _count?: boolean | TraceabilityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability"]>

  export type traceabilitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reason?: boolean
    document_no?: boolean
    total_animal?: boolean
    origin_farm_id?: boolean
    origin_pen_id?: boolean
    destination_farm_id?: boolean
    destination_pen_id?: boolean
    specific_destination_name?: boolean
    destination_province?: boolean
    shipment_date?: boolean
    estimated_arrival_date?: boolean
    destination_type?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["traceability"]>

  export type traceabilitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reason?: boolean
    document_no?: boolean
    total_animal?: boolean
    origin_farm_id?: boolean
    origin_pen_id?: boolean
    destination_farm_id?: boolean
    destination_pen_id?: boolean
    specific_destination_name?: boolean
    destination_province?: boolean
    shipment_date?: boolean
    estimated_arrival_date?: boolean
    destination_type?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }, ExtArgs["result"]["traceability"]>

  export type traceabilitySelectScalar = {
    id?: boolean
    reason?: boolean
    document_no?: boolean
    total_animal?: boolean
    origin_farm_id?: boolean
    origin_pen_id?: boolean
    destination_farm_id?: boolean
    destination_pen_id?: boolean
    specific_destination_name?: boolean
    destination_province?: boolean
    shipment_date?: boolean
    estimated_arrival_date?: boolean
    destination_type?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type traceabilityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reason" | "document_no" | "total_animal" | "origin_farm_id" | "origin_pen_id" | "destination_farm_id" | "destination_pen_id" | "specific_destination_name" | "destination_province" | "shipment_date" | "estimated_arrival_date" | "destination_type" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["traceability"]>
  export type traceabilityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability_cattle?: boolean | traceability$traceability_cattleArgs<ExtArgs>
    traceability_status?: boolean | traceability$traceability_statusArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability$traceability_vehicleArgs<ExtArgs>
    _count?: boolean | TraceabilityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type traceabilityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type traceabilityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $traceabilityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "traceability"
    objects: {
      traceability_cattle: Prisma.$traceability_cattlePayload<ExtArgs>[]
      traceability_status: Prisma.$traceability_statusPayload<ExtArgs>[]
      traceability_vehicle: Prisma.$traceability_vehiclePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      reason: string
      document_no: string
      total_animal: number
      origin_farm_id: string
      origin_pen_id: string
      destination_farm_id: string | null
      destination_pen_id: string | null
      specific_destination_name: string | null
      destination_province: string | null
      shipment_date: Date
      estimated_arrival_date: Date
      destination_type: string
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["traceability"]>
    composites: {}
  }

  type traceabilityGetPayload<S extends boolean | null | undefined | traceabilityDefaultArgs> = $Result.GetResult<Prisma.$traceabilityPayload, S>

  type traceabilityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<traceabilityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TraceabilityCountAggregateInputType | true
    }

  export interface traceabilityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['traceability'], meta: { name: 'traceability' } }
    /**
     * Find zero or one Traceability that matches the filter.
     * @param {traceabilityFindUniqueArgs} args - Arguments to find a Traceability
     * @example
     * // Get one Traceability
     * const traceability = await prisma.traceability.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends traceabilityFindUniqueArgs>(args: SelectSubset<T, traceabilityFindUniqueArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Traceability that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {traceabilityFindUniqueOrThrowArgs} args - Arguments to find a Traceability
     * @example
     * // Get one Traceability
     * const traceability = await prisma.traceability.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends traceabilityFindUniqueOrThrowArgs>(args: SelectSubset<T, traceabilityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceabilityFindFirstArgs} args - Arguments to find a Traceability
     * @example
     * // Get one Traceability
     * const traceability = await prisma.traceability.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends traceabilityFindFirstArgs>(args?: SelectSubset<T, traceabilityFindFirstArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceabilityFindFirstOrThrowArgs} args - Arguments to find a Traceability
     * @example
     * // Get one Traceability
     * const traceability = await prisma.traceability.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends traceabilityFindFirstOrThrowArgs>(args?: SelectSubset<T, traceabilityFindFirstOrThrowArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Traceabilities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceabilityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Traceabilities
     * const traceabilities = await prisma.traceability.findMany()
     * 
     * // Get first 10 Traceabilities
     * const traceabilities = await prisma.traceability.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const traceabilityWithIdOnly = await prisma.traceability.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends traceabilityFindManyArgs>(args?: SelectSubset<T, traceabilityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Traceability.
     * @param {traceabilityCreateArgs} args - Arguments to create a Traceability.
     * @example
     * // Create one Traceability
     * const Traceability = await prisma.traceability.create({
     *   data: {
     *     // ... data to create a Traceability
     *   }
     * })
     * 
     */
    create<T extends traceabilityCreateArgs>(args: SelectSubset<T, traceabilityCreateArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Traceabilities.
     * @param {traceabilityCreateManyArgs} args - Arguments to create many Traceabilities.
     * @example
     * // Create many Traceabilities
     * const traceability = await prisma.traceability.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends traceabilityCreateManyArgs>(args?: SelectSubset<T, traceabilityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Traceabilities and returns the data saved in the database.
     * @param {traceabilityCreateManyAndReturnArgs} args - Arguments to create many Traceabilities.
     * @example
     * // Create many Traceabilities
     * const traceability = await prisma.traceability.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Traceabilities and only return the `id`
     * const traceabilityWithIdOnly = await prisma.traceability.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends traceabilityCreateManyAndReturnArgs>(args?: SelectSubset<T, traceabilityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Traceability.
     * @param {traceabilityDeleteArgs} args - Arguments to delete one Traceability.
     * @example
     * // Delete one Traceability
     * const Traceability = await prisma.traceability.delete({
     *   where: {
     *     // ... filter to delete one Traceability
     *   }
     * })
     * 
     */
    delete<T extends traceabilityDeleteArgs>(args: SelectSubset<T, traceabilityDeleteArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Traceability.
     * @param {traceabilityUpdateArgs} args - Arguments to update one Traceability.
     * @example
     * // Update one Traceability
     * const traceability = await prisma.traceability.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends traceabilityUpdateArgs>(args: SelectSubset<T, traceabilityUpdateArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Traceabilities.
     * @param {traceabilityDeleteManyArgs} args - Arguments to filter Traceabilities to delete.
     * @example
     * // Delete a few Traceabilities
     * const { count } = await prisma.traceability.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends traceabilityDeleteManyArgs>(args?: SelectSubset<T, traceabilityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceabilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceabilityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Traceabilities
     * const traceability = await prisma.traceability.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends traceabilityUpdateManyArgs>(args: SelectSubset<T, traceabilityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceabilities and returns the data updated in the database.
     * @param {traceabilityUpdateManyAndReturnArgs} args - Arguments to update many Traceabilities.
     * @example
     * // Update many Traceabilities
     * const traceability = await prisma.traceability.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Traceabilities and only return the `id`
     * const traceabilityWithIdOnly = await prisma.traceability.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends traceabilityUpdateManyAndReturnArgs>(args: SelectSubset<T, traceabilityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Traceability.
     * @param {traceabilityUpsertArgs} args - Arguments to update or create a Traceability.
     * @example
     * // Update or create a Traceability
     * const traceability = await prisma.traceability.upsert({
     *   create: {
     *     // ... data to create a Traceability
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Traceability we want to update
     *   }
     * })
     */
    upsert<T extends traceabilityUpsertArgs>(args: SelectSubset<T, traceabilityUpsertArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Traceabilities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceabilityCountArgs} args - Arguments to filter Traceabilities to count.
     * @example
     * // Count the number of Traceabilities
     * const count = await prisma.traceability.count({
     *   where: {
     *     // ... the filter for the Traceabilities we want to count
     *   }
     * })
    **/
    count<T extends traceabilityCountArgs>(
      args?: Subset<T, traceabilityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TraceabilityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Traceability.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TraceabilityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TraceabilityAggregateArgs>(args: Subset<T, TraceabilityAggregateArgs>): Prisma.PrismaPromise<GetTraceabilityAggregateType<T>>

    /**
     * Group by Traceability.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceabilityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends traceabilityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: traceabilityGroupByArgs['orderBy'] }
        : { orderBy?: traceabilityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, traceabilityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTraceabilityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the traceability model
   */
  readonly fields: traceabilityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for traceability.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__traceabilityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    traceability_cattle<T extends traceability$traceability_cattleArgs<ExtArgs> = {}>(args?: Subset<T, traceability$traceability_cattleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    traceability_status<T extends traceability$traceability_statusArgs<ExtArgs> = {}>(args?: Subset<T, traceability$traceability_statusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    traceability_vehicle<T extends traceability$traceability_vehicleArgs<ExtArgs> = {}>(args?: Subset<T, traceability$traceability_vehicleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the traceability model
   */
  interface traceabilityFieldRefs {
    readonly id: FieldRef<"traceability", 'String'>
    readonly reason: FieldRef<"traceability", 'String'>
    readonly document_no: FieldRef<"traceability", 'String'>
    readonly total_animal: FieldRef<"traceability", 'Int'>
    readonly origin_farm_id: FieldRef<"traceability", 'String'>
    readonly origin_pen_id: FieldRef<"traceability", 'String'>
    readonly destination_farm_id: FieldRef<"traceability", 'String'>
    readonly destination_pen_id: FieldRef<"traceability", 'String'>
    readonly specific_destination_name: FieldRef<"traceability", 'String'>
    readonly destination_province: FieldRef<"traceability", 'String'>
    readonly shipment_date: FieldRef<"traceability", 'DateTime'>
    readonly estimated_arrival_date: FieldRef<"traceability", 'DateTime'>
    readonly destination_type: FieldRef<"traceability", 'String'>
    readonly status: FieldRef<"traceability", 'String'>
    readonly created_at: FieldRef<"traceability", 'DateTime'>
    readonly created_by_id: FieldRef<"traceability", 'String'>
    readonly created_by: FieldRef<"traceability", 'String'>
    readonly updated_at: FieldRef<"traceability", 'DateTime'>
    readonly updated_by_id: FieldRef<"traceability", 'String'>
    readonly updated_by: FieldRef<"traceability", 'String'>
  }
    

  // Custom InputTypes
  /**
   * traceability findUnique
   */
  export type traceabilityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * Filter, which traceability to fetch.
     */
    where: traceabilityWhereUniqueInput
  }

  /**
   * traceability findUniqueOrThrow
   */
  export type traceabilityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * Filter, which traceability to fetch.
     */
    where: traceabilityWhereUniqueInput
  }

  /**
   * traceability findFirst
   */
  export type traceabilityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * Filter, which traceability to fetch.
     */
    where?: traceabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceabilities to fetch.
     */
    orderBy?: traceabilityOrderByWithRelationInput | traceabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceabilities.
     */
    cursor?: traceabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceabilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceabilities.
     */
    distinct?: TraceabilityScalarFieldEnum | TraceabilityScalarFieldEnum[]
  }

  /**
   * traceability findFirstOrThrow
   */
  export type traceabilityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * Filter, which traceability to fetch.
     */
    where?: traceabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceabilities to fetch.
     */
    orderBy?: traceabilityOrderByWithRelationInput | traceabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceabilities.
     */
    cursor?: traceabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceabilities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceabilities.
     */
    distinct?: TraceabilityScalarFieldEnum | TraceabilityScalarFieldEnum[]
  }

  /**
   * traceability findMany
   */
  export type traceabilityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * Filter, which traceabilities to fetch.
     */
    where?: traceabilityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceabilities to fetch.
     */
    orderBy?: traceabilityOrderByWithRelationInput | traceabilityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing traceabilities.
     */
    cursor?: traceabilityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceabilities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceabilities.
     */
    skip?: number
    distinct?: TraceabilityScalarFieldEnum | TraceabilityScalarFieldEnum[]
  }

  /**
   * traceability create
   */
  export type traceabilityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * The data needed to create a traceability.
     */
    data: XOR<traceabilityCreateInput, traceabilityUncheckedCreateInput>
  }

  /**
   * traceability createMany
   */
  export type traceabilityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many traceabilities.
     */
    data: traceabilityCreateManyInput | traceabilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * traceability createManyAndReturn
   */
  export type traceabilityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * The data used to create many traceabilities.
     */
    data: traceabilityCreateManyInput | traceabilityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * traceability update
   */
  export type traceabilityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * The data needed to update a traceability.
     */
    data: XOR<traceabilityUpdateInput, traceabilityUncheckedUpdateInput>
    /**
     * Choose, which traceability to update.
     */
    where: traceabilityWhereUniqueInput
  }

  /**
   * traceability updateMany
   */
  export type traceabilityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update traceabilities.
     */
    data: XOR<traceabilityUpdateManyMutationInput, traceabilityUncheckedUpdateManyInput>
    /**
     * Filter which traceabilities to update
     */
    where?: traceabilityWhereInput
    /**
     * Limit how many traceabilities to update.
     */
    limit?: number
  }

  /**
   * traceability updateManyAndReturn
   */
  export type traceabilityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * The data used to update traceabilities.
     */
    data: XOR<traceabilityUpdateManyMutationInput, traceabilityUncheckedUpdateManyInput>
    /**
     * Filter which traceabilities to update
     */
    where?: traceabilityWhereInput
    /**
     * Limit how many traceabilities to update.
     */
    limit?: number
  }

  /**
   * traceability upsert
   */
  export type traceabilityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * The filter to search for the traceability to update in case it exists.
     */
    where: traceabilityWhereUniqueInput
    /**
     * In case the traceability found by the `where` argument doesn't exist, create a new traceability with this data.
     */
    create: XOR<traceabilityCreateInput, traceabilityUncheckedCreateInput>
    /**
     * In case the traceability was found with the provided `where` argument, update it with this data.
     */
    update: XOR<traceabilityUpdateInput, traceabilityUncheckedUpdateInput>
  }

  /**
   * traceability delete
   */
  export type traceabilityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
    /**
     * Filter which traceability to delete.
     */
    where: traceabilityWhereUniqueInput
  }

  /**
   * traceability deleteMany
   */
  export type traceabilityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceabilities to delete
     */
    where?: traceabilityWhereInput
    /**
     * Limit how many traceabilities to delete.
     */
    limit?: number
  }

  /**
   * traceability.traceability_cattle
   */
  export type traceability$traceability_cattleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    where?: traceability_cattleWhereInput
    orderBy?: traceability_cattleOrderByWithRelationInput | traceability_cattleOrderByWithRelationInput[]
    cursor?: traceability_cattleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Traceability_cattleScalarFieldEnum | Traceability_cattleScalarFieldEnum[]
  }

  /**
   * traceability.traceability_status
   */
  export type traceability$traceability_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    where?: traceability_statusWhereInput
    orderBy?: traceability_statusOrderByWithRelationInput | traceability_statusOrderByWithRelationInput[]
    cursor?: traceability_statusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Traceability_statusScalarFieldEnum | Traceability_statusScalarFieldEnum[]
  }

  /**
   * traceability.traceability_vehicle
   */
  export type traceability$traceability_vehicleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    where?: traceability_vehicleWhereInput
    orderBy?: traceability_vehicleOrderByWithRelationInput | traceability_vehicleOrderByWithRelationInput[]
    cursor?: traceability_vehicleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Traceability_vehicleScalarFieldEnum | Traceability_vehicleScalarFieldEnum[]
  }

  /**
   * traceability without action
   */
  export type traceabilityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability
     */
    select?: traceabilitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability
     */
    omit?: traceabilityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceabilityInclude<ExtArgs> | null
  }


  /**
   * Model traceability_cattle
   */

  export type AggregateTraceability_cattle = {
    _count: Traceability_cattleCountAggregateOutputType | null
    _min: Traceability_cattleMinAggregateOutputType | null
    _max: Traceability_cattleMaxAggregateOutputType | null
  }

  export type Traceability_cattleMinAggregateOutputType = {
    id: string | null
    traceability_id: string | null
    vehicle_id: string | null
    cattle_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Traceability_cattleMaxAggregateOutputType = {
    id: string | null
    traceability_id: string | null
    vehicle_id: string | null
    cattle_id: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Traceability_cattleCountAggregateOutputType = {
    id: number
    traceability_id: number
    vehicle_id: number
    cattle_id: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Traceability_cattleMinAggregateInputType = {
    id?: true
    traceability_id?: true
    vehicle_id?: true
    cattle_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Traceability_cattleMaxAggregateInputType = {
    id?: true
    traceability_id?: true
    vehicle_id?: true
    cattle_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Traceability_cattleCountAggregateInputType = {
    id?: true
    traceability_id?: true
    vehicle_id?: true
    cattle_id?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Traceability_cattleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability_cattle to aggregate.
     */
    where?: traceability_cattleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_cattles to fetch.
     */
    orderBy?: traceability_cattleOrderByWithRelationInput | traceability_cattleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: traceability_cattleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_cattles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned traceability_cattles
    **/
    _count?: true | Traceability_cattleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Traceability_cattleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Traceability_cattleMaxAggregateInputType
  }

  export type GetTraceability_cattleAggregateType<T extends Traceability_cattleAggregateArgs> = {
        [P in keyof T & keyof AggregateTraceability_cattle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTraceability_cattle[P]>
      : GetScalarType<T[P], AggregateTraceability_cattle[P]>
  }




  export type traceability_cattleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_cattleWhereInput
    orderBy?: traceability_cattleOrderByWithAggregationInput | traceability_cattleOrderByWithAggregationInput[]
    by: Traceability_cattleScalarFieldEnum[] | Traceability_cattleScalarFieldEnum
    having?: traceability_cattleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Traceability_cattleCountAggregateInputType | true
    _min?: Traceability_cattleMinAggregateInputType
    _max?: Traceability_cattleMaxAggregateInputType
  }

  export type Traceability_cattleGroupByOutputType = {
    id: string
    traceability_id: string
    vehicle_id: string
    cattle_id: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Traceability_cattleCountAggregateOutputType | null
    _min: Traceability_cattleMinAggregateOutputType | null
    _max: Traceability_cattleMaxAggregateOutputType | null
  }

  type GetTraceability_cattleGroupByPayload<T extends traceability_cattleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Traceability_cattleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Traceability_cattleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Traceability_cattleGroupByOutputType[P]>
            : GetScalarType<T[P], Traceability_cattleGroupByOutputType[P]>
        }
      >
    >


  export type traceability_cattleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    vehicle_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability_vehicleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_cattle"]>

  export type traceability_cattleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    vehicle_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability_vehicleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_cattle"]>

  export type traceability_cattleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    vehicle_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability_vehicleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_cattle"]>

  export type traceability_cattleSelectScalar = {
    id?: boolean
    traceability_id?: boolean
    vehicle_id?: boolean
    cattle_id?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type traceability_cattleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "traceability_id" | "vehicle_id" | "cattle_id" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["traceability_cattle"]>
  export type traceability_cattleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability_vehicleDefaultArgs<ExtArgs>
  }
  export type traceability_cattleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability_vehicleDefaultArgs<ExtArgs>
  }
  export type traceability_cattleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    traceability_vehicle?: boolean | traceability_vehicleDefaultArgs<ExtArgs>
  }

  export type $traceability_cattlePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "traceability_cattle"
    objects: {
      traceability: Prisma.$traceabilityPayload<ExtArgs>
      traceability_vehicle: Prisma.$traceability_vehiclePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      traceability_id: string
      vehicle_id: string
      cattle_id: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["traceability_cattle"]>
    composites: {}
  }

  type traceability_cattleGetPayload<S extends boolean | null | undefined | traceability_cattleDefaultArgs> = $Result.GetResult<Prisma.$traceability_cattlePayload, S>

  type traceability_cattleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<traceability_cattleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Traceability_cattleCountAggregateInputType | true
    }

  export interface traceability_cattleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['traceability_cattle'], meta: { name: 'traceability_cattle' } }
    /**
     * Find zero or one Traceability_cattle that matches the filter.
     * @param {traceability_cattleFindUniqueArgs} args - Arguments to find a Traceability_cattle
     * @example
     * // Get one Traceability_cattle
     * const traceability_cattle = await prisma.traceability_cattle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends traceability_cattleFindUniqueArgs>(args: SelectSubset<T, traceability_cattleFindUniqueArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Traceability_cattle that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {traceability_cattleFindUniqueOrThrowArgs} args - Arguments to find a Traceability_cattle
     * @example
     * // Get one Traceability_cattle
     * const traceability_cattle = await prisma.traceability_cattle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends traceability_cattleFindUniqueOrThrowArgs>(args: SelectSubset<T, traceability_cattleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability_cattle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_cattleFindFirstArgs} args - Arguments to find a Traceability_cattle
     * @example
     * // Get one Traceability_cattle
     * const traceability_cattle = await prisma.traceability_cattle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends traceability_cattleFindFirstArgs>(args?: SelectSubset<T, traceability_cattleFindFirstArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability_cattle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_cattleFindFirstOrThrowArgs} args - Arguments to find a Traceability_cattle
     * @example
     * // Get one Traceability_cattle
     * const traceability_cattle = await prisma.traceability_cattle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends traceability_cattleFindFirstOrThrowArgs>(args?: SelectSubset<T, traceability_cattleFindFirstOrThrowArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Traceability_cattles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_cattleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Traceability_cattles
     * const traceability_cattles = await prisma.traceability_cattle.findMany()
     * 
     * // Get first 10 Traceability_cattles
     * const traceability_cattles = await prisma.traceability_cattle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const traceability_cattleWithIdOnly = await prisma.traceability_cattle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends traceability_cattleFindManyArgs>(args?: SelectSubset<T, traceability_cattleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Traceability_cattle.
     * @param {traceability_cattleCreateArgs} args - Arguments to create a Traceability_cattle.
     * @example
     * // Create one Traceability_cattle
     * const Traceability_cattle = await prisma.traceability_cattle.create({
     *   data: {
     *     // ... data to create a Traceability_cattle
     *   }
     * })
     * 
     */
    create<T extends traceability_cattleCreateArgs>(args: SelectSubset<T, traceability_cattleCreateArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Traceability_cattles.
     * @param {traceability_cattleCreateManyArgs} args - Arguments to create many Traceability_cattles.
     * @example
     * // Create many Traceability_cattles
     * const traceability_cattle = await prisma.traceability_cattle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends traceability_cattleCreateManyArgs>(args?: SelectSubset<T, traceability_cattleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Traceability_cattles and returns the data saved in the database.
     * @param {traceability_cattleCreateManyAndReturnArgs} args - Arguments to create many Traceability_cattles.
     * @example
     * // Create many Traceability_cattles
     * const traceability_cattle = await prisma.traceability_cattle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Traceability_cattles and only return the `id`
     * const traceability_cattleWithIdOnly = await prisma.traceability_cattle.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends traceability_cattleCreateManyAndReturnArgs>(args?: SelectSubset<T, traceability_cattleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Traceability_cattle.
     * @param {traceability_cattleDeleteArgs} args - Arguments to delete one Traceability_cattle.
     * @example
     * // Delete one Traceability_cattle
     * const Traceability_cattle = await prisma.traceability_cattle.delete({
     *   where: {
     *     // ... filter to delete one Traceability_cattle
     *   }
     * })
     * 
     */
    delete<T extends traceability_cattleDeleteArgs>(args: SelectSubset<T, traceability_cattleDeleteArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Traceability_cattle.
     * @param {traceability_cattleUpdateArgs} args - Arguments to update one Traceability_cattle.
     * @example
     * // Update one Traceability_cattle
     * const traceability_cattle = await prisma.traceability_cattle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends traceability_cattleUpdateArgs>(args: SelectSubset<T, traceability_cattleUpdateArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Traceability_cattles.
     * @param {traceability_cattleDeleteManyArgs} args - Arguments to filter Traceability_cattles to delete.
     * @example
     * // Delete a few Traceability_cattles
     * const { count } = await prisma.traceability_cattle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends traceability_cattleDeleteManyArgs>(args?: SelectSubset<T, traceability_cattleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceability_cattles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_cattleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Traceability_cattles
     * const traceability_cattle = await prisma.traceability_cattle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends traceability_cattleUpdateManyArgs>(args: SelectSubset<T, traceability_cattleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceability_cattles and returns the data updated in the database.
     * @param {traceability_cattleUpdateManyAndReturnArgs} args - Arguments to update many Traceability_cattles.
     * @example
     * // Update many Traceability_cattles
     * const traceability_cattle = await prisma.traceability_cattle.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Traceability_cattles and only return the `id`
     * const traceability_cattleWithIdOnly = await prisma.traceability_cattle.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends traceability_cattleUpdateManyAndReturnArgs>(args: SelectSubset<T, traceability_cattleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Traceability_cattle.
     * @param {traceability_cattleUpsertArgs} args - Arguments to update or create a Traceability_cattle.
     * @example
     * // Update or create a Traceability_cattle
     * const traceability_cattle = await prisma.traceability_cattle.upsert({
     *   create: {
     *     // ... data to create a Traceability_cattle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Traceability_cattle we want to update
     *   }
     * })
     */
    upsert<T extends traceability_cattleUpsertArgs>(args: SelectSubset<T, traceability_cattleUpsertArgs<ExtArgs>>): Prisma__traceability_cattleClient<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Traceability_cattles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_cattleCountArgs} args - Arguments to filter Traceability_cattles to count.
     * @example
     * // Count the number of Traceability_cattles
     * const count = await prisma.traceability_cattle.count({
     *   where: {
     *     // ... the filter for the Traceability_cattles we want to count
     *   }
     * })
    **/
    count<T extends traceability_cattleCountArgs>(
      args?: Subset<T, traceability_cattleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Traceability_cattleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Traceability_cattle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Traceability_cattleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Traceability_cattleAggregateArgs>(args: Subset<T, Traceability_cattleAggregateArgs>): Prisma.PrismaPromise<GetTraceability_cattleAggregateType<T>>

    /**
     * Group by Traceability_cattle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_cattleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends traceability_cattleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: traceability_cattleGroupByArgs['orderBy'] }
        : { orderBy?: traceability_cattleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, traceability_cattleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTraceability_cattleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the traceability_cattle model
   */
  readonly fields: traceability_cattleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for traceability_cattle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__traceability_cattleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    traceability<T extends traceabilityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, traceabilityDefaultArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    traceability_vehicle<T extends traceability_vehicleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, traceability_vehicleDefaultArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the traceability_cattle model
   */
  interface traceability_cattleFieldRefs {
    readonly id: FieldRef<"traceability_cattle", 'String'>
    readonly traceability_id: FieldRef<"traceability_cattle", 'String'>
    readonly vehicle_id: FieldRef<"traceability_cattle", 'String'>
    readonly cattle_id: FieldRef<"traceability_cattle", 'String'>
    readonly created_at: FieldRef<"traceability_cattle", 'DateTime'>
    readonly created_by_id: FieldRef<"traceability_cattle", 'String'>
    readonly created_by: FieldRef<"traceability_cattle", 'String'>
    readonly updated_at: FieldRef<"traceability_cattle", 'DateTime'>
    readonly updated_by_id: FieldRef<"traceability_cattle", 'String'>
    readonly updated_by: FieldRef<"traceability_cattle", 'String'>
  }
    

  // Custom InputTypes
  /**
   * traceability_cattle findUnique
   */
  export type traceability_cattleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_cattle to fetch.
     */
    where: traceability_cattleWhereUniqueInput
  }

  /**
   * traceability_cattle findUniqueOrThrow
   */
  export type traceability_cattleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_cattle to fetch.
     */
    where: traceability_cattleWhereUniqueInput
  }

  /**
   * traceability_cattle findFirst
   */
  export type traceability_cattleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_cattle to fetch.
     */
    where?: traceability_cattleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_cattles to fetch.
     */
    orderBy?: traceability_cattleOrderByWithRelationInput | traceability_cattleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceability_cattles.
     */
    cursor?: traceability_cattleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_cattles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceability_cattles.
     */
    distinct?: Traceability_cattleScalarFieldEnum | Traceability_cattleScalarFieldEnum[]
  }

  /**
   * traceability_cattle findFirstOrThrow
   */
  export type traceability_cattleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_cattle to fetch.
     */
    where?: traceability_cattleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_cattles to fetch.
     */
    orderBy?: traceability_cattleOrderByWithRelationInput | traceability_cattleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceability_cattles.
     */
    cursor?: traceability_cattleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_cattles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceability_cattles.
     */
    distinct?: Traceability_cattleScalarFieldEnum | Traceability_cattleScalarFieldEnum[]
  }

  /**
   * traceability_cattle findMany
   */
  export type traceability_cattleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_cattles to fetch.
     */
    where?: traceability_cattleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_cattles to fetch.
     */
    orderBy?: traceability_cattleOrderByWithRelationInput | traceability_cattleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing traceability_cattles.
     */
    cursor?: traceability_cattleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_cattles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_cattles.
     */
    skip?: number
    distinct?: Traceability_cattleScalarFieldEnum | Traceability_cattleScalarFieldEnum[]
  }

  /**
   * traceability_cattle create
   */
  export type traceability_cattleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * The data needed to create a traceability_cattle.
     */
    data: XOR<traceability_cattleCreateInput, traceability_cattleUncheckedCreateInput>
  }

  /**
   * traceability_cattle createMany
   */
  export type traceability_cattleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many traceability_cattles.
     */
    data: traceability_cattleCreateManyInput | traceability_cattleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * traceability_cattle createManyAndReturn
   */
  export type traceability_cattleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * The data used to create many traceability_cattles.
     */
    data: traceability_cattleCreateManyInput | traceability_cattleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * traceability_cattle update
   */
  export type traceability_cattleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * The data needed to update a traceability_cattle.
     */
    data: XOR<traceability_cattleUpdateInput, traceability_cattleUncheckedUpdateInput>
    /**
     * Choose, which traceability_cattle to update.
     */
    where: traceability_cattleWhereUniqueInput
  }

  /**
   * traceability_cattle updateMany
   */
  export type traceability_cattleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update traceability_cattles.
     */
    data: XOR<traceability_cattleUpdateManyMutationInput, traceability_cattleUncheckedUpdateManyInput>
    /**
     * Filter which traceability_cattles to update
     */
    where?: traceability_cattleWhereInput
    /**
     * Limit how many traceability_cattles to update.
     */
    limit?: number
  }

  /**
   * traceability_cattle updateManyAndReturn
   */
  export type traceability_cattleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * The data used to update traceability_cattles.
     */
    data: XOR<traceability_cattleUpdateManyMutationInput, traceability_cattleUncheckedUpdateManyInput>
    /**
     * Filter which traceability_cattles to update
     */
    where?: traceability_cattleWhereInput
    /**
     * Limit how many traceability_cattles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * traceability_cattle upsert
   */
  export type traceability_cattleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * The filter to search for the traceability_cattle to update in case it exists.
     */
    where: traceability_cattleWhereUniqueInput
    /**
     * In case the traceability_cattle found by the `where` argument doesn't exist, create a new traceability_cattle with this data.
     */
    create: XOR<traceability_cattleCreateInput, traceability_cattleUncheckedCreateInput>
    /**
     * In case the traceability_cattle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<traceability_cattleUpdateInput, traceability_cattleUncheckedUpdateInput>
  }

  /**
   * traceability_cattle delete
   */
  export type traceability_cattleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    /**
     * Filter which traceability_cattle to delete.
     */
    where: traceability_cattleWhereUniqueInput
  }

  /**
   * traceability_cattle deleteMany
   */
  export type traceability_cattleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability_cattles to delete
     */
    where?: traceability_cattleWhereInput
    /**
     * Limit how many traceability_cattles to delete.
     */
    limit?: number
  }

  /**
   * traceability_cattle without action
   */
  export type traceability_cattleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
  }


  /**
   * Model traceability_status
   */

  export type AggregateTraceability_status = {
    _count: Traceability_statusCountAggregateOutputType | null
    _min: Traceability_statusMinAggregateOutputType | null
    _max: Traceability_statusMaxAggregateOutputType | null
  }

  export type Traceability_statusMinAggregateOutputType = {
    id: string | null
    traceability_id: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Traceability_statusMaxAggregateOutputType = {
    id: string | null
    traceability_id: string | null
    status: string | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Traceability_statusCountAggregateOutputType = {
    id: number
    traceability_id: number
    status: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Traceability_statusMinAggregateInputType = {
    id?: true
    traceability_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Traceability_statusMaxAggregateInputType = {
    id?: true
    traceability_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Traceability_statusCountAggregateInputType = {
    id?: true
    traceability_id?: true
    status?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Traceability_statusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability_status to aggregate.
     */
    where?: traceability_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_statuses to fetch.
     */
    orderBy?: traceability_statusOrderByWithRelationInput | traceability_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: traceability_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned traceability_statuses
    **/
    _count?: true | Traceability_statusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Traceability_statusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Traceability_statusMaxAggregateInputType
  }

  export type GetTraceability_statusAggregateType<T extends Traceability_statusAggregateArgs> = {
        [P in keyof T & keyof AggregateTraceability_status]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTraceability_status[P]>
      : GetScalarType<T[P], AggregateTraceability_status[P]>
  }




  export type traceability_statusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_statusWhereInput
    orderBy?: traceability_statusOrderByWithAggregationInput | traceability_statusOrderByWithAggregationInput[]
    by: Traceability_statusScalarFieldEnum[] | Traceability_statusScalarFieldEnum
    having?: traceability_statusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Traceability_statusCountAggregateInputType | true
    _min?: Traceability_statusMinAggregateInputType
    _max?: Traceability_statusMaxAggregateInputType
  }

  export type Traceability_statusGroupByOutputType = {
    id: string
    traceability_id: string
    status: string
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Traceability_statusCountAggregateOutputType | null
    _min: Traceability_statusMinAggregateOutputType | null
    _max: Traceability_statusMaxAggregateOutputType | null
  }

  type GetTraceability_statusGroupByPayload<T extends traceability_statusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Traceability_statusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Traceability_statusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Traceability_statusGroupByOutputType[P]>
            : GetScalarType<T[P], Traceability_statusGroupByOutputType[P]>
        }
      >
    >


  export type traceability_statusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_status"]>

  export type traceability_statusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_status"]>

  export type traceability_statusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_status"]>

  export type traceability_statusSelectScalar = {
    id?: boolean
    traceability_id?: boolean
    status?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type traceability_statusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "traceability_id" | "status" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["traceability_status"]>
  export type traceability_statusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }
  export type traceability_statusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }
  export type traceability_statusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }

  export type $traceability_statusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "traceability_status"
    objects: {
      traceability: Prisma.$traceabilityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      traceability_id: string
      status: string
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["traceability_status"]>
    composites: {}
  }

  type traceability_statusGetPayload<S extends boolean | null | undefined | traceability_statusDefaultArgs> = $Result.GetResult<Prisma.$traceability_statusPayload, S>

  type traceability_statusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<traceability_statusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Traceability_statusCountAggregateInputType | true
    }

  export interface traceability_statusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['traceability_status'], meta: { name: 'traceability_status' } }
    /**
     * Find zero or one Traceability_status that matches the filter.
     * @param {traceability_statusFindUniqueArgs} args - Arguments to find a Traceability_status
     * @example
     * // Get one Traceability_status
     * const traceability_status = await prisma.traceability_status.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends traceability_statusFindUniqueArgs>(args: SelectSubset<T, traceability_statusFindUniqueArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Traceability_status that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {traceability_statusFindUniqueOrThrowArgs} args - Arguments to find a Traceability_status
     * @example
     * // Get one Traceability_status
     * const traceability_status = await prisma.traceability_status.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends traceability_statusFindUniqueOrThrowArgs>(args: SelectSubset<T, traceability_statusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability_status that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_statusFindFirstArgs} args - Arguments to find a Traceability_status
     * @example
     * // Get one Traceability_status
     * const traceability_status = await prisma.traceability_status.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends traceability_statusFindFirstArgs>(args?: SelectSubset<T, traceability_statusFindFirstArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability_status that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_statusFindFirstOrThrowArgs} args - Arguments to find a Traceability_status
     * @example
     * // Get one Traceability_status
     * const traceability_status = await prisma.traceability_status.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends traceability_statusFindFirstOrThrowArgs>(args?: SelectSubset<T, traceability_statusFindFirstOrThrowArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Traceability_statuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_statusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Traceability_statuses
     * const traceability_statuses = await prisma.traceability_status.findMany()
     * 
     * // Get first 10 Traceability_statuses
     * const traceability_statuses = await prisma.traceability_status.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const traceability_statusWithIdOnly = await prisma.traceability_status.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends traceability_statusFindManyArgs>(args?: SelectSubset<T, traceability_statusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Traceability_status.
     * @param {traceability_statusCreateArgs} args - Arguments to create a Traceability_status.
     * @example
     * // Create one Traceability_status
     * const Traceability_status = await prisma.traceability_status.create({
     *   data: {
     *     // ... data to create a Traceability_status
     *   }
     * })
     * 
     */
    create<T extends traceability_statusCreateArgs>(args: SelectSubset<T, traceability_statusCreateArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Traceability_statuses.
     * @param {traceability_statusCreateManyArgs} args - Arguments to create many Traceability_statuses.
     * @example
     * // Create many Traceability_statuses
     * const traceability_status = await prisma.traceability_status.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends traceability_statusCreateManyArgs>(args?: SelectSubset<T, traceability_statusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Traceability_statuses and returns the data saved in the database.
     * @param {traceability_statusCreateManyAndReturnArgs} args - Arguments to create many Traceability_statuses.
     * @example
     * // Create many Traceability_statuses
     * const traceability_status = await prisma.traceability_status.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Traceability_statuses and only return the `id`
     * const traceability_statusWithIdOnly = await prisma.traceability_status.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends traceability_statusCreateManyAndReturnArgs>(args?: SelectSubset<T, traceability_statusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Traceability_status.
     * @param {traceability_statusDeleteArgs} args - Arguments to delete one Traceability_status.
     * @example
     * // Delete one Traceability_status
     * const Traceability_status = await prisma.traceability_status.delete({
     *   where: {
     *     // ... filter to delete one Traceability_status
     *   }
     * })
     * 
     */
    delete<T extends traceability_statusDeleteArgs>(args: SelectSubset<T, traceability_statusDeleteArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Traceability_status.
     * @param {traceability_statusUpdateArgs} args - Arguments to update one Traceability_status.
     * @example
     * // Update one Traceability_status
     * const traceability_status = await prisma.traceability_status.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends traceability_statusUpdateArgs>(args: SelectSubset<T, traceability_statusUpdateArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Traceability_statuses.
     * @param {traceability_statusDeleteManyArgs} args - Arguments to filter Traceability_statuses to delete.
     * @example
     * // Delete a few Traceability_statuses
     * const { count } = await prisma.traceability_status.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends traceability_statusDeleteManyArgs>(args?: SelectSubset<T, traceability_statusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceability_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_statusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Traceability_statuses
     * const traceability_status = await prisma.traceability_status.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends traceability_statusUpdateManyArgs>(args: SelectSubset<T, traceability_statusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceability_statuses and returns the data updated in the database.
     * @param {traceability_statusUpdateManyAndReturnArgs} args - Arguments to update many Traceability_statuses.
     * @example
     * // Update many Traceability_statuses
     * const traceability_status = await prisma.traceability_status.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Traceability_statuses and only return the `id`
     * const traceability_statusWithIdOnly = await prisma.traceability_status.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends traceability_statusUpdateManyAndReturnArgs>(args: SelectSubset<T, traceability_statusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Traceability_status.
     * @param {traceability_statusUpsertArgs} args - Arguments to update or create a Traceability_status.
     * @example
     * // Update or create a Traceability_status
     * const traceability_status = await prisma.traceability_status.upsert({
     *   create: {
     *     // ... data to create a Traceability_status
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Traceability_status we want to update
     *   }
     * })
     */
    upsert<T extends traceability_statusUpsertArgs>(args: SelectSubset<T, traceability_statusUpsertArgs<ExtArgs>>): Prisma__traceability_statusClient<$Result.GetResult<Prisma.$traceability_statusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Traceability_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_statusCountArgs} args - Arguments to filter Traceability_statuses to count.
     * @example
     * // Count the number of Traceability_statuses
     * const count = await prisma.traceability_status.count({
     *   where: {
     *     // ... the filter for the Traceability_statuses we want to count
     *   }
     * })
    **/
    count<T extends traceability_statusCountArgs>(
      args?: Subset<T, traceability_statusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Traceability_statusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Traceability_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Traceability_statusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Traceability_statusAggregateArgs>(args: Subset<T, Traceability_statusAggregateArgs>): Prisma.PrismaPromise<GetTraceability_statusAggregateType<T>>

    /**
     * Group by Traceability_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_statusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends traceability_statusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: traceability_statusGroupByArgs['orderBy'] }
        : { orderBy?: traceability_statusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, traceability_statusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTraceability_statusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the traceability_status model
   */
  readonly fields: traceability_statusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for traceability_status.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__traceability_statusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    traceability<T extends traceabilityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, traceabilityDefaultArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the traceability_status model
   */
  interface traceability_statusFieldRefs {
    readonly id: FieldRef<"traceability_status", 'String'>
    readonly traceability_id: FieldRef<"traceability_status", 'String'>
    readonly status: FieldRef<"traceability_status", 'String'>
    readonly created_at: FieldRef<"traceability_status", 'DateTime'>
    readonly created_by_id: FieldRef<"traceability_status", 'String'>
    readonly created_by: FieldRef<"traceability_status", 'String'>
    readonly updated_at: FieldRef<"traceability_status", 'DateTime'>
    readonly updated_by_id: FieldRef<"traceability_status", 'String'>
    readonly updated_by: FieldRef<"traceability_status", 'String'>
  }
    

  // Custom InputTypes
  /**
   * traceability_status findUnique
   */
  export type traceability_statusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * Filter, which traceability_status to fetch.
     */
    where: traceability_statusWhereUniqueInput
  }

  /**
   * traceability_status findUniqueOrThrow
   */
  export type traceability_statusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * Filter, which traceability_status to fetch.
     */
    where: traceability_statusWhereUniqueInput
  }

  /**
   * traceability_status findFirst
   */
  export type traceability_statusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * Filter, which traceability_status to fetch.
     */
    where?: traceability_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_statuses to fetch.
     */
    orderBy?: traceability_statusOrderByWithRelationInput | traceability_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceability_statuses.
     */
    cursor?: traceability_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceability_statuses.
     */
    distinct?: Traceability_statusScalarFieldEnum | Traceability_statusScalarFieldEnum[]
  }

  /**
   * traceability_status findFirstOrThrow
   */
  export type traceability_statusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * Filter, which traceability_status to fetch.
     */
    where?: traceability_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_statuses to fetch.
     */
    orderBy?: traceability_statusOrderByWithRelationInput | traceability_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceability_statuses.
     */
    cursor?: traceability_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceability_statuses.
     */
    distinct?: Traceability_statusScalarFieldEnum | Traceability_statusScalarFieldEnum[]
  }

  /**
   * traceability_status findMany
   */
  export type traceability_statusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * Filter, which traceability_statuses to fetch.
     */
    where?: traceability_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_statuses to fetch.
     */
    orderBy?: traceability_statusOrderByWithRelationInput | traceability_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing traceability_statuses.
     */
    cursor?: traceability_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_statuses.
     */
    skip?: number
    distinct?: Traceability_statusScalarFieldEnum | Traceability_statusScalarFieldEnum[]
  }

  /**
   * traceability_status create
   */
  export type traceability_statusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * The data needed to create a traceability_status.
     */
    data: XOR<traceability_statusCreateInput, traceability_statusUncheckedCreateInput>
  }

  /**
   * traceability_status createMany
   */
  export type traceability_statusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many traceability_statuses.
     */
    data: traceability_statusCreateManyInput | traceability_statusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * traceability_status createManyAndReturn
   */
  export type traceability_statusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * The data used to create many traceability_statuses.
     */
    data: traceability_statusCreateManyInput | traceability_statusCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * traceability_status update
   */
  export type traceability_statusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * The data needed to update a traceability_status.
     */
    data: XOR<traceability_statusUpdateInput, traceability_statusUncheckedUpdateInput>
    /**
     * Choose, which traceability_status to update.
     */
    where: traceability_statusWhereUniqueInput
  }

  /**
   * traceability_status updateMany
   */
  export type traceability_statusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update traceability_statuses.
     */
    data: XOR<traceability_statusUpdateManyMutationInput, traceability_statusUncheckedUpdateManyInput>
    /**
     * Filter which traceability_statuses to update
     */
    where?: traceability_statusWhereInput
    /**
     * Limit how many traceability_statuses to update.
     */
    limit?: number
  }

  /**
   * traceability_status updateManyAndReturn
   */
  export type traceability_statusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * The data used to update traceability_statuses.
     */
    data: XOR<traceability_statusUpdateManyMutationInput, traceability_statusUncheckedUpdateManyInput>
    /**
     * Filter which traceability_statuses to update
     */
    where?: traceability_statusWhereInput
    /**
     * Limit how many traceability_statuses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * traceability_status upsert
   */
  export type traceability_statusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * The filter to search for the traceability_status to update in case it exists.
     */
    where: traceability_statusWhereUniqueInput
    /**
     * In case the traceability_status found by the `where` argument doesn't exist, create a new traceability_status with this data.
     */
    create: XOR<traceability_statusCreateInput, traceability_statusUncheckedCreateInput>
    /**
     * In case the traceability_status was found with the provided `where` argument, update it with this data.
     */
    update: XOR<traceability_statusUpdateInput, traceability_statusUncheckedUpdateInput>
  }

  /**
   * traceability_status delete
   */
  export type traceability_statusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
    /**
     * Filter which traceability_status to delete.
     */
    where: traceability_statusWhereUniqueInput
  }

  /**
   * traceability_status deleteMany
   */
  export type traceability_statusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability_statuses to delete
     */
    where?: traceability_statusWhereInput
    /**
     * Limit how many traceability_statuses to delete.
     */
    limit?: number
  }

  /**
   * traceability_status without action
   */
  export type traceability_statusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_status
     */
    select?: traceability_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_status
     */
    omit?: traceability_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_statusInclude<ExtArgs> | null
  }


  /**
   * Model traceability_vehicle
   */

  export type AggregateTraceability_vehicle = {
    _count: Traceability_vehicleCountAggregateOutputType | null
    _min: Traceability_vehicleMinAggregateOutputType | null
    _max: Traceability_vehicleMaxAggregateOutputType | null
  }

  export type Traceability_vehicleMinAggregateOutputType = {
    id: string | null
    traceability_id: string | null
    vehicle_type: string | null
    vehicle_registration: string | null
    transport_company_name: string | null
    driver_title: string | null
    driver_first_name: string | null
    driver_middle_name: string | null
    driver_last_name: string | null
    contact_title: string | null
    contact_first_name: string | null
    contact_middle_name: string | null
    contact_last_name: string | null
    contact_phone: string | null
    is_contract_same_driver: boolean | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Traceability_vehicleMaxAggregateOutputType = {
    id: string | null
    traceability_id: string | null
    vehicle_type: string | null
    vehicle_registration: string | null
    transport_company_name: string | null
    driver_title: string | null
    driver_first_name: string | null
    driver_middle_name: string | null
    driver_last_name: string | null
    contact_title: string | null
    contact_first_name: string | null
    contact_middle_name: string | null
    contact_last_name: string | null
    contact_phone: string | null
    is_contract_same_driver: boolean | null
    created_at: Date | null
    created_by_id: string | null
    created_by: string | null
    updated_at: Date | null
    updated_by_id: string | null
    updated_by: string | null
  }

  export type Traceability_vehicleCountAggregateOutputType = {
    id: number
    traceability_id: number
    vehicle_type: number
    vehicle_registration: number
    transport_company_name: number
    driver_title: number
    driver_first_name: number
    driver_middle_name: number
    driver_last_name: number
    contact_title: number
    contact_first_name: number
    contact_middle_name: number
    contact_last_name: number
    contact_phone: number
    is_contract_same_driver: number
    created_at: number
    created_by_id: number
    created_by: number
    updated_at: number
    updated_by_id: number
    updated_by: number
    _all: number
  }


  export type Traceability_vehicleMinAggregateInputType = {
    id?: true
    traceability_id?: true
    vehicle_type?: true
    vehicle_registration?: true
    transport_company_name?: true
    driver_title?: true
    driver_first_name?: true
    driver_middle_name?: true
    driver_last_name?: true
    contact_title?: true
    contact_first_name?: true
    contact_middle_name?: true
    contact_last_name?: true
    contact_phone?: true
    is_contract_same_driver?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Traceability_vehicleMaxAggregateInputType = {
    id?: true
    traceability_id?: true
    vehicle_type?: true
    vehicle_registration?: true
    transport_company_name?: true
    driver_title?: true
    driver_first_name?: true
    driver_middle_name?: true
    driver_last_name?: true
    contact_title?: true
    contact_first_name?: true
    contact_middle_name?: true
    contact_last_name?: true
    contact_phone?: true
    is_contract_same_driver?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
  }

  export type Traceability_vehicleCountAggregateInputType = {
    id?: true
    traceability_id?: true
    vehicle_type?: true
    vehicle_registration?: true
    transport_company_name?: true
    driver_title?: true
    driver_first_name?: true
    driver_middle_name?: true
    driver_last_name?: true
    contact_title?: true
    contact_first_name?: true
    contact_middle_name?: true
    contact_last_name?: true
    contact_phone?: true
    is_contract_same_driver?: true
    created_at?: true
    created_by_id?: true
    created_by?: true
    updated_at?: true
    updated_by_id?: true
    updated_by?: true
    _all?: true
  }

  export type Traceability_vehicleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability_vehicle to aggregate.
     */
    where?: traceability_vehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_vehicles to fetch.
     */
    orderBy?: traceability_vehicleOrderByWithRelationInput | traceability_vehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: traceability_vehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned traceability_vehicles
    **/
    _count?: true | Traceability_vehicleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Traceability_vehicleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Traceability_vehicleMaxAggregateInputType
  }

  export type GetTraceability_vehicleAggregateType<T extends Traceability_vehicleAggregateArgs> = {
        [P in keyof T & keyof AggregateTraceability_vehicle]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTraceability_vehicle[P]>
      : GetScalarType<T[P], AggregateTraceability_vehicle[P]>
  }




  export type traceability_vehicleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: traceability_vehicleWhereInput
    orderBy?: traceability_vehicleOrderByWithAggregationInput | traceability_vehicleOrderByWithAggregationInput[]
    by: Traceability_vehicleScalarFieldEnum[] | Traceability_vehicleScalarFieldEnum
    having?: traceability_vehicleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Traceability_vehicleCountAggregateInputType | true
    _min?: Traceability_vehicleMinAggregateInputType
    _max?: Traceability_vehicleMaxAggregateInputType
  }

  export type Traceability_vehicleGroupByOutputType = {
    id: string
    traceability_id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name: string | null
    driver_last_name: string
    contact_title: string | null
    contact_first_name: string | null
    contact_middle_name: string | null
    contact_last_name: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date
    created_by_id: string
    created_by: string
    updated_at: Date
    updated_by_id: string
    updated_by: string
    _count: Traceability_vehicleCountAggregateOutputType | null
    _min: Traceability_vehicleMinAggregateOutputType | null
    _max: Traceability_vehicleMaxAggregateOutputType | null
  }

  type GetTraceability_vehicleGroupByPayload<T extends traceability_vehicleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Traceability_vehicleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Traceability_vehicleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Traceability_vehicleGroupByOutputType[P]>
            : GetScalarType<T[P], Traceability_vehicleGroupByOutputType[P]>
        }
      >
    >


  export type traceability_vehicleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    vehicle_type?: boolean
    vehicle_registration?: boolean
    transport_company_name?: boolean
    driver_title?: boolean
    driver_first_name?: boolean
    driver_middle_name?: boolean
    driver_last_name?: boolean
    contact_title?: boolean
    contact_first_name?: boolean
    contact_middle_name?: boolean
    contact_last_name?: boolean
    contact_phone?: boolean
    is_contract_same_driver?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability_cattle?: boolean | traceability_vehicle$traceability_cattleArgs<ExtArgs>
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    _count?: boolean | Traceability_vehicleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_vehicle"]>

  export type traceability_vehicleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    vehicle_type?: boolean
    vehicle_registration?: boolean
    transport_company_name?: boolean
    driver_title?: boolean
    driver_first_name?: boolean
    driver_middle_name?: boolean
    driver_last_name?: boolean
    contact_title?: boolean
    contact_first_name?: boolean
    contact_middle_name?: boolean
    contact_last_name?: boolean
    contact_phone?: boolean
    is_contract_same_driver?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_vehicle"]>

  export type traceability_vehicleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    traceability_id?: boolean
    vehicle_type?: boolean
    vehicle_registration?: boolean
    transport_company_name?: boolean
    driver_title?: boolean
    driver_first_name?: boolean
    driver_middle_name?: boolean
    driver_last_name?: boolean
    contact_title?: boolean
    contact_first_name?: boolean
    contact_middle_name?: boolean
    contact_last_name?: boolean
    contact_phone?: boolean
    is_contract_same_driver?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["traceability_vehicle"]>

  export type traceability_vehicleSelectScalar = {
    id?: boolean
    traceability_id?: boolean
    vehicle_type?: boolean
    vehicle_registration?: boolean
    transport_company_name?: boolean
    driver_title?: boolean
    driver_first_name?: boolean
    driver_middle_name?: boolean
    driver_last_name?: boolean
    contact_title?: boolean
    contact_first_name?: boolean
    contact_middle_name?: boolean
    contact_last_name?: boolean
    contact_phone?: boolean
    is_contract_same_driver?: boolean
    created_at?: boolean
    created_by_id?: boolean
    created_by?: boolean
    updated_at?: boolean
    updated_by_id?: boolean
    updated_by?: boolean
  }

  export type traceability_vehicleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "traceability_id" | "vehicle_type" | "vehicle_registration" | "transport_company_name" | "driver_title" | "driver_first_name" | "driver_middle_name" | "driver_last_name" | "contact_title" | "contact_first_name" | "contact_middle_name" | "contact_last_name" | "contact_phone" | "is_contract_same_driver" | "created_at" | "created_by_id" | "created_by" | "updated_at" | "updated_by_id" | "updated_by", ExtArgs["result"]["traceability_vehicle"]>
  export type traceability_vehicleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability_cattle?: boolean | traceability_vehicle$traceability_cattleArgs<ExtArgs>
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
    _count?: boolean | Traceability_vehicleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type traceability_vehicleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }
  export type traceability_vehicleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    traceability?: boolean | traceabilityDefaultArgs<ExtArgs>
  }

  export type $traceability_vehiclePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "traceability_vehicle"
    objects: {
      traceability_cattle: Prisma.$traceability_cattlePayload<ExtArgs>[]
      traceability: Prisma.$traceabilityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      traceability_id: string
      vehicle_type: string
      vehicle_registration: string
      transport_company_name: string
      driver_title: string
      driver_first_name: string
      driver_middle_name: string | null
      driver_last_name: string
      contact_title: string | null
      contact_first_name: string | null
      contact_middle_name: string | null
      contact_last_name: string | null
      contact_phone: string
      is_contract_same_driver: boolean
      created_at: Date
      created_by_id: string
      created_by: string
      updated_at: Date
      updated_by_id: string
      updated_by: string
    }, ExtArgs["result"]["traceability_vehicle"]>
    composites: {}
  }

  type traceability_vehicleGetPayload<S extends boolean | null | undefined | traceability_vehicleDefaultArgs> = $Result.GetResult<Prisma.$traceability_vehiclePayload, S>

  type traceability_vehicleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<traceability_vehicleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Traceability_vehicleCountAggregateInputType | true
    }

  export interface traceability_vehicleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['traceability_vehicle'], meta: { name: 'traceability_vehicle' } }
    /**
     * Find zero or one Traceability_vehicle that matches the filter.
     * @param {traceability_vehicleFindUniqueArgs} args - Arguments to find a Traceability_vehicle
     * @example
     * // Get one Traceability_vehicle
     * const traceability_vehicle = await prisma.traceability_vehicle.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends traceability_vehicleFindUniqueArgs>(args: SelectSubset<T, traceability_vehicleFindUniqueArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Traceability_vehicle that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {traceability_vehicleFindUniqueOrThrowArgs} args - Arguments to find a Traceability_vehicle
     * @example
     * // Get one Traceability_vehicle
     * const traceability_vehicle = await prisma.traceability_vehicle.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends traceability_vehicleFindUniqueOrThrowArgs>(args: SelectSubset<T, traceability_vehicleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability_vehicle that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_vehicleFindFirstArgs} args - Arguments to find a Traceability_vehicle
     * @example
     * // Get one Traceability_vehicle
     * const traceability_vehicle = await prisma.traceability_vehicle.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends traceability_vehicleFindFirstArgs>(args?: SelectSubset<T, traceability_vehicleFindFirstArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Traceability_vehicle that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_vehicleFindFirstOrThrowArgs} args - Arguments to find a Traceability_vehicle
     * @example
     * // Get one Traceability_vehicle
     * const traceability_vehicle = await prisma.traceability_vehicle.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends traceability_vehicleFindFirstOrThrowArgs>(args?: SelectSubset<T, traceability_vehicleFindFirstOrThrowArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Traceability_vehicles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_vehicleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Traceability_vehicles
     * const traceability_vehicles = await prisma.traceability_vehicle.findMany()
     * 
     * // Get first 10 Traceability_vehicles
     * const traceability_vehicles = await prisma.traceability_vehicle.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const traceability_vehicleWithIdOnly = await prisma.traceability_vehicle.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends traceability_vehicleFindManyArgs>(args?: SelectSubset<T, traceability_vehicleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Traceability_vehicle.
     * @param {traceability_vehicleCreateArgs} args - Arguments to create a Traceability_vehicle.
     * @example
     * // Create one Traceability_vehicle
     * const Traceability_vehicle = await prisma.traceability_vehicle.create({
     *   data: {
     *     // ... data to create a Traceability_vehicle
     *   }
     * })
     * 
     */
    create<T extends traceability_vehicleCreateArgs>(args: SelectSubset<T, traceability_vehicleCreateArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Traceability_vehicles.
     * @param {traceability_vehicleCreateManyArgs} args - Arguments to create many Traceability_vehicles.
     * @example
     * // Create many Traceability_vehicles
     * const traceability_vehicle = await prisma.traceability_vehicle.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends traceability_vehicleCreateManyArgs>(args?: SelectSubset<T, traceability_vehicleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Traceability_vehicles and returns the data saved in the database.
     * @param {traceability_vehicleCreateManyAndReturnArgs} args - Arguments to create many Traceability_vehicles.
     * @example
     * // Create many Traceability_vehicles
     * const traceability_vehicle = await prisma.traceability_vehicle.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Traceability_vehicles and only return the `id`
     * const traceability_vehicleWithIdOnly = await prisma.traceability_vehicle.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends traceability_vehicleCreateManyAndReturnArgs>(args?: SelectSubset<T, traceability_vehicleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Traceability_vehicle.
     * @param {traceability_vehicleDeleteArgs} args - Arguments to delete one Traceability_vehicle.
     * @example
     * // Delete one Traceability_vehicle
     * const Traceability_vehicle = await prisma.traceability_vehicle.delete({
     *   where: {
     *     // ... filter to delete one Traceability_vehicle
     *   }
     * })
     * 
     */
    delete<T extends traceability_vehicleDeleteArgs>(args: SelectSubset<T, traceability_vehicleDeleteArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Traceability_vehicle.
     * @param {traceability_vehicleUpdateArgs} args - Arguments to update one Traceability_vehicle.
     * @example
     * // Update one Traceability_vehicle
     * const traceability_vehicle = await prisma.traceability_vehicle.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends traceability_vehicleUpdateArgs>(args: SelectSubset<T, traceability_vehicleUpdateArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Traceability_vehicles.
     * @param {traceability_vehicleDeleteManyArgs} args - Arguments to filter Traceability_vehicles to delete.
     * @example
     * // Delete a few Traceability_vehicles
     * const { count } = await prisma.traceability_vehicle.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends traceability_vehicleDeleteManyArgs>(args?: SelectSubset<T, traceability_vehicleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceability_vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_vehicleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Traceability_vehicles
     * const traceability_vehicle = await prisma.traceability_vehicle.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends traceability_vehicleUpdateManyArgs>(args: SelectSubset<T, traceability_vehicleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Traceability_vehicles and returns the data updated in the database.
     * @param {traceability_vehicleUpdateManyAndReturnArgs} args - Arguments to update many Traceability_vehicles.
     * @example
     * // Update many Traceability_vehicles
     * const traceability_vehicle = await prisma.traceability_vehicle.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Traceability_vehicles and only return the `id`
     * const traceability_vehicleWithIdOnly = await prisma.traceability_vehicle.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends traceability_vehicleUpdateManyAndReturnArgs>(args: SelectSubset<T, traceability_vehicleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Traceability_vehicle.
     * @param {traceability_vehicleUpsertArgs} args - Arguments to update or create a Traceability_vehicle.
     * @example
     * // Update or create a Traceability_vehicle
     * const traceability_vehicle = await prisma.traceability_vehicle.upsert({
     *   create: {
     *     // ... data to create a Traceability_vehicle
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Traceability_vehicle we want to update
     *   }
     * })
     */
    upsert<T extends traceability_vehicleUpsertArgs>(args: SelectSubset<T, traceability_vehicleUpsertArgs<ExtArgs>>): Prisma__traceability_vehicleClient<$Result.GetResult<Prisma.$traceability_vehiclePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Traceability_vehicles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_vehicleCountArgs} args - Arguments to filter Traceability_vehicles to count.
     * @example
     * // Count the number of Traceability_vehicles
     * const count = await prisma.traceability_vehicle.count({
     *   where: {
     *     // ... the filter for the Traceability_vehicles we want to count
     *   }
     * })
    **/
    count<T extends traceability_vehicleCountArgs>(
      args?: Subset<T, traceability_vehicleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Traceability_vehicleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Traceability_vehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Traceability_vehicleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Traceability_vehicleAggregateArgs>(args: Subset<T, Traceability_vehicleAggregateArgs>): Prisma.PrismaPromise<GetTraceability_vehicleAggregateType<T>>

    /**
     * Group by Traceability_vehicle.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {traceability_vehicleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends traceability_vehicleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: traceability_vehicleGroupByArgs['orderBy'] }
        : { orderBy?: traceability_vehicleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, traceability_vehicleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTraceability_vehicleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the traceability_vehicle model
   */
  readonly fields: traceability_vehicleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for traceability_vehicle.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__traceability_vehicleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    traceability_cattle<T extends traceability_vehicle$traceability_cattleArgs<ExtArgs> = {}>(args?: Subset<T, traceability_vehicle$traceability_cattleArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$traceability_cattlePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    traceability<T extends traceabilityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, traceabilityDefaultArgs<ExtArgs>>): Prisma__traceabilityClient<$Result.GetResult<Prisma.$traceabilityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the traceability_vehicle model
   */
  interface traceability_vehicleFieldRefs {
    readonly id: FieldRef<"traceability_vehicle", 'String'>
    readonly traceability_id: FieldRef<"traceability_vehicle", 'String'>
    readonly vehicle_type: FieldRef<"traceability_vehicle", 'String'>
    readonly vehicle_registration: FieldRef<"traceability_vehicle", 'String'>
    readonly transport_company_name: FieldRef<"traceability_vehicle", 'String'>
    readonly driver_title: FieldRef<"traceability_vehicle", 'String'>
    readonly driver_first_name: FieldRef<"traceability_vehicle", 'String'>
    readonly driver_middle_name: FieldRef<"traceability_vehicle", 'String'>
    readonly driver_last_name: FieldRef<"traceability_vehicle", 'String'>
    readonly contact_title: FieldRef<"traceability_vehicle", 'String'>
    readonly contact_first_name: FieldRef<"traceability_vehicle", 'String'>
    readonly contact_middle_name: FieldRef<"traceability_vehicle", 'String'>
    readonly contact_last_name: FieldRef<"traceability_vehicle", 'String'>
    readonly contact_phone: FieldRef<"traceability_vehicle", 'String'>
    readonly is_contract_same_driver: FieldRef<"traceability_vehicle", 'Boolean'>
    readonly created_at: FieldRef<"traceability_vehicle", 'DateTime'>
    readonly created_by_id: FieldRef<"traceability_vehicle", 'String'>
    readonly created_by: FieldRef<"traceability_vehicle", 'String'>
    readonly updated_at: FieldRef<"traceability_vehicle", 'DateTime'>
    readonly updated_by_id: FieldRef<"traceability_vehicle", 'String'>
    readonly updated_by: FieldRef<"traceability_vehicle", 'String'>
  }
    

  // Custom InputTypes
  /**
   * traceability_vehicle findUnique
   */
  export type traceability_vehicleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_vehicle to fetch.
     */
    where: traceability_vehicleWhereUniqueInput
  }

  /**
   * traceability_vehicle findUniqueOrThrow
   */
  export type traceability_vehicleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_vehicle to fetch.
     */
    where: traceability_vehicleWhereUniqueInput
  }

  /**
   * traceability_vehicle findFirst
   */
  export type traceability_vehicleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_vehicle to fetch.
     */
    where?: traceability_vehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_vehicles to fetch.
     */
    orderBy?: traceability_vehicleOrderByWithRelationInput | traceability_vehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceability_vehicles.
     */
    cursor?: traceability_vehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceability_vehicles.
     */
    distinct?: Traceability_vehicleScalarFieldEnum | Traceability_vehicleScalarFieldEnum[]
  }

  /**
   * traceability_vehicle findFirstOrThrow
   */
  export type traceability_vehicleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_vehicle to fetch.
     */
    where?: traceability_vehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_vehicles to fetch.
     */
    orderBy?: traceability_vehicleOrderByWithRelationInput | traceability_vehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for traceability_vehicles.
     */
    cursor?: traceability_vehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_vehicles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of traceability_vehicles.
     */
    distinct?: Traceability_vehicleScalarFieldEnum | Traceability_vehicleScalarFieldEnum[]
  }

  /**
   * traceability_vehicle findMany
   */
  export type traceability_vehicleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * Filter, which traceability_vehicles to fetch.
     */
    where?: traceability_vehicleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of traceability_vehicles to fetch.
     */
    orderBy?: traceability_vehicleOrderByWithRelationInput | traceability_vehicleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing traceability_vehicles.
     */
    cursor?: traceability_vehicleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` traceability_vehicles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` traceability_vehicles.
     */
    skip?: number
    distinct?: Traceability_vehicleScalarFieldEnum | Traceability_vehicleScalarFieldEnum[]
  }

  /**
   * traceability_vehicle create
   */
  export type traceability_vehicleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * The data needed to create a traceability_vehicle.
     */
    data: XOR<traceability_vehicleCreateInput, traceability_vehicleUncheckedCreateInput>
  }

  /**
   * traceability_vehicle createMany
   */
  export type traceability_vehicleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many traceability_vehicles.
     */
    data: traceability_vehicleCreateManyInput | traceability_vehicleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * traceability_vehicle createManyAndReturn
   */
  export type traceability_vehicleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * The data used to create many traceability_vehicles.
     */
    data: traceability_vehicleCreateManyInput | traceability_vehicleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * traceability_vehicle update
   */
  export type traceability_vehicleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * The data needed to update a traceability_vehicle.
     */
    data: XOR<traceability_vehicleUpdateInput, traceability_vehicleUncheckedUpdateInput>
    /**
     * Choose, which traceability_vehicle to update.
     */
    where: traceability_vehicleWhereUniqueInput
  }

  /**
   * traceability_vehicle updateMany
   */
  export type traceability_vehicleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update traceability_vehicles.
     */
    data: XOR<traceability_vehicleUpdateManyMutationInput, traceability_vehicleUncheckedUpdateManyInput>
    /**
     * Filter which traceability_vehicles to update
     */
    where?: traceability_vehicleWhereInput
    /**
     * Limit how many traceability_vehicles to update.
     */
    limit?: number
  }

  /**
   * traceability_vehicle updateManyAndReturn
   */
  export type traceability_vehicleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * The data used to update traceability_vehicles.
     */
    data: XOR<traceability_vehicleUpdateManyMutationInput, traceability_vehicleUncheckedUpdateManyInput>
    /**
     * Filter which traceability_vehicles to update
     */
    where?: traceability_vehicleWhereInput
    /**
     * Limit how many traceability_vehicles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * traceability_vehicle upsert
   */
  export type traceability_vehicleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * The filter to search for the traceability_vehicle to update in case it exists.
     */
    where: traceability_vehicleWhereUniqueInput
    /**
     * In case the traceability_vehicle found by the `where` argument doesn't exist, create a new traceability_vehicle with this data.
     */
    create: XOR<traceability_vehicleCreateInput, traceability_vehicleUncheckedCreateInput>
    /**
     * In case the traceability_vehicle was found with the provided `where` argument, update it with this data.
     */
    update: XOR<traceability_vehicleUpdateInput, traceability_vehicleUncheckedUpdateInput>
  }

  /**
   * traceability_vehicle delete
   */
  export type traceability_vehicleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
    /**
     * Filter which traceability_vehicle to delete.
     */
    where: traceability_vehicleWhereUniqueInput
  }

  /**
   * traceability_vehicle deleteMany
   */
  export type traceability_vehicleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which traceability_vehicles to delete
     */
    where?: traceability_vehicleWhereInput
    /**
     * Limit how many traceability_vehicles to delete.
     */
    limit?: number
  }

  /**
   * traceability_vehicle.traceability_cattle
   */
  export type traceability_vehicle$traceability_cattleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_cattle
     */
    select?: traceability_cattleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_cattle
     */
    omit?: traceability_cattleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_cattleInclude<ExtArgs> | null
    where?: traceability_cattleWhereInput
    orderBy?: traceability_cattleOrderByWithRelationInput | traceability_cattleOrderByWithRelationInput[]
    cursor?: traceability_cattleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Traceability_cattleScalarFieldEnum | Traceability_cattleScalarFieldEnum[]
  }

  /**
   * traceability_vehicle without action
   */
  export type traceability_vehicleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the traceability_vehicle
     */
    select?: traceability_vehicleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the traceability_vehicle
     */
    omit?: traceability_vehicleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: traceability_vehicleInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AdminsScalarFieldEnum: {
    id: 'id',
    email: 'email',
    citizen_id: 'citizen_id',
    masking_citizen_id: 'masking_citizen_id',
    password: 'password',
    title: 'title',
    first_name: 'first_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    pic_url: 'pic_url',
    permissions: 'permissions',
    role_id: 'role_id',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type AdminsScalarFieldEnum = (typeof AdminsScalarFieldEnum)[keyof typeof AdminsScalarFieldEnum]


  export const Buyer_attachmentsScalarFieldEnum: {
    id: 'id',
    buyer_id: 'buyer_id',
    file_name: 'file_name',
    file_path: 'file_path',
    is_public: 'is_public',
    content_type: 'content_type',
    description: 'description',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Buyer_attachmentsScalarFieldEnum = (typeof Buyer_attachmentsScalarFieldEnum)[keyof typeof Buyer_attachmentsScalarFieldEnum]


  export const BuyersScalarFieldEnum: {
    id: 'id',
    buyer_code: 'buyer_code',
    company_name: 'company_name',
    comp_registration_id: 'comp_registration_id',
    country: 'country',
    address: 'address',
    title: 'title',
    first_name: 'first_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    phone_number: 'phone_number',
    email: 'email',
    whatsapp: 'whatsapp',
    wechat: 'wechat',
    line_id: 'line_id',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by',
    country_code: 'country_code'
  };

  export type BuyersScalarFieldEnum = (typeof BuyersScalarFieldEnum)[keyof typeof BuyersScalarFieldEnum]


  export const Cattle_attachmentsScalarFieldEnum: {
    id: 'id',
    cattle_id: 'cattle_id',
    file_name: 'file_name',
    file_path: 'file_path',
    is_public: 'is_public',
    content_type: 'content_type',
    description: 'description',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_attachmentsScalarFieldEnum = (typeof Cattle_attachmentsScalarFieldEnum)[keyof typeof Cattle_attachmentsScalarFieldEnum]


  export const Cattle_breedsScalarFieldEnum: {
    id: 'id',
    name_en: 'name_en',
    name_th: 'name_th',
    short_name: 'short_name',
    remark: 'remark',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_breedsScalarFieldEnum = (typeof Cattle_breedsScalarFieldEnum)[keyof typeof Cattle_breedsScalarFieldEnum]


  export const Cattle_create_stagedScalarFieldEnum: {
    id: 'id',
    staged_id: 'staged_id',
    order_request_id: 'order_request_id',
    farm_sourcing_id: 'farm_sourcing_id',
    farm_id: 'farm_id',
    pen_id: 'pen_id',
    cattle_type_id: 'cattle_type_id',
    cattle_breed_ids: 'cattle_breed_ids',
    nid: 'nid',
    gender: 'gender',
    castration_status: 'castration_status',
    pregnant_status: 'pregnant_status',
    birthdate: 'birthdate',
    passport_no: 'passport_no',
    color: 'color',
    ear: 'ear',
    horn: 'horn',
    weight: 'weight',
    date_weight: 'date_weight',
    tracer_tag: 'tracer_tag',
    breed_sire: 'breed_sire',
    breed_dam: 'breed_dam',
    breed_pgs: 'breed_pgs',
    breed_pgd: 'breed_pgd',
    breed_mgs: 'breed_mgs',
    breed_mgd: 'breed_mgd',
    country_code: 'country_code',
    health_treatment_date: 'health_treatment_date',
    health_veterinary_name: 'health_veterinary_name',
    health_health_condition: 'health_health_condition',
    health_symptom: 'health_symptom',
    health_cause_of_death: 'health_cause_of_death',
    health_treatment: 'health_treatment',
    health_drug_name: 'health_drug_name',
    health_dosage: 'health_dosage',
    health_period_residue: 'health_period_residue',
    vaccination_vaccination_date: 'vaccination_vaccination_date',
    vaccination_veterinary_name: 'vaccination_veterinary_name',
    vaccination_vaccine_type: 'vaccination_vaccine_type',
    vaccination_remark: 'vaccination_remark',
    vaccination_vaccine_id: 'vaccination_vaccine_id',
    vaccination_vaccine_lot_no: 'vaccination_vaccine_lot_no',
    vaccination_vaccine_expiry_date: 'vaccination_vaccine_expiry_date',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_create_stagedScalarFieldEnum = (typeof Cattle_create_stagedScalarFieldEnum)[keyof typeof Cattle_create_stagedScalarFieldEnum]


  export const Cattle_healthsScalarFieldEnum: {
    id: 'id',
    cattle_id: 'cattle_id',
    treatment_date: 'treatment_date',
    veterinary_name: 'veterinary_name',
    health_condition: 'health_condition',
    symptom: 'symptom',
    cause_of_death: 'cause_of_death',
    treatment: 'treatment',
    drug_name: 'drug_name',
    dosage: 'dosage',
    period_residue: 'period_residue',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_healthsScalarFieldEnum = (typeof Cattle_healthsScalarFieldEnum)[keyof typeof Cattle_healthsScalarFieldEnum]


  export const Cattle_matching_order_stagedScalarFieldEnum: {
    id: 'id',
    staged_id: 'staged_id',
    order_request_id: 'order_request_id',
    farm_sourcing_id: 'farm_sourcing_id',
    cattle_ids: 'cattle_ids',
    is_exists_all: 'is_exists_all',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_matching_order_stagedScalarFieldEnum = (typeof Cattle_matching_order_stagedScalarFieldEnum)[keyof typeof Cattle_matching_order_stagedScalarFieldEnum]


  export const Cattle_sourcingScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    order_request_id: 'order_request_id',
    farm_sourcing_id: 'farm_sourcing_id',
    cattle_id: 'cattle_id',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_sourcingScalarFieldEnum = (typeof Cattle_sourcingScalarFieldEnum)[keyof typeof Cattle_sourcingScalarFieldEnum]


  export const Cattle_typesScalarFieldEnum: {
    id: 'id',
    name_en: 'name_en',
    name_th: 'name_th',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_typesScalarFieldEnum = (typeof Cattle_typesScalarFieldEnum)[keyof typeof Cattle_typesScalarFieldEnum]


  export const Cattle_vaccinationsScalarFieldEnum: {
    id: 'id',
    cattle_id: 'cattle_id',
    vaccination_date: 'vaccination_date',
    veterinary_name: 'veterinary_name',
    vaccine_type: 'vaccine_type',
    remark: 'remark',
    vaccine_id: 'vaccine_id',
    vaccine_lot_no: 'vaccine_lot_no',
    vaccine_expiry_date: 'vaccine_expiry_date',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Cattle_vaccinationsScalarFieldEnum = (typeof Cattle_vaccinationsScalarFieldEnum)[keyof typeof Cattle_vaccinationsScalarFieldEnum]


  export const CattlesScalarFieldEnum: {
    id: 'id',
    tracer_id: 'tracer_id',
    farm_id: 'farm_id',
    pen_id: 'pen_id',
    cattle_type_id: 'cattle_type_id',
    cattle_breed_ids: 'cattle_breed_ids',
    traceability_id: 'traceability_id',
    nid: 'nid',
    gender: 'gender',
    castration_status: 'castration_status',
    pregnant_status: 'pregnant_status',
    birthdate: 'birthdate',
    passport_no: 'passport_no',
    color: 'color',
    ear: 'ear',
    horn: 'horn',
    weight: 'weight',
    date_weight: 'date_weight',
    tracer_tag: 'tracer_tag',
    ear_tag: 'ear_tag',
    breed_sire: 'breed_sire',
    breed_dam: 'breed_dam',
    breed_pgs: 'breed_pgs',
    breed_pgd: 'breed_pgd',
    breed_mgs: 'breed_mgs',
    breed_mgd: 'breed_mgd',
    is_sourcing: 'is_sourcing',
    is_tracing: 'is_tracing',
    country_code: 'country_code',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type CattlesScalarFieldEnum = (typeof CattlesScalarFieldEnum)[keyof typeof CattlesScalarFieldEnum]


  export const Data_migrationsScalarFieldEnum: {
    version: 'version',
    dirty: 'dirty'
  };

  export type Data_migrationsScalarFieldEnum = (typeof Data_migrationsScalarFieldEnum)[keyof typeof Data_migrationsScalarFieldEnum]


  export const Farm_attachmentsScalarFieldEnum: {
    id: 'id',
    farm_id: 'farm_id',
    file_name: 'file_name',
    file_path: 'file_path',
    is_public: 'is_public',
    content_type: 'content_type',
    description: 'description',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by',
    encrypted_key: 'encrypted_key'
  };

  export type Farm_attachmentsScalarFieldEnum = (typeof Farm_attachmentsScalarFieldEnum)[keyof typeof Farm_attachmentsScalarFieldEnum]


  export const Farm_authorizedScalarFieldEnum: {
    id: 'id',
    farm_id: 'farm_id',
    authorized_type: 'authorized_type',
    authorized_second_type: 'authorized_second_type',
    license_id: 'license_id',
    expire_date: 'expire_date',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Farm_authorizedScalarFieldEnum = (typeof Farm_authorizedScalarFieldEnum)[keyof typeof Farm_authorizedScalarFieldEnum]


  export const Farm_create_stagedScalarFieldEnum: {
    id: 'id',
    staged_id: 'staged_id',
    farm_identification: 'farm_identification',
    farm_type: 'farm_type',
    ref_1: 'ref_1',
    max_cows: 'max_cows',
    name: 'name',
    standard: 'standard',
    rai: 'rai',
    ngan: 'ngan',
    wa: 'wa',
    address_line1: 'address_line1',
    address_subdistrict: 'address_subdistrict',
    address_district: 'address_district',
    address_province: 'address_province',
    address_zipcode: 'address_zipcode',
    tracer_id: 'tracer_id',
    is_owner_ref_farmer: 'is_owner_ref_farmer',
    farmer_id: 'farmer_id',
    owner_type: 'owner_type',
    owner_tin: 'owner_tin',
    owner_title: 'owner_title',
    owner_first_name: 'owner_first_name',
    owner_middle_name: 'owner_middle_name',
    owner_last_name: 'owner_last_name',
    owner_company_name: 'owner_company_name',
    owner_gender: 'owner_gender',
    owner_birthdate: 'owner_birthdate',
    owner_education_degree: 'owner_education_degree',
    owner_occupation: 'owner_occupation',
    owner_second_occupation: 'owner_second_occupation',
    owner_phone_number: 'owner_phone_number',
    owner_mobile_number: 'owner_mobile_number',
    owner_email: 'owner_email',
    owner_line_id: 'owner_line_id',
    owner_address_line1: 'owner_address_line1',
    owner_address_subdistrict: 'owner_address_subdistrict',
    owner_address_district: 'owner_address_district',
    owner_address_province: 'owner_address_province',
    owner_address_zipcode: 'owner_address_zipcode',
    owner_contact_address_line1: 'owner_contact_address_line1',
    owner_contact_address_subdistrict: 'owner_contact_address_subdistrict',
    owner_contact_address_district: 'owner_contact_address_district',
    owner_contact_address_province: 'owner_contact_address_province',
    owner_contact_address_zipcode: 'owner_contact_address_zipcode',
    authorized_type: 'authorized_type',
    authorized_second_type: 'authorized_second_type',
    authorized_license_id: 'authorized_license_id',
    authorized_expire_date: 'authorized_expire_date',
    veterinary_name: 'veterinary_name',
    veterinary_license_id: 'veterinary_license_id',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by',
    status: 'status'
  };

  export type Farm_create_stagedScalarFieldEnum = (typeof Farm_create_stagedScalarFieldEnum)[keyof typeof Farm_create_stagedScalarFieldEnum]


  export const Farm_sourcingScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    order_request_id: 'order_request_id',
    farm_id: 'farm_id',
    amount: 'amount',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Farm_sourcingScalarFieldEnum = (typeof Farm_sourcingScalarFieldEnum)[keyof typeof Farm_sourcingScalarFieldEnum]


  export const Farm_veterinaryScalarFieldEnum: {
    id: 'id',
    farm_id: 'farm_id',
    name: 'name',
    license_id: 'license_id',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Farm_veterinaryScalarFieldEnum = (typeof Farm_veterinaryScalarFieldEnum)[keyof typeof Farm_veterinaryScalarFieldEnum]


  export const Farmer_accountsScalarFieldEnum: {
    id: 'id',
    farmer_id: 'farmer_id',
    username: 'username',
    password: 'password',
    role_id: 'role_id',
    permissions: 'permissions',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Farmer_accountsScalarFieldEnum = (typeof Farmer_accountsScalarFieldEnum)[keyof typeof Farmer_accountsScalarFieldEnum]


  export const Farmer_attachmentsScalarFieldEnum: {
    id: 'id',
    farmer_id: 'farmer_id',
    file_name: 'file_name',
    file_path: 'file_path',
    is_public: 'is_public',
    content_type: 'content_type',
    description: 'description',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by',
    encrypted_key: 'encrypted_key'
  };

  export type Farmer_attachmentsScalarFieldEnum = (typeof Farmer_attachmentsScalarFieldEnum)[keyof typeof Farmer_attachmentsScalarFieldEnum]


  export const Farmer_create_stagedScalarFieldEnum: {
    id: 'id',
    staged_id: 'staged_id',
    farmer_type: 'farmer_type',
    tin: 'tin',
    title: 'title',
    first_name: 'first_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    company_name: 'company_name',
    gender: 'gender',
    birthdate: 'birthdate',
    education_degree: 'education_degree',
    occupation: 'occupation',
    second_occupation: 'second_occupation',
    phone_number: 'phone_number',
    mobile_number: 'mobile_number',
    email: 'email',
    line_id: 'line_id',
    address_line1: 'address_line1',
    address_subdistrict: 'address_subdistrict',
    address_district: 'address_district',
    address_province: 'address_province',
    address_zipcode: 'address_zipcode',
    contact_address_line1: 'contact_address_line1',
    contact_address_subdistrict: 'contact_address_subdistrict',
    contact_address_district: 'contact_address_district',
    contact_address_province: 'contact_address_province',
    contact_address_zipcode: 'contact_address_zipcode',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Farmer_create_stagedScalarFieldEnum = (typeof Farmer_create_stagedScalarFieldEnum)[keyof typeof Farmer_create_stagedScalarFieldEnum]


  export const FarmersScalarFieldEnum: {
    id: 'id',
    tracer_id: 'tracer_id',
    farmer_type: 'farmer_type',
    tin: 'tin',
    masking_tin: 'masking_tin',
    title: 'title',
    first_name: 'first_name',
    middle_name: 'middle_name',
    last_name: 'last_name',
    company_name: 'company_name',
    gender: 'gender',
    birthdate: 'birthdate',
    education_degree: 'education_degree',
    occupation: 'occupation',
    second_occupation: 'second_occupation',
    phone_number: 'phone_number',
    mobile_number: 'mobile_number',
    email: 'email',
    line_id: 'line_id',
    address_line1: 'address_line1',
    address_subdistrict: 'address_subdistrict',
    address_district: 'address_district',
    address_province: 'address_province',
    address_zipcode: 'address_zipcode',
    contact_address_line1: 'contact_address_line1',
    contact_address_subdistrict: 'contact_address_subdistrict',
    contact_address_district: 'contact_address_district',
    contact_address_province: 'contact_address_province',
    contact_address_zipcode: 'contact_address_zipcode',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type FarmersScalarFieldEnum = (typeof FarmersScalarFieldEnum)[keyof typeof FarmersScalarFieldEnum]


  export const FarmsScalarFieldEnum: {
    id: 'id',
    tracer_id: 'tracer_id',
    farm_identification: 'farm_identification',
    farm_type: 'farm_type',
    max_cows: 'max_cows',
    name: 'name',
    standard: 'standard',
    status: 'status',
    rai: 'rai',
    ngan: 'ngan',
    wa: 'wa',
    address_line1: 'address_line1',
    address_subdistrict: 'address_subdistrict',
    address_district: 'address_district',
    address_province: 'address_province',
    address_zipcode: 'address_zipcode',
    is_owner_ref_farmer: 'is_owner_ref_farmer',
    farmer_id: 'farmer_id',
    owner_type: 'owner_type',
    owner_tin: 'owner_tin',
    owner_masking_tin: 'owner_masking_tin',
    owner_title: 'owner_title',
    owner_first_name: 'owner_first_name',
    owner_middle_name: 'owner_middle_name',
    owner_last_name: 'owner_last_name',
    owner_company_name: 'owner_company_name',
    owner_gender: 'owner_gender',
    owner_birthdate: 'owner_birthdate',
    owner_education_degree: 'owner_education_degree',
    owner_occupation: 'owner_occupation',
    owner_second_occupation: 'owner_second_occupation',
    owner_phone_number: 'owner_phone_number',
    owner_mobile_number: 'owner_mobile_number',
    owner_email: 'owner_email',
    owner_line_id: 'owner_line_id',
    owner_address_line1: 'owner_address_line1',
    owner_address_subdistrict: 'owner_address_subdistrict',
    owner_address_district: 'owner_address_district',
    owner_address_province: 'owner_address_province',
    owner_address_zipcode: 'owner_address_zipcode',
    owner_contact_address_line1: 'owner_contact_address_line1',
    owner_contact_address_subdistrict: 'owner_contact_address_subdistrict',
    owner_contact_address_district: 'owner_contact_address_district',
    owner_contact_address_province: 'owner_contact_address_province',
    owner_contact_address_zipcode: 'owner_contact_address_zipcode',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by',
    ref_1: 'ref_1'
  };

  export type FarmsScalarFieldEnum = (typeof FarmsScalarFieldEnum)[keyof typeof FarmsScalarFieldEnum]


  export const Order_attachmentsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    file_name: 'file_name',
    file_path: 'file_path',
    is_public: 'is_public',
    content_type: 'content_type',
    description: 'description',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Order_attachmentsScalarFieldEnum = (typeof Order_attachmentsScalarFieldEnum)[keyof typeof Order_attachmentsScalarFieldEnum]


  export const Order_requestsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    cattle_breed_id: 'cattle_breed_id',
    cattle_type_ids: 'cattle_type_ids',
    request_amount: 'request_amount',
    received_amount: 'received_amount',
    from_age: 'from_age',
    to_age: 'to_age',
    from_weight: 'from_weight',
    to_weight: 'to_weight',
    castration_status: 'castration_status',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by',
    gender: 'gender',
    pregnant_status: 'pregnant_status'
  };

  export type Order_requestsScalarFieldEnum = (typeof Order_requestsScalarFieldEnum)[keyof typeof Order_requestsScalarFieldEnum]


  export const OrdersScalarFieldEnum: {
    id: 'id',
    buyer_id: 'buyer_id',
    buyer_code: 'buyer_code',
    buyer_company_name: 'buyer_company_name',
    buyer_register_date: 'buyer_register_date',
    order_code: 'order_code',
    remark: 'remark',
    delivery_from_date: 'delivery_from_date',
    delivery_to_date: 'delivery_to_date',
    delivery_type: 'delivery_type',
    origin_address: 'origin_address',
    destination_address: 'destination_address',
    destination_country: 'destination_country',
    destination_country_code: 'destination_country_code',
    total_price: 'total_price',
    quarantine_day: 'quarantine_day',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type OrdersScalarFieldEnum = (typeof OrdersScalarFieldEnum)[keyof typeof OrdersScalarFieldEnum]


  export const Pen_attachmentsScalarFieldEnum: {
    id: 'id',
    pen_id: 'pen_id',
    file_name: 'file_name',
    file_path: 'file_path',
    is_public: 'is_public',
    content_type: 'content_type',
    description: 'description',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Pen_attachmentsScalarFieldEnum = (typeof Pen_attachmentsScalarFieldEnum)[keyof typeof Pen_attachmentsScalarFieldEnum]


  export const PensScalarFieldEnum: {
    id: 'id',
    farm_id: 'farm_id',
    pen_type: 'pen_type',
    pen_number: 'pen_number',
    capacity: 'capacity',
    name: 'name',
    wa: 'wa',
    latitude: 'latitude',
    longitude: 'longitude',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type PensScalarFieldEnum = (typeof PensScalarFieldEnum)[keyof typeof PensScalarFieldEnum]


  export const Schema_migrationsScalarFieldEnum: {
    version: 'version',
    dirty: 'dirty'
  };

  export type Schema_migrationsScalarFieldEnum = (typeof Schema_migrationsScalarFieldEnum)[keyof typeof Schema_migrationsScalarFieldEnum]


  export const TraceabilityScalarFieldEnum: {
    id: 'id',
    reason: 'reason',
    document_no: 'document_no',
    total_animal: 'total_animal',
    origin_farm_id: 'origin_farm_id',
    origin_pen_id: 'origin_pen_id',
    destination_farm_id: 'destination_farm_id',
    destination_pen_id: 'destination_pen_id',
    specific_destination_name: 'specific_destination_name',
    destination_province: 'destination_province',
    shipment_date: 'shipment_date',
    estimated_arrival_date: 'estimated_arrival_date',
    destination_type: 'destination_type',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type TraceabilityScalarFieldEnum = (typeof TraceabilityScalarFieldEnum)[keyof typeof TraceabilityScalarFieldEnum]


  export const Traceability_cattleScalarFieldEnum: {
    id: 'id',
    traceability_id: 'traceability_id',
    vehicle_id: 'vehicle_id',
    cattle_id: 'cattle_id',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Traceability_cattleScalarFieldEnum = (typeof Traceability_cattleScalarFieldEnum)[keyof typeof Traceability_cattleScalarFieldEnum]


  export const Traceability_statusScalarFieldEnum: {
    id: 'id',
    traceability_id: 'traceability_id',
    status: 'status',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Traceability_statusScalarFieldEnum = (typeof Traceability_statusScalarFieldEnum)[keyof typeof Traceability_statusScalarFieldEnum]


  export const Traceability_vehicleScalarFieldEnum: {
    id: 'id',
    traceability_id: 'traceability_id',
    vehicle_type: 'vehicle_type',
    vehicle_registration: 'vehicle_registration',
    transport_company_name: 'transport_company_name',
    driver_title: 'driver_title',
    driver_first_name: 'driver_first_name',
    driver_middle_name: 'driver_middle_name',
    driver_last_name: 'driver_last_name',
    contact_title: 'contact_title',
    contact_first_name: 'contact_first_name',
    contact_middle_name: 'contact_middle_name',
    contact_last_name: 'contact_last_name',
    contact_phone: 'contact_phone',
    is_contract_same_driver: 'is_contract_same_driver',
    created_at: 'created_at',
    created_by_id: 'created_by_id',
    created_by: 'created_by',
    updated_at: 'updated_at',
    updated_by_id: 'updated_by_id',
    updated_by: 'updated_by'
  };

  export type Traceability_vehicleScalarFieldEnum = (typeof Traceability_vehicleScalarFieldEnum)[keyof typeof Traceability_vehicleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type adminsWhereInput = {
    AND?: adminsWhereInput | adminsWhereInput[]
    OR?: adminsWhereInput[]
    NOT?: adminsWhereInput | adminsWhereInput[]
    id?: StringFilter<"admins"> | string
    email?: StringNullableFilter<"admins"> | string | null
    citizen_id?: StringFilter<"admins"> | string
    masking_citizen_id?: StringFilter<"admins"> | string
    password?: StringFilter<"admins"> | string
    title?: StringNullableFilter<"admins"> | string | null
    first_name?: StringNullableFilter<"admins"> | string | null
    middle_name?: StringNullableFilter<"admins"> | string | null
    last_name?: StringNullableFilter<"admins"> | string | null
    pic_url?: StringNullableFilter<"admins"> | string | null
    permissions?: StringNullableListFilter<"admins">
    role_id?: IntNullableFilter<"admins"> | number | null
    created_at?: DateTimeFilter<"admins"> | Date | string
    created_by_id?: StringFilter<"admins"> | string
    created_by?: StringFilter<"admins"> | string
    updated_at?: DateTimeFilter<"admins"> | Date | string
    updated_by_id?: StringFilter<"admins"> | string
    updated_by?: StringFilter<"admins"> | string
  }

  export type adminsOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrderInput | SortOrder
    citizen_id?: SortOrder
    masking_citizen_id?: SortOrder
    password?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    pic_url?: SortOrderInput | SortOrder
    permissions?: SortOrder
    role_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type adminsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: adminsWhereInput | adminsWhereInput[]
    OR?: adminsWhereInput[]
    NOT?: adminsWhereInput | adminsWhereInput[]
    email?: StringNullableFilter<"admins"> | string | null
    citizen_id?: StringFilter<"admins"> | string
    masking_citizen_id?: StringFilter<"admins"> | string
    password?: StringFilter<"admins"> | string
    title?: StringNullableFilter<"admins"> | string | null
    first_name?: StringNullableFilter<"admins"> | string | null
    middle_name?: StringNullableFilter<"admins"> | string | null
    last_name?: StringNullableFilter<"admins"> | string | null
    pic_url?: StringNullableFilter<"admins"> | string | null
    permissions?: StringNullableListFilter<"admins">
    role_id?: IntNullableFilter<"admins"> | number | null
    created_at?: DateTimeFilter<"admins"> | Date | string
    created_by_id?: StringFilter<"admins"> | string
    created_by?: StringFilter<"admins"> | string
    updated_at?: DateTimeFilter<"admins"> | Date | string
    updated_by_id?: StringFilter<"admins"> | string
    updated_by?: StringFilter<"admins"> | string
  }, "id">

  export type adminsOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrderInput | SortOrder
    citizen_id?: SortOrder
    masking_citizen_id?: SortOrder
    password?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    pic_url?: SortOrderInput | SortOrder
    permissions?: SortOrder
    role_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: adminsCountOrderByAggregateInput
    _avg?: adminsAvgOrderByAggregateInput
    _max?: adminsMaxOrderByAggregateInput
    _min?: adminsMinOrderByAggregateInput
    _sum?: adminsSumOrderByAggregateInput
  }

  export type adminsScalarWhereWithAggregatesInput = {
    AND?: adminsScalarWhereWithAggregatesInput | adminsScalarWhereWithAggregatesInput[]
    OR?: adminsScalarWhereWithAggregatesInput[]
    NOT?: adminsScalarWhereWithAggregatesInput | adminsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"admins"> | string
    email?: StringNullableWithAggregatesFilter<"admins"> | string | null
    citizen_id?: StringWithAggregatesFilter<"admins"> | string
    masking_citizen_id?: StringWithAggregatesFilter<"admins"> | string
    password?: StringWithAggregatesFilter<"admins"> | string
    title?: StringNullableWithAggregatesFilter<"admins"> | string | null
    first_name?: StringNullableWithAggregatesFilter<"admins"> | string | null
    middle_name?: StringNullableWithAggregatesFilter<"admins"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"admins"> | string | null
    pic_url?: StringNullableWithAggregatesFilter<"admins"> | string | null
    permissions?: StringNullableListFilter<"admins">
    role_id?: IntNullableWithAggregatesFilter<"admins"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"admins"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"admins"> | string
    created_by?: StringWithAggregatesFilter<"admins"> | string
    updated_at?: DateTimeWithAggregatesFilter<"admins"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"admins"> | string
    updated_by?: StringWithAggregatesFilter<"admins"> | string
  }

  export type buyer_attachmentsWhereInput = {
    AND?: buyer_attachmentsWhereInput | buyer_attachmentsWhereInput[]
    OR?: buyer_attachmentsWhereInput[]
    NOT?: buyer_attachmentsWhereInput | buyer_attachmentsWhereInput[]
    id?: StringFilter<"buyer_attachments"> | string
    buyer_id?: StringFilter<"buyer_attachments"> | string
    file_name?: StringFilter<"buyer_attachments"> | string
    file_path?: StringFilter<"buyer_attachments"> | string
    is_public?: BoolFilter<"buyer_attachments"> | boolean
    content_type?: StringFilter<"buyer_attachments"> | string
    description?: StringNullableFilter<"buyer_attachments"> | string | null
    created_at?: DateTimeFilter<"buyer_attachments"> | Date | string
    created_by_id?: StringFilter<"buyer_attachments"> | string
    created_by?: StringFilter<"buyer_attachments"> | string
    updated_at?: DateTimeFilter<"buyer_attachments"> | Date | string
    updated_by_id?: StringFilter<"buyer_attachments"> | string
    updated_by?: StringFilter<"buyer_attachments"> | string
    buyers?: XOR<BuyersScalarRelationFilter, buyersWhereInput>
  }

  export type buyer_attachmentsOrderByWithRelationInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    buyers?: buyersOrderByWithRelationInput
  }

  export type buyer_attachmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: buyer_attachmentsWhereInput | buyer_attachmentsWhereInput[]
    OR?: buyer_attachmentsWhereInput[]
    NOT?: buyer_attachmentsWhereInput | buyer_attachmentsWhereInput[]
    buyer_id?: StringFilter<"buyer_attachments"> | string
    file_name?: StringFilter<"buyer_attachments"> | string
    file_path?: StringFilter<"buyer_attachments"> | string
    is_public?: BoolFilter<"buyer_attachments"> | boolean
    content_type?: StringFilter<"buyer_attachments"> | string
    description?: StringNullableFilter<"buyer_attachments"> | string | null
    created_at?: DateTimeFilter<"buyer_attachments"> | Date | string
    created_by_id?: StringFilter<"buyer_attachments"> | string
    created_by?: StringFilter<"buyer_attachments"> | string
    updated_at?: DateTimeFilter<"buyer_attachments"> | Date | string
    updated_by_id?: StringFilter<"buyer_attachments"> | string
    updated_by?: StringFilter<"buyer_attachments"> | string
    buyers?: XOR<BuyersScalarRelationFilter, buyersWhereInput>
  }, "id">

  export type buyer_attachmentsOrderByWithAggregationInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: buyer_attachmentsCountOrderByAggregateInput
    _max?: buyer_attachmentsMaxOrderByAggregateInput
    _min?: buyer_attachmentsMinOrderByAggregateInput
  }

  export type buyer_attachmentsScalarWhereWithAggregatesInput = {
    AND?: buyer_attachmentsScalarWhereWithAggregatesInput | buyer_attachmentsScalarWhereWithAggregatesInput[]
    OR?: buyer_attachmentsScalarWhereWithAggregatesInput[]
    NOT?: buyer_attachmentsScalarWhereWithAggregatesInput | buyer_attachmentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"buyer_attachments"> | string
    buyer_id?: StringWithAggregatesFilter<"buyer_attachments"> | string
    file_name?: StringWithAggregatesFilter<"buyer_attachments"> | string
    file_path?: StringWithAggregatesFilter<"buyer_attachments"> | string
    is_public?: BoolWithAggregatesFilter<"buyer_attachments"> | boolean
    content_type?: StringWithAggregatesFilter<"buyer_attachments"> | string
    description?: StringNullableWithAggregatesFilter<"buyer_attachments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"buyer_attachments"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"buyer_attachments"> | string
    created_by?: StringWithAggregatesFilter<"buyer_attachments"> | string
    updated_at?: DateTimeWithAggregatesFilter<"buyer_attachments"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"buyer_attachments"> | string
    updated_by?: StringWithAggregatesFilter<"buyer_attachments"> | string
  }

  export type buyersWhereInput = {
    AND?: buyersWhereInput | buyersWhereInput[]
    OR?: buyersWhereInput[]
    NOT?: buyersWhereInput | buyersWhereInput[]
    id?: StringFilter<"buyers"> | string
    buyer_code?: StringFilter<"buyers"> | string
    company_name?: StringFilter<"buyers"> | string
    comp_registration_id?: StringFilter<"buyers"> | string
    country?: StringFilter<"buyers"> | string
    address?: StringFilter<"buyers"> | string
    title?: StringFilter<"buyers"> | string
    first_name?: StringFilter<"buyers"> | string
    middle_name?: StringNullableFilter<"buyers"> | string | null
    last_name?: StringFilter<"buyers"> | string
    phone_number?: StringFilter<"buyers"> | string
    email?: StringNullableFilter<"buyers"> | string | null
    whatsapp?: StringNullableFilter<"buyers"> | string | null
    wechat?: StringNullableFilter<"buyers"> | string | null
    line_id?: StringNullableFilter<"buyers"> | string | null
    status?: StringFilter<"buyers"> | string
    created_at?: DateTimeFilter<"buyers"> | Date | string
    created_by_id?: StringFilter<"buyers"> | string
    created_by?: StringFilter<"buyers"> | string
    updated_at?: DateTimeFilter<"buyers"> | Date | string
    updated_by_id?: StringFilter<"buyers"> | string
    updated_by?: StringFilter<"buyers"> | string
    country_code?: StringFilter<"buyers"> | string
    buyer_attachments?: Buyer_attachmentsListRelationFilter
  }

  export type buyersOrderByWithRelationInput = {
    id?: SortOrder
    buyer_code?: SortOrder
    company_name?: SortOrder
    comp_registration_id?: SortOrder
    country?: SortOrder
    address?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrder
    phone_number?: SortOrder
    email?: SortOrderInput | SortOrder
    whatsapp?: SortOrderInput | SortOrder
    wechat?: SortOrderInput | SortOrder
    line_id?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    country_code?: SortOrder
    buyer_attachments?: buyer_attachmentsOrderByRelationAggregateInput
  }

  export type buyersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: buyersWhereInput | buyersWhereInput[]
    OR?: buyersWhereInput[]
    NOT?: buyersWhereInput | buyersWhereInput[]
    buyer_code?: StringFilter<"buyers"> | string
    company_name?: StringFilter<"buyers"> | string
    comp_registration_id?: StringFilter<"buyers"> | string
    country?: StringFilter<"buyers"> | string
    address?: StringFilter<"buyers"> | string
    title?: StringFilter<"buyers"> | string
    first_name?: StringFilter<"buyers"> | string
    middle_name?: StringNullableFilter<"buyers"> | string | null
    last_name?: StringFilter<"buyers"> | string
    phone_number?: StringFilter<"buyers"> | string
    email?: StringNullableFilter<"buyers"> | string | null
    whatsapp?: StringNullableFilter<"buyers"> | string | null
    wechat?: StringNullableFilter<"buyers"> | string | null
    line_id?: StringNullableFilter<"buyers"> | string | null
    status?: StringFilter<"buyers"> | string
    created_at?: DateTimeFilter<"buyers"> | Date | string
    created_by_id?: StringFilter<"buyers"> | string
    created_by?: StringFilter<"buyers"> | string
    updated_at?: DateTimeFilter<"buyers"> | Date | string
    updated_by_id?: StringFilter<"buyers"> | string
    updated_by?: StringFilter<"buyers"> | string
    country_code?: StringFilter<"buyers"> | string
    buyer_attachments?: Buyer_attachmentsListRelationFilter
  }, "id">

  export type buyersOrderByWithAggregationInput = {
    id?: SortOrder
    buyer_code?: SortOrder
    company_name?: SortOrder
    comp_registration_id?: SortOrder
    country?: SortOrder
    address?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrder
    phone_number?: SortOrder
    email?: SortOrderInput | SortOrder
    whatsapp?: SortOrderInput | SortOrder
    wechat?: SortOrderInput | SortOrder
    line_id?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    country_code?: SortOrder
    _count?: buyersCountOrderByAggregateInput
    _max?: buyersMaxOrderByAggregateInput
    _min?: buyersMinOrderByAggregateInput
  }

  export type buyersScalarWhereWithAggregatesInput = {
    AND?: buyersScalarWhereWithAggregatesInput | buyersScalarWhereWithAggregatesInput[]
    OR?: buyersScalarWhereWithAggregatesInput[]
    NOT?: buyersScalarWhereWithAggregatesInput | buyersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"buyers"> | string
    buyer_code?: StringWithAggregatesFilter<"buyers"> | string
    company_name?: StringWithAggregatesFilter<"buyers"> | string
    comp_registration_id?: StringWithAggregatesFilter<"buyers"> | string
    country?: StringWithAggregatesFilter<"buyers"> | string
    address?: StringWithAggregatesFilter<"buyers"> | string
    title?: StringWithAggregatesFilter<"buyers"> | string
    first_name?: StringWithAggregatesFilter<"buyers"> | string
    middle_name?: StringNullableWithAggregatesFilter<"buyers"> | string | null
    last_name?: StringWithAggregatesFilter<"buyers"> | string
    phone_number?: StringWithAggregatesFilter<"buyers"> | string
    email?: StringNullableWithAggregatesFilter<"buyers"> | string | null
    whatsapp?: StringNullableWithAggregatesFilter<"buyers"> | string | null
    wechat?: StringNullableWithAggregatesFilter<"buyers"> | string | null
    line_id?: StringNullableWithAggregatesFilter<"buyers"> | string | null
    status?: StringWithAggregatesFilter<"buyers"> | string
    created_at?: DateTimeWithAggregatesFilter<"buyers"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"buyers"> | string
    created_by?: StringWithAggregatesFilter<"buyers"> | string
    updated_at?: DateTimeWithAggregatesFilter<"buyers"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"buyers"> | string
    updated_by?: StringWithAggregatesFilter<"buyers"> | string
    country_code?: StringWithAggregatesFilter<"buyers"> | string
  }

  export type cattle_attachmentsWhereInput = {
    AND?: cattle_attachmentsWhereInput | cattle_attachmentsWhereInput[]
    OR?: cattle_attachmentsWhereInput[]
    NOT?: cattle_attachmentsWhereInput | cattle_attachmentsWhereInput[]
    id?: StringFilter<"cattle_attachments"> | string
    cattle_id?: StringFilter<"cattle_attachments"> | string
    file_name?: StringFilter<"cattle_attachments"> | string
    file_path?: StringFilter<"cattle_attachments"> | string
    is_public?: BoolFilter<"cattle_attachments"> | boolean
    content_type?: StringFilter<"cattle_attachments"> | string
    description?: StringNullableFilter<"cattle_attachments"> | string | null
    created_at?: DateTimeFilter<"cattle_attachments"> | Date | string
    created_by_id?: StringFilter<"cattle_attachments"> | string
    created_by?: StringFilter<"cattle_attachments"> | string
    updated_at?: DateTimeFilter<"cattle_attachments"> | Date | string
    updated_by_id?: StringFilter<"cattle_attachments"> | string
    updated_by?: StringFilter<"cattle_attachments"> | string
    cattles?: XOR<CattlesScalarRelationFilter, cattlesWhereInput>
  }

  export type cattle_attachmentsOrderByWithRelationInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    cattles?: cattlesOrderByWithRelationInput
  }

  export type cattle_attachmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_attachmentsWhereInput | cattle_attachmentsWhereInput[]
    OR?: cattle_attachmentsWhereInput[]
    NOT?: cattle_attachmentsWhereInput | cattle_attachmentsWhereInput[]
    cattle_id?: StringFilter<"cattle_attachments"> | string
    file_name?: StringFilter<"cattle_attachments"> | string
    file_path?: StringFilter<"cattle_attachments"> | string
    is_public?: BoolFilter<"cattle_attachments"> | boolean
    content_type?: StringFilter<"cattle_attachments"> | string
    description?: StringNullableFilter<"cattle_attachments"> | string | null
    created_at?: DateTimeFilter<"cattle_attachments"> | Date | string
    created_by_id?: StringFilter<"cattle_attachments"> | string
    created_by?: StringFilter<"cattle_attachments"> | string
    updated_at?: DateTimeFilter<"cattle_attachments"> | Date | string
    updated_by_id?: StringFilter<"cattle_attachments"> | string
    updated_by?: StringFilter<"cattle_attachments"> | string
    cattles?: XOR<CattlesScalarRelationFilter, cattlesWhereInput>
  }, "id">

  export type cattle_attachmentsOrderByWithAggregationInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_attachmentsCountOrderByAggregateInput
    _max?: cattle_attachmentsMaxOrderByAggregateInput
    _min?: cattle_attachmentsMinOrderByAggregateInput
  }

  export type cattle_attachmentsScalarWhereWithAggregatesInput = {
    AND?: cattle_attachmentsScalarWhereWithAggregatesInput | cattle_attachmentsScalarWhereWithAggregatesInput[]
    OR?: cattle_attachmentsScalarWhereWithAggregatesInput[]
    NOT?: cattle_attachmentsScalarWhereWithAggregatesInput | cattle_attachmentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_attachments"> | string
    cattle_id?: StringWithAggregatesFilter<"cattle_attachments"> | string
    file_name?: StringWithAggregatesFilter<"cattle_attachments"> | string
    file_path?: StringWithAggregatesFilter<"cattle_attachments"> | string
    is_public?: BoolWithAggregatesFilter<"cattle_attachments"> | boolean
    content_type?: StringWithAggregatesFilter<"cattle_attachments"> | string
    description?: StringNullableWithAggregatesFilter<"cattle_attachments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"cattle_attachments"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_attachments"> | string
    created_by?: StringWithAggregatesFilter<"cattle_attachments"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_attachments"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_attachments"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_attachments"> | string
  }

  export type cattle_breedsWhereInput = {
    AND?: cattle_breedsWhereInput | cattle_breedsWhereInput[]
    OR?: cattle_breedsWhereInput[]
    NOT?: cattle_breedsWhereInput | cattle_breedsWhereInput[]
    id?: StringFilter<"cattle_breeds"> | string
    name_en?: StringFilter<"cattle_breeds"> | string
    name_th?: StringFilter<"cattle_breeds"> | string
    short_name?: StringFilter<"cattle_breeds"> | string
    remark?: StringNullableFilter<"cattle_breeds"> | string | null
    created_at?: DateTimeFilter<"cattle_breeds"> | Date | string
    created_by_id?: StringFilter<"cattle_breeds"> | string
    created_by?: StringFilter<"cattle_breeds"> | string
    updated_at?: DateTimeFilter<"cattle_breeds"> | Date | string
    updated_by_id?: StringFilter<"cattle_breeds"> | string
    updated_by?: StringFilter<"cattle_breeds"> | string
  }

  export type cattle_breedsOrderByWithRelationInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    short_name?: SortOrder
    remark?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_breedsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_breedsWhereInput | cattle_breedsWhereInput[]
    OR?: cattle_breedsWhereInput[]
    NOT?: cattle_breedsWhereInput | cattle_breedsWhereInput[]
    name_en?: StringFilter<"cattle_breeds"> | string
    name_th?: StringFilter<"cattle_breeds"> | string
    short_name?: StringFilter<"cattle_breeds"> | string
    remark?: StringNullableFilter<"cattle_breeds"> | string | null
    created_at?: DateTimeFilter<"cattle_breeds"> | Date | string
    created_by_id?: StringFilter<"cattle_breeds"> | string
    created_by?: StringFilter<"cattle_breeds"> | string
    updated_at?: DateTimeFilter<"cattle_breeds"> | Date | string
    updated_by_id?: StringFilter<"cattle_breeds"> | string
    updated_by?: StringFilter<"cattle_breeds"> | string
  }, "id">

  export type cattle_breedsOrderByWithAggregationInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    short_name?: SortOrder
    remark?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_breedsCountOrderByAggregateInput
    _max?: cattle_breedsMaxOrderByAggregateInput
    _min?: cattle_breedsMinOrderByAggregateInput
  }

  export type cattle_breedsScalarWhereWithAggregatesInput = {
    AND?: cattle_breedsScalarWhereWithAggregatesInput | cattle_breedsScalarWhereWithAggregatesInput[]
    OR?: cattle_breedsScalarWhereWithAggregatesInput[]
    NOT?: cattle_breedsScalarWhereWithAggregatesInput | cattle_breedsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_breeds"> | string
    name_en?: StringWithAggregatesFilter<"cattle_breeds"> | string
    name_th?: StringWithAggregatesFilter<"cattle_breeds"> | string
    short_name?: StringWithAggregatesFilter<"cattle_breeds"> | string
    remark?: StringNullableWithAggregatesFilter<"cattle_breeds"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"cattle_breeds"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_breeds"> | string
    created_by?: StringWithAggregatesFilter<"cattle_breeds"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_breeds"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_breeds"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_breeds"> | string
  }

  export type cattle_create_stagedWhereInput = {
    AND?: cattle_create_stagedWhereInput | cattle_create_stagedWhereInput[]
    OR?: cattle_create_stagedWhereInput[]
    NOT?: cattle_create_stagedWhereInput | cattle_create_stagedWhereInput[]
    id?: StringFilter<"cattle_create_staged"> | string
    staged_id?: StringFilter<"cattle_create_staged"> | string
    order_request_id?: StringNullableFilter<"cattle_create_staged"> | string | null
    farm_sourcing_id?: StringNullableFilter<"cattle_create_staged"> | string | null
    farm_id?: StringFilter<"cattle_create_staged"> | string
    pen_id?: StringFilter<"cattle_create_staged"> | string
    cattle_type_id?: StringFilter<"cattle_create_staged"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattle_create_staged">
    nid?: StringFilter<"cattle_create_staged"> | string
    gender?: StringFilter<"cattle_create_staged"> | string
    castration_status?: StringFilter<"cattle_create_staged"> | string
    pregnant_status?: StringFilter<"cattle_create_staged"> | string
    birthdate?: DateTimeFilter<"cattle_create_staged"> | Date | string
    passport_no?: StringNullableFilter<"cattle_create_staged"> | string | null
    color?: StringFilter<"cattle_create_staged"> | string
    ear?: StringFilter<"cattle_create_staged"> | string
    horn?: StringFilter<"cattle_create_staged"> | string
    weight?: DecimalFilter<"cattle_create_staged"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFilter<"cattle_create_staged"> | Date | string
    tracer_tag?: StringFilter<"cattle_create_staged"> | string
    breed_sire?: StringNullableListFilter<"cattle_create_staged">
    breed_dam?: StringNullableListFilter<"cattle_create_staged">
    breed_pgs?: StringNullableListFilter<"cattle_create_staged">
    breed_pgd?: StringNullableListFilter<"cattle_create_staged">
    breed_mgs?: StringNullableListFilter<"cattle_create_staged">
    breed_mgd?: StringNullableListFilter<"cattle_create_staged">
    country_code?: StringFilter<"cattle_create_staged"> | string
    health_treatment_date?: DateTimeFilter<"cattle_create_staged"> | Date | string
    health_veterinary_name?: StringFilter<"cattle_create_staged"> | string
    health_health_condition?: StringFilter<"cattle_create_staged"> | string
    health_symptom?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_cause_of_death?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_treatment?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_drug_name?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_dosage?: DecimalNullableFilter<"cattle_create_staged"> | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccination_date?: DateTimeNullableFilter<"cattle_create_staged"> | Date | string | null
    vaccination_veterinary_name?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_type?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_remark?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_id?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_lot_no?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_expiry_date?: DateTimeNullableFilter<"cattle_create_staged"> | Date | string | null
    created_at?: DateTimeFilter<"cattle_create_staged"> | Date | string
    created_by_id?: StringFilter<"cattle_create_staged"> | string
    created_by?: StringFilter<"cattle_create_staged"> | string
    updated_at?: DateTimeFilter<"cattle_create_staged"> | Date | string
    updated_by_id?: StringFilter<"cattle_create_staged"> | string
    updated_by?: StringFilter<"cattle_create_staged"> | string
  }

  export type cattle_create_stagedOrderByWithRelationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrderInput | SortOrder
    farm_sourcing_id?: SortOrderInput | SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    cattle_breed_ids?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrderInput | SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    breed_sire?: SortOrder
    breed_dam?: SortOrder
    breed_pgs?: SortOrder
    breed_pgd?: SortOrder
    breed_mgs?: SortOrder
    breed_mgd?: SortOrder
    country_code?: SortOrder
    health_treatment_date?: SortOrder
    health_veterinary_name?: SortOrder
    health_health_condition?: SortOrder
    health_symptom?: SortOrderInput | SortOrder
    health_cause_of_death?: SortOrderInput | SortOrder
    health_treatment?: SortOrderInput | SortOrder
    health_drug_name?: SortOrderInput | SortOrder
    health_dosage?: SortOrderInput | SortOrder
    health_period_residue?: SortOrderInput | SortOrder
    vaccination_vaccination_date?: SortOrderInput | SortOrder
    vaccination_veterinary_name?: SortOrderInput | SortOrder
    vaccination_vaccine_type?: SortOrderInput | SortOrder
    vaccination_remark?: SortOrderInput | SortOrder
    vaccination_vaccine_id?: SortOrderInput | SortOrder
    vaccination_vaccine_lot_no?: SortOrderInput | SortOrder
    vaccination_vaccine_expiry_date?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_create_stagedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_create_stagedWhereInput | cattle_create_stagedWhereInput[]
    OR?: cattle_create_stagedWhereInput[]
    NOT?: cattle_create_stagedWhereInput | cattle_create_stagedWhereInput[]
    staged_id?: StringFilter<"cattle_create_staged"> | string
    order_request_id?: StringNullableFilter<"cattle_create_staged"> | string | null
    farm_sourcing_id?: StringNullableFilter<"cattle_create_staged"> | string | null
    farm_id?: StringFilter<"cattle_create_staged"> | string
    pen_id?: StringFilter<"cattle_create_staged"> | string
    cattle_type_id?: StringFilter<"cattle_create_staged"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattle_create_staged">
    nid?: StringFilter<"cattle_create_staged"> | string
    gender?: StringFilter<"cattle_create_staged"> | string
    castration_status?: StringFilter<"cattle_create_staged"> | string
    pregnant_status?: StringFilter<"cattle_create_staged"> | string
    birthdate?: DateTimeFilter<"cattle_create_staged"> | Date | string
    passport_no?: StringNullableFilter<"cattle_create_staged"> | string | null
    color?: StringFilter<"cattle_create_staged"> | string
    ear?: StringFilter<"cattle_create_staged"> | string
    horn?: StringFilter<"cattle_create_staged"> | string
    weight?: DecimalFilter<"cattle_create_staged"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFilter<"cattle_create_staged"> | Date | string
    tracer_tag?: StringFilter<"cattle_create_staged"> | string
    breed_sire?: StringNullableListFilter<"cattle_create_staged">
    breed_dam?: StringNullableListFilter<"cattle_create_staged">
    breed_pgs?: StringNullableListFilter<"cattle_create_staged">
    breed_pgd?: StringNullableListFilter<"cattle_create_staged">
    breed_mgs?: StringNullableListFilter<"cattle_create_staged">
    breed_mgd?: StringNullableListFilter<"cattle_create_staged">
    country_code?: StringFilter<"cattle_create_staged"> | string
    health_treatment_date?: DateTimeFilter<"cattle_create_staged"> | Date | string
    health_veterinary_name?: StringFilter<"cattle_create_staged"> | string
    health_health_condition?: StringFilter<"cattle_create_staged"> | string
    health_symptom?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_cause_of_death?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_treatment?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_drug_name?: StringNullableFilter<"cattle_create_staged"> | string | null
    health_dosage?: DecimalNullableFilter<"cattle_create_staged"> | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccination_date?: DateTimeNullableFilter<"cattle_create_staged"> | Date | string | null
    vaccination_veterinary_name?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_type?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_remark?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_id?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_lot_no?: StringNullableFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_expiry_date?: DateTimeNullableFilter<"cattle_create_staged"> | Date | string | null
    created_at?: DateTimeFilter<"cattle_create_staged"> | Date | string
    created_by_id?: StringFilter<"cattle_create_staged"> | string
    created_by?: StringFilter<"cattle_create_staged"> | string
    updated_at?: DateTimeFilter<"cattle_create_staged"> | Date | string
    updated_by_id?: StringFilter<"cattle_create_staged"> | string
    updated_by?: StringFilter<"cattle_create_staged"> | string
  }, "id">

  export type cattle_create_stagedOrderByWithAggregationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrderInput | SortOrder
    farm_sourcing_id?: SortOrderInput | SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    cattle_breed_ids?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrderInput | SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    breed_sire?: SortOrder
    breed_dam?: SortOrder
    breed_pgs?: SortOrder
    breed_pgd?: SortOrder
    breed_mgs?: SortOrder
    breed_mgd?: SortOrder
    country_code?: SortOrder
    health_treatment_date?: SortOrder
    health_veterinary_name?: SortOrder
    health_health_condition?: SortOrder
    health_symptom?: SortOrderInput | SortOrder
    health_cause_of_death?: SortOrderInput | SortOrder
    health_treatment?: SortOrderInput | SortOrder
    health_drug_name?: SortOrderInput | SortOrder
    health_dosage?: SortOrderInput | SortOrder
    health_period_residue?: SortOrderInput | SortOrder
    vaccination_vaccination_date?: SortOrderInput | SortOrder
    vaccination_veterinary_name?: SortOrderInput | SortOrder
    vaccination_vaccine_type?: SortOrderInput | SortOrder
    vaccination_remark?: SortOrderInput | SortOrder
    vaccination_vaccine_id?: SortOrderInput | SortOrder
    vaccination_vaccine_lot_no?: SortOrderInput | SortOrder
    vaccination_vaccine_expiry_date?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_create_stagedCountOrderByAggregateInput
    _avg?: cattle_create_stagedAvgOrderByAggregateInput
    _max?: cattle_create_stagedMaxOrderByAggregateInput
    _min?: cattle_create_stagedMinOrderByAggregateInput
    _sum?: cattle_create_stagedSumOrderByAggregateInput
  }

  export type cattle_create_stagedScalarWhereWithAggregatesInput = {
    AND?: cattle_create_stagedScalarWhereWithAggregatesInput | cattle_create_stagedScalarWhereWithAggregatesInput[]
    OR?: cattle_create_stagedScalarWhereWithAggregatesInput[]
    NOT?: cattle_create_stagedScalarWhereWithAggregatesInput | cattle_create_stagedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    staged_id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    order_request_id?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    farm_sourcing_id?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    farm_id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    pen_id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    cattle_type_id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattle_create_staged">
    nid?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    gender?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    castration_status?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    pregnant_status?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    birthdate?: DateTimeWithAggregatesFilter<"cattle_create_staged"> | Date | string
    passport_no?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    color?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    ear?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    horn?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    weight?: DecimalWithAggregatesFilter<"cattle_create_staged"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeWithAggregatesFilter<"cattle_create_staged"> | Date | string
    tracer_tag?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    breed_sire?: StringNullableListFilter<"cattle_create_staged">
    breed_dam?: StringNullableListFilter<"cattle_create_staged">
    breed_pgs?: StringNullableListFilter<"cattle_create_staged">
    breed_pgd?: StringNullableListFilter<"cattle_create_staged">
    breed_mgs?: StringNullableListFilter<"cattle_create_staged">
    breed_mgd?: StringNullableListFilter<"cattle_create_staged">
    country_code?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    health_treatment_date?: DateTimeWithAggregatesFilter<"cattle_create_staged"> | Date | string
    health_veterinary_name?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    health_health_condition?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    health_symptom?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    health_cause_of_death?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    health_treatment?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    health_drug_name?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    health_dosage?: DecimalNullableWithAggregatesFilter<"cattle_create_staged"> | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    vaccination_vaccination_date?: DateTimeNullableWithAggregatesFilter<"cattle_create_staged"> | Date | string | null
    vaccination_veterinary_name?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_type?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    vaccination_remark?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_id?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_lot_no?: StringNullableWithAggregatesFilter<"cattle_create_staged"> | string | null
    vaccination_vaccine_expiry_date?: DateTimeNullableWithAggregatesFilter<"cattle_create_staged"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"cattle_create_staged"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    created_by?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_create_staged"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_create_staged"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_create_staged"> | string
  }

  export type cattle_healthsWhereInput = {
    AND?: cattle_healthsWhereInput | cattle_healthsWhereInput[]
    OR?: cattle_healthsWhereInput[]
    NOT?: cattle_healthsWhereInput | cattle_healthsWhereInput[]
    id?: StringFilter<"cattle_healths"> | string
    cattle_id?: StringFilter<"cattle_healths"> | string
    treatment_date?: DateTimeFilter<"cattle_healths"> | Date | string
    veterinary_name?: StringFilter<"cattle_healths"> | string
    health_condition?: StringFilter<"cattle_healths"> | string
    symptom?: StringNullableFilter<"cattle_healths"> | string | null
    cause_of_death?: StringNullableFilter<"cattle_healths"> | string | null
    treatment?: StringNullableFilter<"cattle_healths"> | string | null
    drug_name?: StringNullableFilter<"cattle_healths"> | string | null
    dosage?: DecimalNullableFilter<"cattle_healths"> | Decimal | DecimalJsLike | number | string | null
    period_residue?: StringNullableFilter<"cattle_healths"> | string | null
    status?: StringFilter<"cattle_healths"> | string
    created_at?: DateTimeFilter<"cattle_healths"> | Date | string
    created_by_id?: StringFilter<"cattle_healths"> | string
    created_by?: StringFilter<"cattle_healths"> | string
    updated_at?: DateTimeFilter<"cattle_healths"> | Date | string
    updated_by_id?: StringFilter<"cattle_healths"> | string
    updated_by?: StringFilter<"cattle_healths"> | string
    cattles?: XOR<CattlesScalarRelationFilter, cattlesWhereInput>
  }

  export type cattle_healthsOrderByWithRelationInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    treatment_date?: SortOrder
    veterinary_name?: SortOrder
    health_condition?: SortOrder
    symptom?: SortOrderInput | SortOrder
    cause_of_death?: SortOrderInput | SortOrder
    treatment?: SortOrderInput | SortOrder
    drug_name?: SortOrderInput | SortOrder
    dosage?: SortOrderInput | SortOrder
    period_residue?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    cattles?: cattlesOrderByWithRelationInput
  }

  export type cattle_healthsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_healthsWhereInput | cattle_healthsWhereInput[]
    OR?: cattle_healthsWhereInput[]
    NOT?: cattle_healthsWhereInput | cattle_healthsWhereInput[]
    cattle_id?: StringFilter<"cattle_healths"> | string
    treatment_date?: DateTimeFilter<"cattle_healths"> | Date | string
    veterinary_name?: StringFilter<"cattle_healths"> | string
    health_condition?: StringFilter<"cattle_healths"> | string
    symptom?: StringNullableFilter<"cattle_healths"> | string | null
    cause_of_death?: StringNullableFilter<"cattle_healths"> | string | null
    treatment?: StringNullableFilter<"cattle_healths"> | string | null
    drug_name?: StringNullableFilter<"cattle_healths"> | string | null
    dosage?: DecimalNullableFilter<"cattle_healths"> | Decimal | DecimalJsLike | number | string | null
    period_residue?: StringNullableFilter<"cattle_healths"> | string | null
    status?: StringFilter<"cattle_healths"> | string
    created_at?: DateTimeFilter<"cattle_healths"> | Date | string
    created_by_id?: StringFilter<"cattle_healths"> | string
    created_by?: StringFilter<"cattle_healths"> | string
    updated_at?: DateTimeFilter<"cattle_healths"> | Date | string
    updated_by_id?: StringFilter<"cattle_healths"> | string
    updated_by?: StringFilter<"cattle_healths"> | string
    cattles?: XOR<CattlesScalarRelationFilter, cattlesWhereInput>
  }, "id">

  export type cattle_healthsOrderByWithAggregationInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    treatment_date?: SortOrder
    veterinary_name?: SortOrder
    health_condition?: SortOrder
    symptom?: SortOrderInput | SortOrder
    cause_of_death?: SortOrderInput | SortOrder
    treatment?: SortOrderInput | SortOrder
    drug_name?: SortOrderInput | SortOrder
    dosage?: SortOrderInput | SortOrder
    period_residue?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_healthsCountOrderByAggregateInput
    _avg?: cattle_healthsAvgOrderByAggregateInput
    _max?: cattle_healthsMaxOrderByAggregateInput
    _min?: cattle_healthsMinOrderByAggregateInput
    _sum?: cattle_healthsSumOrderByAggregateInput
  }

  export type cattle_healthsScalarWhereWithAggregatesInput = {
    AND?: cattle_healthsScalarWhereWithAggregatesInput | cattle_healthsScalarWhereWithAggregatesInput[]
    OR?: cattle_healthsScalarWhereWithAggregatesInput[]
    NOT?: cattle_healthsScalarWhereWithAggregatesInput | cattle_healthsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_healths"> | string
    cattle_id?: StringWithAggregatesFilter<"cattle_healths"> | string
    treatment_date?: DateTimeWithAggregatesFilter<"cattle_healths"> | Date | string
    veterinary_name?: StringWithAggregatesFilter<"cattle_healths"> | string
    health_condition?: StringWithAggregatesFilter<"cattle_healths"> | string
    symptom?: StringNullableWithAggregatesFilter<"cattle_healths"> | string | null
    cause_of_death?: StringNullableWithAggregatesFilter<"cattle_healths"> | string | null
    treatment?: StringNullableWithAggregatesFilter<"cattle_healths"> | string | null
    drug_name?: StringNullableWithAggregatesFilter<"cattle_healths"> | string | null
    dosage?: DecimalNullableWithAggregatesFilter<"cattle_healths"> | Decimal | DecimalJsLike | number | string | null
    period_residue?: StringNullableWithAggregatesFilter<"cattle_healths"> | string | null
    status?: StringWithAggregatesFilter<"cattle_healths"> | string
    created_at?: DateTimeWithAggregatesFilter<"cattle_healths"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_healths"> | string
    created_by?: StringWithAggregatesFilter<"cattle_healths"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_healths"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_healths"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_healths"> | string
  }

  export type cattle_matching_order_stagedWhereInput = {
    AND?: cattle_matching_order_stagedWhereInput | cattle_matching_order_stagedWhereInput[]
    OR?: cattle_matching_order_stagedWhereInput[]
    NOT?: cattle_matching_order_stagedWhereInput | cattle_matching_order_stagedWhereInput[]
    id?: StringFilter<"cattle_matching_order_staged"> | string
    staged_id?: StringFilter<"cattle_matching_order_staged"> | string
    order_request_id?: StringFilter<"cattle_matching_order_staged"> | string
    farm_sourcing_id?: StringFilter<"cattle_matching_order_staged"> | string
    cattle_ids?: StringNullableListFilter<"cattle_matching_order_staged">
    is_exists_all?: BoolFilter<"cattle_matching_order_staged"> | boolean
    created_at?: DateTimeFilter<"cattle_matching_order_staged"> | Date | string
    created_by_id?: StringFilter<"cattle_matching_order_staged"> | string
    created_by?: StringFilter<"cattle_matching_order_staged"> | string
    updated_at?: DateTimeFilter<"cattle_matching_order_staged"> | Date | string
    updated_by_id?: StringFilter<"cattle_matching_order_staged"> | string
    updated_by?: StringFilter<"cattle_matching_order_staged"> | string
  }

  export type cattle_matching_order_stagedOrderByWithRelationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_ids?: SortOrder
    is_exists_all?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_matching_order_stagedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_matching_order_stagedWhereInput | cattle_matching_order_stagedWhereInput[]
    OR?: cattle_matching_order_stagedWhereInput[]
    NOT?: cattle_matching_order_stagedWhereInput | cattle_matching_order_stagedWhereInput[]
    staged_id?: StringFilter<"cattle_matching_order_staged"> | string
    order_request_id?: StringFilter<"cattle_matching_order_staged"> | string
    farm_sourcing_id?: StringFilter<"cattle_matching_order_staged"> | string
    cattle_ids?: StringNullableListFilter<"cattle_matching_order_staged">
    is_exists_all?: BoolFilter<"cattle_matching_order_staged"> | boolean
    created_at?: DateTimeFilter<"cattle_matching_order_staged"> | Date | string
    created_by_id?: StringFilter<"cattle_matching_order_staged"> | string
    created_by?: StringFilter<"cattle_matching_order_staged"> | string
    updated_at?: DateTimeFilter<"cattle_matching_order_staged"> | Date | string
    updated_by_id?: StringFilter<"cattle_matching_order_staged"> | string
    updated_by?: StringFilter<"cattle_matching_order_staged"> | string
  }, "id">

  export type cattle_matching_order_stagedOrderByWithAggregationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_ids?: SortOrder
    is_exists_all?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_matching_order_stagedCountOrderByAggregateInput
    _max?: cattle_matching_order_stagedMaxOrderByAggregateInput
    _min?: cattle_matching_order_stagedMinOrderByAggregateInput
  }

  export type cattle_matching_order_stagedScalarWhereWithAggregatesInput = {
    AND?: cattle_matching_order_stagedScalarWhereWithAggregatesInput | cattle_matching_order_stagedScalarWhereWithAggregatesInput[]
    OR?: cattle_matching_order_stagedScalarWhereWithAggregatesInput[]
    NOT?: cattle_matching_order_stagedScalarWhereWithAggregatesInput | cattle_matching_order_stagedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    staged_id?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    order_request_id?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    farm_sourcing_id?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    cattle_ids?: StringNullableListFilter<"cattle_matching_order_staged">
    is_exists_all?: BoolWithAggregatesFilter<"cattle_matching_order_staged"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"cattle_matching_order_staged"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    created_by?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_matching_order_staged"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_matching_order_staged"> | string
  }

  export type cattle_sourcingWhereInput = {
    AND?: cattle_sourcingWhereInput | cattle_sourcingWhereInput[]
    OR?: cattle_sourcingWhereInput[]
    NOT?: cattle_sourcingWhereInput | cattle_sourcingWhereInput[]
    id?: StringFilter<"cattle_sourcing"> | string
    order_id?: StringFilter<"cattle_sourcing"> | string
    order_request_id?: StringFilter<"cattle_sourcing"> | string
    farm_sourcing_id?: StringFilter<"cattle_sourcing"> | string
    cattle_id?: StringFilter<"cattle_sourcing"> | string
    created_at?: DateTimeFilter<"cattle_sourcing"> | Date | string
    created_by_id?: StringFilter<"cattle_sourcing"> | string
    created_by?: StringFilter<"cattle_sourcing"> | string
    updated_at?: DateTimeFilter<"cattle_sourcing"> | Date | string
    updated_by_id?: StringFilter<"cattle_sourcing"> | string
    updated_by?: StringFilter<"cattle_sourcing"> | string
    farm_sourcing?: XOR<Farm_sourcingScalarRelationFilter, farm_sourcingWhereInput>
  }

  export type cattle_sourcingOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    farm_sourcing?: farm_sourcingOrderByWithRelationInput
  }

  export type cattle_sourcingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_sourcingWhereInput | cattle_sourcingWhereInput[]
    OR?: cattle_sourcingWhereInput[]
    NOT?: cattle_sourcingWhereInput | cattle_sourcingWhereInput[]
    order_id?: StringFilter<"cattle_sourcing"> | string
    order_request_id?: StringFilter<"cattle_sourcing"> | string
    farm_sourcing_id?: StringFilter<"cattle_sourcing"> | string
    cattle_id?: StringFilter<"cattle_sourcing"> | string
    created_at?: DateTimeFilter<"cattle_sourcing"> | Date | string
    created_by_id?: StringFilter<"cattle_sourcing"> | string
    created_by?: StringFilter<"cattle_sourcing"> | string
    updated_at?: DateTimeFilter<"cattle_sourcing"> | Date | string
    updated_by_id?: StringFilter<"cattle_sourcing"> | string
    updated_by?: StringFilter<"cattle_sourcing"> | string
    farm_sourcing?: XOR<Farm_sourcingScalarRelationFilter, farm_sourcingWhereInput>
  }, "id">

  export type cattle_sourcingOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_sourcingCountOrderByAggregateInput
    _max?: cattle_sourcingMaxOrderByAggregateInput
    _min?: cattle_sourcingMinOrderByAggregateInput
  }

  export type cattle_sourcingScalarWhereWithAggregatesInput = {
    AND?: cattle_sourcingScalarWhereWithAggregatesInput | cattle_sourcingScalarWhereWithAggregatesInput[]
    OR?: cattle_sourcingScalarWhereWithAggregatesInput[]
    NOT?: cattle_sourcingScalarWhereWithAggregatesInput | cattle_sourcingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    order_id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    order_request_id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    farm_sourcing_id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    cattle_id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    created_at?: DateTimeWithAggregatesFilter<"cattle_sourcing"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    created_by?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_sourcing"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_sourcing"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_sourcing"> | string
  }

  export type cattle_typesWhereInput = {
    AND?: cattle_typesWhereInput | cattle_typesWhereInput[]
    OR?: cattle_typesWhereInput[]
    NOT?: cattle_typesWhereInput | cattle_typesWhereInput[]
    id?: StringFilter<"cattle_types"> | string
    name_en?: StringFilter<"cattle_types"> | string
    name_th?: StringFilter<"cattle_types"> | string
    created_at?: DateTimeFilter<"cattle_types"> | Date | string
    created_by_id?: StringFilter<"cattle_types"> | string
    created_by?: StringFilter<"cattle_types"> | string
    updated_at?: DateTimeFilter<"cattle_types"> | Date | string
    updated_by_id?: StringFilter<"cattle_types"> | string
    updated_by?: StringFilter<"cattle_types"> | string
  }

  export type cattle_typesOrderByWithRelationInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_typesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_typesWhereInput | cattle_typesWhereInput[]
    OR?: cattle_typesWhereInput[]
    NOT?: cattle_typesWhereInput | cattle_typesWhereInput[]
    name_en?: StringFilter<"cattle_types"> | string
    name_th?: StringFilter<"cattle_types"> | string
    created_at?: DateTimeFilter<"cattle_types"> | Date | string
    created_by_id?: StringFilter<"cattle_types"> | string
    created_by?: StringFilter<"cattle_types"> | string
    updated_at?: DateTimeFilter<"cattle_types"> | Date | string
    updated_by_id?: StringFilter<"cattle_types"> | string
    updated_by?: StringFilter<"cattle_types"> | string
  }, "id">

  export type cattle_typesOrderByWithAggregationInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_typesCountOrderByAggregateInput
    _max?: cattle_typesMaxOrderByAggregateInput
    _min?: cattle_typesMinOrderByAggregateInput
  }

  export type cattle_typesScalarWhereWithAggregatesInput = {
    AND?: cattle_typesScalarWhereWithAggregatesInput | cattle_typesScalarWhereWithAggregatesInput[]
    OR?: cattle_typesScalarWhereWithAggregatesInput[]
    NOT?: cattle_typesScalarWhereWithAggregatesInput | cattle_typesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_types"> | string
    name_en?: StringWithAggregatesFilter<"cattle_types"> | string
    name_th?: StringWithAggregatesFilter<"cattle_types"> | string
    created_at?: DateTimeWithAggregatesFilter<"cattle_types"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_types"> | string
    created_by?: StringWithAggregatesFilter<"cattle_types"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_types"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_types"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_types"> | string
  }

  export type cattle_vaccinationsWhereInput = {
    AND?: cattle_vaccinationsWhereInput | cattle_vaccinationsWhereInput[]
    OR?: cattle_vaccinationsWhereInput[]
    NOT?: cattle_vaccinationsWhereInput | cattle_vaccinationsWhereInput[]
    id?: StringFilter<"cattle_vaccinations"> | string
    cattle_id?: StringFilter<"cattle_vaccinations"> | string
    vaccination_date?: DateTimeNullableFilter<"cattle_vaccinations"> | Date | string | null
    veterinary_name?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_type?: StringNullableFilter<"cattle_vaccinations"> | string | null
    remark?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_id?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_lot_no?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_expiry_date?: DateTimeNullableFilter<"cattle_vaccinations"> | Date | string | null
    status?: StringFilter<"cattle_vaccinations"> | string
    created_at?: DateTimeFilter<"cattle_vaccinations"> | Date | string
    created_by_id?: StringFilter<"cattle_vaccinations"> | string
    created_by?: StringFilter<"cattle_vaccinations"> | string
    updated_at?: DateTimeFilter<"cattle_vaccinations"> | Date | string
    updated_by_id?: StringFilter<"cattle_vaccinations"> | string
    updated_by?: StringFilter<"cattle_vaccinations"> | string
    cattles?: XOR<CattlesScalarRelationFilter, cattlesWhereInput>
  }

  export type cattle_vaccinationsOrderByWithRelationInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    vaccination_date?: SortOrderInput | SortOrder
    veterinary_name?: SortOrderInput | SortOrder
    vaccine_type?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    vaccine_id?: SortOrderInput | SortOrder
    vaccine_lot_no?: SortOrderInput | SortOrder
    vaccine_expiry_date?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    cattles?: cattlesOrderByWithRelationInput
  }

  export type cattle_vaccinationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattle_vaccinationsWhereInput | cattle_vaccinationsWhereInput[]
    OR?: cattle_vaccinationsWhereInput[]
    NOT?: cattle_vaccinationsWhereInput | cattle_vaccinationsWhereInput[]
    cattle_id?: StringFilter<"cattle_vaccinations"> | string
    vaccination_date?: DateTimeNullableFilter<"cattle_vaccinations"> | Date | string | null
    veterinary_name?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_type?: StringNullableFilter<"cattle_vaccinations"> | string | null
    remark?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_id?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_lot_no?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_expiry_date?: DateTimeNullableFilter<"cattle_vaccinations"> | Date | string | null
    status?: StringFilter<"cattle_vaccinations"> | string
    created_at?: DateTimeFilter<"cattle_vaccinations"> | Date | string
    created_by_id?: StringFilter<"cattle_vaccinations"> | string
    created_by?: StringFilter<"cattle_vaccinations"> | string
    updated_at?: DateTimeFilter<"cattle_vaccinations"> | Date | string
    updated_by_id?: StringFilter<"cattle_vaccinations"> | string
    updated_by?: StringFilter<"cattle_vaccinations"> | string
    cattles?: XOR<CattlesScalarRelationFilter, cattlesWhereInput>
  }, "id">

  export type cattle_vaccinationsOrderByWithAggregationInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    vaccination_date?: SortOrderInput | SortOrder
    veterinary_name?: SortOrderInput | SortOrder
    vaccine_type?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    vaccine_id?: SortOrderInput | SortOrder
    vaccine_lot_no?: SortOrderInput | SortOrder
    vaccine_expiry_date?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattle_vaccinationsCountOrderByAggregateInput
    _max?: cattle_vaccinationsMaxOrderByAggregateInput
    _min?: cattle_vaccinationsMinOrderByAggregateInput
  }

  export type cattle_vaccinationsScalarWhereWithAggregatesInput = {
    AND?: cattle_vaccinationsScalarWhereWithAggregatesInput | cattle_vaccinationsScalarWhereWithAggregatesInput[]
    OR?: cattle_vaccinationsScalarWhereWithAggregatesInput[]
    NOT?: cattle_vaccinationsScalarWhereWithAggregatesInput | cattle_vaccinationsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
    cattle_id?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
    vaccination_date?: DateTimeNullableWithAggregatesFilter<"cattle_vaccinations"> | Date | string | null
    veterinary_name?: StringNullableWithAggregatesFilter<"cattle_vaccinations"> | string | null
    vaccine_type?: StringNullableWithAggregatesFilter<"cattle_vaccinations"> | string | null
    remark?: StringNullableWithAggregatesFilter<"cattle_vaccinations"> | string | null
    vaccine_id?: StringNullableWithAggregatesFilter<"cattle_vaccinations"> | string | null
    vaccine_lot_no?: StringNullableWithAggregatesFilter<"cattle_vaccinations"> | string | null
    vaccine_expiry_date?: DateTimeNullableWithAggregatesFilter<"cattle_vaccinations"> | Date | string | null
    status?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
    created_at?: DateTimeWithAggregatesFilter<"cattle_vaccinations"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
    created_by?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattle_vaccinations"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
    updated_by?: StringWithAggregatesFilter<"cattle_vaccinations"> | string
  }

  export type cattlesWhereInput = {
    AND?: cattlesWhereInput | cattlesWhereInput[]
    OR?: cattlesWhereInput[]
    NOT?: cattlesWhereInput | cattlesWhereInput[]
    id?: StringFilter<"cattles"> | string
    tracer_id?: StringFilter<"cattles"> | string
    farm_id?: StringFilter<"cattles"> | string
    pen_id?: StringFilter<"cattles"> | string
    cattle_type_id?: StringFilter<"cattles"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattles">
    traceability_id?: StringNullableFilter<"cattles"> | string | null
    nid?: StringFilter<"cattles"> | string
    gender?: StringFilter<"cattles"> | string
    castration_status?: StringFilter<"cattles"> | string
    pregnant_status?: StringFilter<"cattles"> | string
    birthdate?: DateTimeFilter<"cattles"> | Date | string
    passport_no?: StringNullableFilter<"cattles"> | string | null
    color?: StringFilter<"cattles"> | string
    ear?: StringFilter<"cattles"> | string
    horn?: StringFilter<"cattles"> | string
    weight?: DecimalFilter<"cattles"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFilter<"cattles"> | Date | string
    tracer_tag?: StringFilter<"cattles"> | string
    ear_tag?: StringNullableListFilter<"cattles">
    breed_sire?: StringNullableListFilter<"cattles">
    breed_dam?: StringNullableListFilter<"cattles">
    breed_pgs?: StringNullableListFilter<"cattles">
    breed_pgd?: StringNullableListFilter<"cattles">
    breed_mgs?: StringNullableListFilter<"cattles">
    breed_mgd?: StringNullableListFilter<"cattles">
    is_sourcing?: BoolFilter<"cattles"> | boolean
    is_tracing?: BoolFilter<"cattles"> | boolean
    country_code?: StringFilter<"cattles"> | string
    status?: StringFilter<"cattles"> | string
    created_at?: DateTimeFilter<"cattles"> | Date | string
    created_by_id?: StringFilter<"cattles"> | string
    created_by?: StringFilter<"cattles"> | string
    updated_at?: DateTimeFilter<"cattles"> | Date | string
    updated_by_id?: StringFilter<"cattles"> | string
    updated_by?: StringFilter<"cattles"> | string
    cattle_attachments?: Cattle_attachmentsListRelationFilter
    cattle_healths?: Cattle_healthsListRelationFilter
    cattle_vaccinations?: Cattle_vaccinationsListRelationFilter
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
    pens?: XOR<PensScalarRelationFilter, pensWhereInput>
  }

  export type cattlesOrderByWithRelationInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    cattle_breed_ids?: SortOrder
    traceability_id?: SortOrderInput | SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrderInput | SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    ear_tag?: SortOrder
    breed_sire?: SortOrder
    breed_dam?: SortOrder
    breed_pgs?: SortOrder
    breed_pgd?: SortOrder
    breed_mgs?: SortOrder
    breed_mgd?: SortOrder
    is_sourcing?: SortOrder
    is_tracing?: SortOrder
    country_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    cattle_attachments?: cattle_attachmentsOrderByRelationAggregateInput
    cattle_healths?: cattle_healthsOrderByRelationAggregateInput
    cattle_vaccinations?: cattle_vaccinationsOrderByRelationAggregateInput
    farms?: farmsOrderByWithRelationInput
    pens?: pensOrderByWithRelationInput
  }

  export type cattlesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: cattlesWhereInput | cattlesWhereInput[]
    OR?: cattlesWhereInput[]
    NOT?: cattlesWhereInput | cattlesWhereInput[]
    tracer_id?: StringFilter<"cattles"> | string
    farm_id?: StringFilter<"cattles"> | string
    pen_id?: StringFilter<"cattles"> | string
    cattle_type_id?: StringFilter<"cattles"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattles">
    traceability_id?: StringNullableFilter<"cattles"> | string | null
    nid?: StringFilter<"cattles"> | string
    gender?: StringFilter<"cattles"> | string
    castration_status?: StringFilter<"cattles"> | string
    pregnant_status?: StringFilter<"cattles"> | string
    birthdate?: DateTimeFilter<"cattles"> | Date | string
    passport_no?: StringNullableFilter<"cattles"> | string | null
    color?: StringFilter<"cattles"> | string
    ear?: StringFilter<"cattles"> | string
    horn?: StringFilter<"cattles"> | string
    weight?: DecimalFilter<"cattles"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFilter<"cattles"> | Date | string
    tracer_tag?: StringFilter<"cattles"> | string
    ear_tag?: StringNullableListFilter<"cattles">
    breed_sire?: StringNullableListFilter<"cattles">
    breed_dam?: StringNullableListFilter<"cattles">
    breed_pgs?: StringNullableListFilter<"cattles">
    breed_pgd?: StringNullableListFilter<"cattles">
    breed_mgs?: StringNullableListFilter<"cattles">
    breed_mgd?: StringNullableListFilter<"cattles">
    is_sourcing?: BoolFilter<"cattles"> | boolean
    is_tracing?: BoolFilter<"cattles"> | boolean
    country_code?: StringFilter<"cattles"> | string
    status?: StringFilter<"cattles"> | string
    created_at?: DateTimeFilter<"cattles"> | Date | string
    created_by_id?: StringFilter<"cattles"> | string
    created_by?: StringFilter<"cattles"> | string
    updated_at?: DateTimeFilter<"cattles"> | Date | string
    updated_by_id?: StringFilter<"cattles"> | string
    updated_by?: StringFilter<"cattles"> | string
    cattle_attachments?: Cattle_attachmentsListRelationFilter
    cattle_healths?: Cattle_healthsListRelationFilter
    cattle_vaccinations?: Cattle_vaccinationsListRelationFilter
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
    pens?: XOR<PensScalarRelationFilter, pensWhereInput>
  }, "id">

  export type cattlesOrderByWithAggregationInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    cattle_breed_ids?: SortOrder
    traceability_id?: SortOrderInput | SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrderInput | SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    ear_tag?: SortOrder
    breed_sire?: SortOrder
    breed_dam?: SortOrder
    breed_pgs?: SortOrder
    breed_pgd?: SortOrder
    breed_mgs?: SortOrder
    breed_mgd?: SortOrder
    is_sourcing?: SortOrder
    is_tracing?: SortOrder
    country_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: cattlesCountOrderByAggregateInput
    _avg?: cattlesAvgOrderByAggregateInput
    _max?: cattlesMaxOrderByAggregateInput
    _min?: cattlesMinOrderByAggregateInput
    _sum?: cattlesSumOrderByAggregateInput
  }

  export type cattlesScalarWhereWithAggregatesInput = {
    AND?: cattlesScalarWhereWithAggregatesInput | cattlesScalarWhereWithAggregatesInput[]
    OR?: cattlesScalarWhereWithAggregatesInput[]
    NOT?: cattlesScalarWhereWithAggregatesInput | cattlesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"cattles"> | string
    tracer_id?: StringWithAggregatesFilter<"cattles"> | string
    farm_id?: StringWithAggregatesFilter<"cattles"> | string
    pen_id?: StringWithAggregatesFilter<"cattles"> | string
    cattle_type_id?: StringWithAggregatesFilter<"cattles"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattles">
    traceability_id?: StringNullableWithAggregatesFilter<"cattles"> | string | null
    nid?: StringWithAggregatesFilter<"cattles"> | string
    gender?: StringWithAggregatesFilter<"cattles"> | string
    castration_status?: StringWithAggregatesFilter<"cattles"> | string
    pregnant_status?: StringWithAggregatesFilter<"cattles"> | string
    birthdate?: DateTimeWithAggregatesFilter<"cattles"> | Date | string
    passport_no?: StringNullableWithAggregatesFilter<"cattles"> | string | null
    color?: StringWithAggregatesFilter<"cattles"> | string
    ear?: StringWithAggregatesFilter<"cattles"> | string
    horn?: StringWithAggregatesFilter<"cattles"> | string
    weight?: DecimalWithAggregatesFilter<"cattles"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeWithAggregatesFilter<"cattles"> | Date | string
    tracer_tag?: StringWithAggregatesFilter<"cattles"> | string
    ear_tag?: StringNullableListFilter<"cattles">
    breed_sire?: StringNullableListFilter<"cattles">
    breed_dam?: StringNullableListFilter<"cattles">
    breed_pgs?: StringNullableListFilter<"cattles">
    breed_pgd?: StringNullableListFilter<"cattles">
    breed_mgs?: StringNullableListFilter<"cattles">
    breed_mgd?: StringNullableListFilter<"cattles">
    is_sourcing?: BoolWithAggregatesFilter<"cattles"> | boolean
    is_tracing?: BoolWithAggregatesFilter<"cattles"> | boolean
    country_code?: StringWithAggregatesFilter<"cattles"> | string
    status?: StringWithAggregatesFilter<"cattles"> | string
    created_at?: DateTimeWithAggregatesFilter<"cattles"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"cattles"> | string
    created_by?: StringWithAggregatesFilter<"cattles"> | string
    updated_at?: DateTimeWithAggregatesFilter<"cattles"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"cattles"> | string
    updated_by?: StringWithAggregatesFilter<"cattles"> | string
  }

  export type data_migrationsWhereInput = {
    AND?: data_migrationsWhereInput | data_migrationsWhereInput[]
    OR?: data_migrationsWhereInput[]
    NOT?: data_migrationsWhereInput | data_migrationsWhereInput[]
    version?: BigIntFilter<"data_migrations"> | bigint | number
    dirty?: BoolFilter<"data_migrations"> | boolean
  }

  export type data_migrationsOrderByWithRelationInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type data_migrationsWhereUniqueInput = Prisma.AtLeast<{
    version?: bigint | number
    AND?: data_migrationsWhereInput | data_migrationsWhereInput[]
    OR?: data_migrationsWhereInput[]
    NOT?: data_migrationsWhereInput | data_migrationsWhereInput[]
    dirty?: BoolFilter<"data_migrations"> | boolean
  }, "version">

  export type data_migrationsOrderByWithAggregationInput = {
    version?: SortOrder
    dirty?: SortOrder
    _count?: data_migrationsCountOrderByAggregateInput
    _avg?: data_migrationsAvgOrderByAggregateInput
    _max?: data_migrationsMaxOrderByAggregateInput
    _min?: data_migrationsMinOrderByAggregateInput
    _sum?: data_migrationsSumOrderByAggregateInput
  }

  export type data_migrationsScalarWhereWithAggregatesInput = {
    AND?: data_migrationsScalarWhereWithAggregatesInput | data_migrationsScalarWhereWithAggregatesInput[]
    OR?: data_migrationsScalarWhereWithAggregatesInput[]
    NOT?: data_migrationsScalarWhereWithAggregatesInput | data_migrationsScalarWhereWithAggregatesInput[]
    version?: BigIntWithAggregatesFilter<"data_migrations"> | bigint | number
    dirty?: BoolWithAggregatesFilter<"data_migrations"> | boolean
  }

  export type farm_attachmentsWhereInput = {
    AND?: farm_attachmentsWhereInput | farm_attachmentsWhereInput[]
    OR?: farm_attachmentsWhereInput[]
    NOT?: farm_attachmentsWhereInput | farm_attachmentsWhereInput[]
    id?: StringFilter<"farm_attachments"> | string
    farm_id?: StringFilter<"farm_attachments"> | string
    file_name?: StringFilter<"farm_attachments"> | string
    file_path?: StringFilter<"farm_attachments"> | string
    is_public?: BoolFilter<"farm_attachments"> | boolean
    content_type?: StringFilter<"farm_attachments"> | string
    description?: StringNullableFilter<"farm_attachments"> | string | null
    created_at?: DateTimeFilter<"farm_attachments"> | Date | string
    created_by_id?: StringFilter<"farm_attachments"> | string
    created_by?: StringFilter<"farm_attachments"> | string
    updated_at?: DateTimeFilter<"farm_attachments"> | Date | string
    updated_by_id?: StringFilter<"farm_attachments"> | string
    updated_by?: StringFilter<"farm_attachments"> | string
    encrypted_key?: StringNullableFilter<"farm_attachments"> | string | null
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }

  export type farm_attachmentsOrderByWithRelationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrderInput | SortOrder
    farms?: farmsOrderByWithRelationInput
  }

  export type farm_attachmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farm_attachmentsWhereInput | farm_attachmentsWhereInput[]
    OR?: farm_attachmentsWhereInput[]
    NOT?: farm_attachmentsWhereInput | farm_attachmentsWhereInput[]
    farm_id?: StringFilter<"farm_attachments"> | string
    file_name?: StringFilter<"farm_attachments"> | string
    file_path?: StringFilter<"farm_attachments"> | string
    is_public?: BoolFilter<"farm_attachments"> | boolean
    content_type?: StringFilter<"farm_attachments"> | string
    description?: StringNullableFilter<"farm_attachments"> | string | null
    created_at?: DateTimeFilter<"farm_attachments"> | Date | string
    created_by_id?: StringFilter<"farm_attachments"> | string
    created_by?: StringFilter<"farm_attachments"> | string
    updated_at?: DateTimeFilter<"farm_attachments"> | Date | string
    updated_by_id?: StringFilter<"farm_attachments"> | string
    updated_by?: StringFilter<"farm_attachments"> | string
    encrypted_key?: StringNullableFilter<"farm_attachments"> | string | null
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }, "id">

  export type farm_attachmentsOrderByWithAggregationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrderInput | SortOrder
    _count?: farm_attachmentsCountOrderByAggregateInput
    _max?: farm_attachmentsMaxOrderByAggregateInput
    _min?: farm_attachmentsMinOrderByAggregateInput
  }

  export type farm_attachmentsScalarWhereWithAggregatesInput = {
    AND?: farm_attachmentsScalarWhereWithAggregatesInput | farm_attachmentsScalarWhereWithAggregatesInput[]
    OR?: farm_attachmentsScalarWhereWithAggregatesInput[]
    NOT?: farm_attachmentsScalarWhereWithAggregatesInput | farm_attachmentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farm_attachments"> | string
    farm_id?: StringWithAggregatesFilter<"farm_attachments"> | string
    file_name?: StringWithAggregatesFilter<"farm_attachments"> | string
    file_path?: StringWithAggregatesFilter<"farm_attachments"> | string
    is_public?: BoolWithAggregatesFilter<"farm_attachments"> | boolean
    content_type?: StringWithAggregatesFilter<"farm_attachments"> | string
    description?: StringNullableWithAggregatesFilter<"farm_attachments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"farm_attachments"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farm_attachments"> | string
    created_by?: StringWithAggregatesFilter<"farm_attachments"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farm_attachments"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farm_attachments"> | string
    updated_by?: StringWithAggregatesFilter<"farm_attachments"> | string
    encrypted_key?: StringNullableWithAggregatesFilter<"farm_attachments"> | string | null
  }

  export type farm_authorizedWhereInput = {
    AND?: farm_authorizedWhereInput | farm_authorizedWhereInput[]
    OR?: farm_authorizedWhereInput[]
    NOT?: farm_authorizedWhereInput | farm_authorizedWhereInput[]
    id?: StringFilter<"farm_authorized"> | string
    farm_id?: StringFilter<"farm_authorized"> | string
    authorized_type?: StringFilter<"farm_authorized"> | string
    authorized_second_type?: StringNullableFilter<"farm_authorized"> | string | null
    license_id?: StringFilter<"farm_authorized"> | string
    expire_date?: DateTimeFilter<"farm_authorized"> | Date | string
    created_at?: DateTimeFilter<"farm_authorized"> | Date | string
    created_by_id?: StringFilter<"farm_authorized"> | string
    created_by?: StringFilter<"farm_authorized"> | string
    updated_at?: DateTimeFilter<"farm_authorized"> | Date | string
    updated_by_id?: StringFilter<"farm_authorized"> | string
    updated_by?: StringFilter<"farm_authorized"> | string
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }

  export type farm_authorizedOrderByWithRelationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrderInput | SortOrder
    license_id?: SortOrder
    expire_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    farms?: farmsOrderByWithRelationInput
  }

  export type farm_authorizedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farm_authorizedWhereInput | farm_authorizedWhereInput[]
    OR?: farm_authorizedWhereInput[]
    NOT?: farm_authorizedWhereInput | farm_authorizedWhereInput[]
    farm_id?: StringFilter<"farm_authorized"> | string
    authorized_type?: StringFilter<"farm_authorized"> | string
    authorized_second_type?: StringNullableFilter<"farm_authorized"> | string | null
    license_id?: StringFilter<"farm_authorized"> | string
    expire_date?: DateTimeFilter<"farm_authorized"> | Date | string
    created_at?: DateTimeFilter<"farm_authorized"> | Date | string
    created_by_id?: StringFilter<"farm_authorized"> | string
    created_by?: StringFilter<"farm_authorized"> | string
    updated_at?: DateTimeFilter<"farm_authorized"> | Date | string
    updated_by_id?: StringFilter<"farm_authorized"> | string
    updated_by?: StringFilter<"farm_authorized"> | string
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }, "id">

  export type farm_authorizedOrderByWithAggregationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrderInput | SortOrder
    license_id?: SortOrder
    expire_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: farm_authorizedCountOrderByAggregateInput
    _max?: farm_authorizedMaxOrderByAggregateInput
    _min?: farm_authorizedMinOrderByAggregateInput
  }

  export type farm_authorizedScalarWhereWithAggregatesInput = {
    AND?: farm_authorizedScalarWhereWithAggregatesInput | farm_authorizedScalarWhereWithAggregatesInput[]
    OR?: farm_authorizedScalarWhereWithAggregatesInput[]
    NOT?: farm_authorizedScalarWhereWithAggregatesInput | farm_authorizedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farm_authorized"> | string
    farm_id?: StringWithAggregatesFilter<"farm_authorized"> | string
    authorized_type?: StringWithAggregatesFilter<"farm_authorized"> | string
    authorized_second_type?: StringNullableWithAggregatesFilter<"farm_authorized"> | string | null
    license_id?: StringWithAggregatesFilter<"farm_authorized"> | string
    expire_date?: DateTimeWithAggregatesFilter<"farm_authorized"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"farm_authorized"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farm_authorized"> | string
    created_by?: StringWithAggregatesFilter<"farm_authorized"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farm_authorized"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farm_authorized"> | string
    updated_by?: StringWithAggregatesFilter<"farm_authorized"> | string
  }

  export type farm_create_stagedWhereInput = {
    AND?: farm_create_stagedWhereInput | farm_create_stagedWhereInput[]
    OR?: farm_create_stagedWhereInput[]
    NOT?: farm_create_stagedWhereInput | farm_create_stagedWhereInput[]
    id?: StringFilter<"farm_create_staged"> | string
    staged_id?: StringFilter<"farm_create_staged"> | string
    farm_identification?: StringFilter<"farm_create_staged"> | string
    farm_type?: StringFilter<"farm_create_staged"> | string
    ref_1?: StringFilter<"farm_create_staged"> | string
    max_cows?: IntFilter<"farm_create_staged"> | number
    name?: StringFilter<"farm_create_staged"> | string
    standard?: StringFilter<"farm_create_staged"> | string
    rai?: DecimalFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    wa?: DecimalFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    address_line1?: StringFilter<"farm_create_staged"> | string
    address_subdistrict?: StringFilter<"farm_create_staged"> | string
    address_district?: StringFilter<"farm_create_staged"> | string
    address_province?: StringFilter<"farm_create_staged"> | string
    address_zipcode?: StringFilter<"farm_create_staged"> | string
    tracer_id?: StringFilter<"farm_create_staged"> | string
    is_owner_ref_farmer?: BoolFilter<"farm_create_staged"> | boolean
    farmer_id?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_type?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_tin?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_title?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_first_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_middle_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_last_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_company_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_gender?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_birthdate?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_education_degree?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_occupation?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_second_occupation?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_phone_number?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_mobile_number?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_email?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_line_id?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_line1?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_subdistrict?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_district?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_province?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_zipcode?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_line1?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_subdistrict?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_district?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_province?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_zipcode?: StringNullableFilter<"farm_create_staged"> | string | null
    authorized_type?: StringFilter<"farm_create_staged"> | string
    authorized_second_type?: StringNullableFilter<"farm_create_staged"> | string | null
    authorized_license_id?: StringFilter<"farm_create_staged"> | string
    authorized_expire_date?: DateTimeFilter<"farm_create_staged"> | Date | string
    veterinary_name?: StringNullableFilter<"farm_create_staged"> | string | null
    veterinary_license_id?: StringNullableFilter<"farm_create_staged"> | string | null
    created_at?: DateTimeFilter<"farm_create_staged"> | Date | string
    created_by_id?: StringFilter<"farm_create_staged"> | string
    created_by?: StringFilter<"farm_create_staged"> | string
    updated_at?: DateTimeFilter<"farm_create_staged"> | Date | string
    updated_by_id?: StringFilter<"farm_create_staged"> | string
    updated_by?: StringFilter<"farm_create_staged"> | string
    status?: StringFilter<"farm_create_staged"> | string
  }

  export type farm_create_stagedOrderByWithRelationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    ref_1?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    tracer_id?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrderInput | SortOrder
    owner_type?: SortOrderInput | SortOrder
    owner_tin?: SortOrderInput | SortOrder
    owner_title?: SortOrderInput | SortOrder
    owner_first_name?: SortOrderInput | SortOrder
    owner_middle_name?: SortOrderInput | SortOrder
    owner_last_name?: SortOrderInput | SortOrder
    owner_company_name?: SortOrderInput | SortOrder
    owner_gender?: SortOrderInput | SortOrder
    owner_birthdate?: SortOrderInput | SortOrder
    owner_education_degree?: SortOrderInput | SortOrder
    owner_occupation?: SortOrderInput | SortOrder
    owner_second_occupation?: SortOrderInput | SortOrder
    owner_phone_number?: SortOrderInput | SortOrder
    owner_mobile_number?: SortOrderInput | SortOrder
    owner_email?: SortOrderInput | SortOrder
    owner_line_id?: SortOrderInput | SortOrder
    owner_address_line1?: SortOrderInput | SortOrder
    owner_address_subdistrict?: SortOrderInput | SortOrder
    owner_address_district?: SortOrderInput | SortOrder
    owner_address_province?: SortOrderInput | SortOrder
    owner_address_zipcode?: SortOrderInput | SortOrder
    owner_contact_address_line1?: SortOrderInput | SortOrder
    owner_contact_address_subdistrict?: SortOrderInput | SortOrder
    owner_contact_address_district?: SortOrderInput | SortOrder
    owner_contact_address_province?: SortOrderInput | SortOrder
    owner_contact_address_zipcode?: SortOrderInput | SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrderInput | SortOrder
    authorized_license_id?: SortOrder
    authorized_expire_date?: SortOrder
    veterinary_name?: SortOrderInput | SortOrder
    veterinary_license_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    status?: SortOrder
  }

  export type farm_create_stagedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farm_create_stagedWhereInput | farm_create_stagedWhereInput[]
    OR?: farm_create_stagedWhereInput[]
    NOT?: farm_create_stagedWhereInput | farm_create_stagedWhereInput[]
    staged_id?: StringFilter<"farm_create_staged"> | string
    farm_identification?: StringFilter<"farm_create_staged"> | string
    farm_type?: StringFilter<"farm_create_staged"> | string
    ref_1?: StringFilter<"farm_create_staged"> | string
    max_cows?: IntFilter<"farm_create_staged"> | number
    name?: StringFilter<"farm_create_staged"> | string
    standard?: StringFilter<"farm_create_staged"> | string
    rai?: DecimalFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    wa?: DecimalFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    address_line1?: StringFilter<"farm_create_staged"> | string
    address_subdistrict?: StringFilter<"farm_create_staged"> | string
    address_district?: StringFilter<"farm_create_staged"> | string
    address_province?: StringFilter<"farm_create_staged"> | string
    address_zipcode?: StringFilter<"farm_create_staged"> | string
    tracer_id?: StringFilter<"farm_create_staged"> | string
    is_owner_ref_farmer?: BoolFilter<"farm_create_staged"> | boolean
    farmer_id?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_type?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_tin?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_title?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_first_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_middle_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_last_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_company_name?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_gender?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_birthdate?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_education_degree?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_occupation?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_second_occupation?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_phone_number?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_mobile_number?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_email?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_line_id?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_line1?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_subdistrict?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_district?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_province?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_address_zipcode?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_line1?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_subdistrict?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_district?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_province?: StringNullableFilter<"farm_create_staged"> | string | null
    owner_contact_address_zipcode?: StringNullableFilter<"farm_create_staged"> | string | null
    authorized_type?: StringFilter<"farm_create_staged"> | string
    authorized_second_type?: StringNullableFilter<"farm_create_staged"> | string | null
    authorized_license_id?: StringFilter<"farm_create_staged"> | string
    authorized_expire_date?: DateTimeFilter<"farm_create_staged"> | Date | string
    veterinary_name?: StringNullableFilter<"farm_create_staged"> | string | null
    veterinary_license_id?: StringNullableFilter<"farm_create_staged"> | string | null
    created_at?: DateTimeFilter<"farm_create_staged"> | Date | string
    created_by_id?: StringFilter<"farm_create_staged"> | string
    created_by?: StringFilter<"farm_create_staged"> | string
    updated_at?: DateTimeFilter<"farm_create_staged"> | Date | string
    updated_by_id?: StringFilter<"farm_create_staged"> | string
    updated_by?: StringFilter<"farm_create_staged"> | string
    status?: StringFilter<"farm_create_staged"> | string
  }, "id">

  export type farm_create_stagedOrderByWithAggregationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    ref_1?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    tracer_id?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrderInput | SortOrder
    owner_type?: SortOrderInput | SortOrder
    owner_tin?: SortOrderInput | SortOrder
    owner_title?: SortOrderInput | SortOrder
    owner_first_name?: SortOrderInput | SortOrder
    owner_middle_name?: SortOrderInput | SortOrder
    owner_last_name?: SortOrderInput | SortOrder
    owner_company_name?: SortOrderInput | SortOrder
    owner_gender?: SortOrderInput | SortOrder
    owner_birthdate?: SortOrderInput | SortOrder
    owner_education_degree?: SortOrderInput | SortOrder
    owner_occupation?: SortOrderInput | SortOrder
    owner_second_occupation?: SortOrderInput | SortOrder
    owner_phone_number?: SortOrderInput | SortOrder
    owner_mobile_number?: SortOrderInput | SortOrder
    owner_email?: SortOrderInput | SortOrder
    owner_line_id?: SortOrderInput | SortOrder
    owner_address_line1?: SortOrderInput | SortOrder
    owner_address_subdistrict?: SortOrderInput | SortOrder
    owner_address_district?: SortOrderInput | SortOrder
    owner_address_province?: SortOrderInput | SortOrder
    owner_address_zipcode?: SortOrderInput | SortOrder
    owner_contact_address_line1?: SortOrderInput | SortOrder
    owner_contact_address_subdistrict?: SortOrderInput | SortOrder
    owner_contact_address_district?: SortOrderInput | SortOrder
    owner_contact_address_province?: SortOrderInput | SortOrder
    owner_contact_address_zipcode?: SortOrderInput | SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrderInput | SortOrder
    authorized_license_id?: SortOrder
    authorized_expire_date?: SortOrder
    veterinary_name?: SortOrderInput | SortOrder
    veterinary_license_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    status?: SortOrder
    _count?: farm_create_stagedCountOrderByAggregateInput
    _avg?: farm_create_stagedAvgOrderByAggregateInput
    _max?: farm_create_stagedMaxOrderByAggregateInput
    _min?: farm_create_stagedMinOrderByAggregateInput
    _sum?: farm_create_stagedSumOrderByAggregateInput
  }

  export type farm_create_stagedScalarWhereWithAggregatesInput = {
    AND?: farm_create_stagedScalarWhereWithAggregatesInput | farm_create_stagedScalarWhereWithAggregatesInput[]
    OR?: farm_create_stagedScalarWhereWithAggregatesInput[]
    NOT?: farm_create_stagedScalarWhereWithAggregatesInput | farm_create_stagedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farm_create_staged"> | string
    staged_id?: StringWithAggregatesFilter<"farm_create_staged"> | string
    farm_identification?: StringWithAggregatesFilter<"farm_create_staged"> | string
    farm_type?: StringWithAggregatesFilter<"farm_create_staged"> | string
    ref_1?: StringWithAggregatesFilter<"farm_create_staged"> | string
    max_cows?: IntWithAggregatesFilter<"farm_create_staged"> | number
    name?: StringWithAggregatesFilter<"farm_create_staged"> | string
    standard?: StringWithAggregatesFilter<"farm_create_staged"> | string
    rai?: DecimalWithAggregatesFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    ngan?: DecimalWithAggregatesFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    wa?: DecimalWithAggregatesFilter<"farm_create_staged"> | Decimal | DecimalJsLike | number | string
    address_line1?: StringWithAggregatesFilter<"farm_create_staged"> | string
    address_subdistrict?: StringWithAggregatesFilter<"farm_create_staged"> | string
    address_district?: StringWithAggregatesFilter<"farm_create_staged"> | string
    address_province?: StringWithAggregatesFilter<"farm_create_staged"> | string
    address_zipcode?: StringWithAggregatesFilter<"farm_create_staged"> | string
    tracer_id?: StringWithAggregatesFilter<"farm_create_staged"> | string
    is_owner_ref_farmer?: BoolWithAggregatesFilter<"farm_create_staged"> | boolean
    farmer_id?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_type?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_tin?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_title?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_first_name?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_middle_name?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_last_name?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_company_name?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_gender?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_birthdate?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_education_degree?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_occupation?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_second_occupation?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_phone_number?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_mobile_number?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_email?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_line_id?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_address_line1?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_address_subdistrict?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_address_district?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_address_province?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_address_zipcode?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_contact_address_line1?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_contact_address_subdistrict?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_contact_address_district?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_contact_address_province?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    owner_contact_address_zipcode?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    authorized_type?: StringWithAggregatesFilter<"farm_create_staged"> | string
    authorized_second_type?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    authorized_license_id?: StringWithAggregatesFilter<"farm_create_staged"> | string
    authorized_expire_date?: DateTimeWithAggregatesFilter<"farm_create_staged"> | Date | string
    veterinary_name?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    veterinary_license_id?: StringNullableWithAggregatesFilter<"farm_create_staged"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"farm_create_staged"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farm_create_staged"> | string
    created_by?: StringWithAggregatesFilter<"farm_create_staged"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farm_create_staged"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farm_create_staged"> | string
    updated_by?: StringWithAggregatesFilter<"farm_create_staged"> | string
    status?: StringWithAggregatesFilter<"farm_create_staged"> | string
  }

  export type farm_sourcingWhereInput = {
    AND?: farm_sourcingWhereInput | farm_sourcingWhereInput[]
    OR?: farm_sourcingWhereInput[]
    NOT?: farm_sourcingWhereInput | farm_sourcingWhereInput[]
    id?: StringFilter<"farm_sourcing"> | string
    order_id?: StringFilter<"farm_sourcing"> | string
    order_request_id?: StringFilter<"farm_sourcing"> | string
    farm_id?: StringFilter<"farm_sourcing"> | string
    amount?: IntFilter<"farm_sourcing"> | number
    status?: StringFilter<"farm_sourcing"> | string
    created_at?: DateTimeFilter<"farm_sourcing"> | Date | string
    created_by_id?: StringFilter<"farm_sourcing"> | string
    created_by?: StringFilter<"farm_sourcing"> | string
    updated_at?: DateTimeFilter<"farm_sourcing"> | Date | string
    updated_by_id?: StringFilter<"farm_sourcing"> | string
    updated_by?: StringFilter<"farm_sourcing"> | string
    cattle_sourcing?: Cattle_sourcingListRelationFilter
  }

  export type farm_sourcingOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    cattle_sourcing?: cattle_sourcingOrderByRelationAggregateInput
  }

  export type farm_sourcingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farm_sourcingWhereInput | farm_sourcingWhereInput[]
    OR?: farm_sourcingWhereInput[]
    NOT?: farm_sourcingWhereInput | farm_sourcingWhereInput[]
    order_id?: StringFilter<"farm_sourcing"> | string
    order_request_id?: StringFilter<"farm_sourcing"> | string
    farm_id?: StringFilter<"farm_sourcing"> | string
    amount?: IntFilter<"farm_sourcing"> | number
    status?: StringFilter<"farm_sourcing"> | string
    created_at?: DateTimeFilter<"farm_sourcing"> | Date | string
    created_by_id?: StringFilter<"farm_sourcing"> | string
    created_by?: StringFilter<"farm_sourcing"> | string
    updated_at?: DateTimeFilter<"farm_sourcing"> | Date | string
    updated_by_id?: StringFilter<"farm_sourcing"> | string
    updated_by?: StringFilter<"farm_sourcing"> | string
    cattle_sourcing?: Cattle_sourcingListRelationFilter
  }, "id">

  export type farm_sourcingOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: farm_sourcingCountOrderByAggregateInput
    _avg?: farm_sourcingAvgOrderByAggregateInput
    _max?: farm_sourcingMaxOrderByAggregateInput
    _min?: farm_sourcingMinOrderByAggregateInput
    _sum?: farm_sourcingSumOrderByAggregateInput
  }

  export type farm_sourcingScalarWhereWithAggregatesInput = {
    AND?: farm_sourcingScalarWhereWithAggregatesInput | farm_sourcingScalarWhereWithAggregatesInput[]
    OR?: farm_sourcingScalarWhereWithAggregatesInput[]
    NOT?: farm_sourcingScalarWhereWithAggregatesInput | farm_sourcingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farm_sourcing"> | string
    order_id?: StringWithAggregatesFilter<"farm_sourcing"> | string
    order_request_id?: StringWithAggregatesFilter<"farm_sourcing"> | string
    farm_id?: StringWithAggregatesFilter<"farm_sourcing"> | string
    amount?: IntWithAggregatesFilter<"farm_sourcing"> | number
    status?: StringWithAggregatesFilter<"farm_sourcing"> | string
    created_at?: DateTimeWithAggregatesFilter<"farm_sourcing"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farm_sourcing"> | string
    created_by?: StringWithAggregatesFilter<"farm_sourcing"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farm_sourcing"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farm_sourcing"> | string
    updated_by?: StringWithAggregatesFilter<"farm_sourcing"> | string
  }

  export type farm_veterinaryWhereInput = {
    AND?: farm_veterinaryWhereInput | farm_veterinaryWhereInput[]
    OR?: farm_veterinaryWhereInput[]
    NOT?: farm_veterinaryWhereInput | farm_veterinaryWhereInput[]
    id?: StringFilter<"farm_veterinary"> | string
    farm_id?: StringFilter<"farm_veterinary"> | string
    name?: StringFilter<"farm_veterinary"> | string
    license_id?: StringFilter<"farm_veterinary"> | string
    created_at?: DateTimeFilter<"farm_veterinary"> | Date | string
    created_by_id?: StringFilter<"farm_veterinary"> | string
    created_by?: StringFilter<"farm_veterinary"> | string
    updated_at?: DateTimeFilter<"farm_veterinary"> | Date | string
    updated_by_id?: StringFilter<"farm_veterinary"> | string
    updated_by?: StringFilter<"farm_veterinary"> | string
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }

  export type farm_veterinaryOrderByWithRelationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    name?: SortOrder
    license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    farms?: farmsOrderByWithRelationInput
  }

  export type farm_veterinaryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farm_veterinaryWhereInput | farm_veterinaryWhereInput[]
    OR?: farm_veterinaryWhereInput[]
    NOT?: farm_veterinaryWhereInput | farm_veterinaryWhereInput[]
    farm_id?: StringFilter<"farm_veterinary"> | string
    name?: StringFilter<"farm_veterinary"> | string
    license_id?: StringFilter<"farm_veterinary"> | string
    created_at?: DateTimeFilter<"farm_veterinary"> | Date | string
    created_by_id?: StringFilter<"farm_veterinary"> | string
    created_by?: StringFilter<"farm_veterinary"> | string
    updated_at?: DateTimeFilter<"farm_veterinary"> | Date | string
    updated_by_id?: StringFilter<"farm_veterinary"> | string
    updated_by?: StringFilter<"farm_veterinary"> | string
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }, "id">

  export type farm_veterinaryOrderByWithAggregationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    name?: SortOrder
    license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: farm_veterinaryCountOrderByAggregateInput
    _max?: farm_veterinaryMaxOrderByAggregateInput
    _min?: farm_veterinaryMinOrderByAggregateInput
  }

  export type farm_veterinaryScalarWhereWithAggregatesInput = {
    AND?: farm_veterinaryScalarWhereWithAggregatesInput | farm_veterinaryScalarWhereWithAggregatesInput[]
    OR?: farm_veterinaryScalarWhereWithAggregatesInput[]
    NOT?: farm_veterinaryScalarWhereWithAggregatesInput | farm_veterinaryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farm_veterinary"> | string
    farm_id?: StringWithAggregatesFilter<"farm_veterinary"> | string
    name?: StringWithAggregatesFilter<"farm_veterinary"> | string
    license_id?: StringWithAggregatesFilter<"farm_veterinary"> | string
    created_at?: DateTimeWithAggregatesFilter<"farm_veterinary"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farm_veterinary"> | string
    created_by?: StringWithAggregatesFilter<"farm_veterinary"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farm_veterinary"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farm_veterinary"> | string
    updated_by?: StringWithAggregatesFilter<"farm_veterinary"> | string
  }

  export type farmer_accountsWhereInput = {
    AND?: farmer_accountsWhereInput | farmer_accountsWhereInput[]
    OR?: farmer_accountsWhereInput[]
    NOT?: farmer_accountsWhereInput | farmer_accountsWhereInput[]
    id?: StringFilter<"farmer_accounts"> | string
    farmer_id?: StringFilter<"farmer_accounts"> | string
    username?: StringFilter<"farmer_accounts"> | string
    password?: StringFilter<"farmer_accounts"> | string
    role_id?: IntNullableFilter<"farmer_accounts"> | number | null
    permissions?: StringNullableListFilter<"farmer_accounts">
    status?: StringNullableFilter<"farmer_accounts"> | string | null
    created_at?: DateTimeFilter<"farmer_accounts"> | Date | string
    created_by_id?: StringFilter<"farmer_accounts"> | string
    created_by?: StringFilter<"farmer_accounts"> | string
    updated_at?: DateTimeFilter<"farmer_accounts"> | Date | string
    updated_by_id?: StringFilter<"farmer_accounts"> | string
    updated_by?: StringFilter<"farmer_accounts"> | string
    farmers?: XOR<FarmersScalarRelationFilter, farmersWhereInput>
  }

  export type farmer_accountsOrderByWithRelationInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role_id?: SortOrderInput | SortOrder
    permissions?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    farmers?: farmersOrderByWithRelationInput
  }

  export type farmer_accountsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farmer_accountsWhereInput | farmer_accountsWhereInput[]
    OR?: farmer_accountsWhereInput[]
    NOT?: farmer_accountsWhereInput | farmer_accountsWhereInput[]
    farmer_id?: StringFilter<"farmer_accounts"> | string
    username?: StringFilter<"farmer_accounts"> | string
    password?: StringFilter<"farmer_accounts"> | string
    role_id?: IntNullableFilter<"farmer_accounts"> | number | null
    permissions?: StringNullableListFilter<"farmer_accounts">
    status?: StringNullableFilter<"farmer_accounts"> | string | null
    created_at?: DateTimeFilter<"farmer_accounts"> | Date | string
    created_by_id?: StringFilter<"farmer_accounts"> | string
    created_by?: StringFilter<"farmer_accounts"> | string
    updated_at?: DateTimeFilter<"farmer_accounts"> | Date | string
    updated_by_id?: StringFilter<"farmer_accounts"> | string
    updated_by?: StringFilter<"farmer_accounts"> | string
    farmers?: XOR<FarmersScalarRelationFilter, farmersWhereInput>
  }, "id">

  export type farmer_accountsOrderByWithAggregationInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role_id?: SortOrderInput | SortOrder
    permissions?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: farmer_accountsCountOrderByAggregateInput
    _avg?: farmer_accountsAvgOrderByAggregateInput
    _max?: farmer_accountsMaxOrderByAggregateInput
    _min?: farmer_accountsMinOrderByAggregateInput
    _sum?: farmer_accountsSumOrderByAggregateInput
  }

  export type farmer_accountsScalarWhereWithAggregatesInput = {
    AND?: farmer_accountsScalarWhereWithAggregatesInput | farmer_accountsScalarWhereWithAggregatesInput[]
    OR?: farmer_accountsScalarWhereWithAggregatesInput[]
    NOT?: farmer_accountsScalarWhereWithAggregatesInput | farmer_accountsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farmer_accounts"> | string
    farmer_id?: StringWithAggregatesFilter<"farmer_accounts"> | string
    username?: StringWithAggregatesFilter<"farmer_accounts"> | string
    password?: StringWithAggregatesFilter<"farmer_accounts"> | string
    role_id?: IntNullableWithAggregatesFilter<"farmer_accounts"> | number | null
    permissions?: StringNullableListFilter<"farmer_accounts">
    status?: StringNullableWithAggregatesFilter<"farmer_accounts"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"farmer_accounts"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farmer_accounts"> | string
    created_by?: StringWithAggregatesFilter<"farmer_accounts"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farmer_accounts"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farmer_accounts"> | string
    updated_by?: StringWithAggregatesFilter<"farmer_accounts"> | string
  }

  export type farmer_attachmentsWhereInput = {
    AND?: farmer_attachmentsWhereInput | farmer_attachmentsWhereInput[]
    OR?: farmer_attachmentsWhereInput[]
    NOT?: farmer_attachmentsWhereInput | farmer_attachmentsWhereInput[]
    id?: StringFilter<"farmer_attachments"> | string
    farmer_id?: StringFilter<"farmer_attachments"> | string
    file_name?: StringFilter<"farmer_attachments"> | string
    file_path?: StringFilter<"farmer_attachments"> | string
    is_public?: BoolFilter<"farmer_attachments"> | boolean
    content_type?: StringFilter<"farmer_attachments"> | string
    description?: StringNullableFilter<"farmer_attachments"> | string | null
    created_at?: DateTimeFilter<"farmer_attachments"> | Date | string
    created_by_id?: StringFilter<"farmer_attachments"> | string
    created_by?: StringFilter<"farmer_attachments"> | string
    updated_at?: DateTimeFilter<"farmer_attachments"> | Date | string
    updated_by_id?: StringFilter<"farmer_attachments"> | string
    updated_by?: StringFilter<"farmer_attachments"> | string
    encrypted_key?: StringNullableFilter<"farmer_attachments"> | string | null
    farmers?: XOR<FarmersScalarRelationFilter, farmersWhereInput>
  }

  export type farmer_attachmentsOrderByWithRelationInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrderInput | SortOrder
    farmers?: farmersOrderByWithRelationInput
  }

  export type farmer_attachmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farmer_attachmentsWhereInput | farmer_attachmentsWhereInput[]
    OR?: farmer_attachmentsWhereInput[]
    NOT?: farmer_attachmentsWhereInput | farmer_attachmentsWhereInput[]
    farmer_id?: StringFilter<"farmer_attachments"> | string
    file_name?: StringFilter<"farmer_attachments"> | string
    file_path?: StringFilter<"farmer_attachments"> | string
    is_public?: BoolFilter<"farmer_attachments"> | boolean
    content_type?: StringFilter<"farmer_attachments"> | string
    description?: StringNullableFilter<"farmer_attachments"> | string | null
    created_at?: DateTimeFilter<"farmer_attachments"> | Date | string
    created_by_id?: StringFilter<"farmer_attachments"> | string
    created_by?: StringFilter<"farmer_attachments"> | string
    updated_at?: DateTimeFilter<"farmer_attachments"> | Date | string
    updated_by_id?: StringFilter<"farmer_attachments"> | string
    updated_by?: StringFilter<"farmer_attachments"> | string
    encrypted_key?: StringNullableFilter<"farmer_attachments"> | string | null
    farmers?: XOR<FarmersScalarRelationFilter, farmersWhereInput>
  }, "id">

  export type farmer_attachmentsOrderByWithAggregationInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrderInput | SortOrder
    _count?: farmer_attachmentsCountOrderByAggregateInput
    _max?: farmer_attachmentsMaxOrderByAggregateInput
    _min?: farmer_attachmentsMinOrderByAggregateInput
  }

  export type farmer_attachmentsScalarWhereWithAggregatesInput = {
    AND?: farmer_attachmentsScalarWhereWithAggregatesInput | farmer_attachmentsScalarWhereWithAggregatesInput[]
    OR?: farmer_attachmentsScalarWhereWithAggregatesInput[]
    NOT?: farmer_attachmentsScalarWhereWithAggregatesInput | farmer_attachmentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farmer_attachments"> | string
    farmer_id?: StringWithAggregatesFilter<"farmer_attachments"> | string
    file_name?: StringWithAggregatesFilter<"farmer_attachments"> | string
    file_path?: StringWithAggregatesFilter<"farmer_attachments"> | string
    is_public?: BoolWithAggregatesFilter<"farmer_attachments"> | boolean
    content_type?: StringWithAggregatesFilter<"farmer_attachments"> | string
    description?: StringNullableWithAggregatesFilter<"farmer_attachments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"farmer_attachments"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farmer_attachments"> | string
    created_by?: StringWithAggregatesFilter<"farmer_attachments"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farmer_attachments"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farmer_attachments"> | string
    updated_by?: StringWithAggregatesFilter<"farmer_attachments"> | string
    encrypted_key?: StringNullableWithAggregatesFilter<"farmer_attachments"> | string | null
  }

  export type farmer_create_stagedWhereInput = {
    AND?: farmer_create_stagedWhereInput | farmer_create_stagedWhereInput[]
    OR?: farmer_create_stagedWhereInput[]
    NOT?: farmer_create_stagedWhereInput | farmer_create_stagedWhereInput[]
    id?: StringFilter<"farmer_create_staged"> | string
    staged_id?: StringFilter<"farmer_create_staged"> | string
    farmer_type?: StringFilter<"farmer_create_staged"> | string
    tin?: StringFilter<"farmer_create_staged"> | string
    title?: StringNullableFilter<"farmer_create_staged"> | string | null
    first_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    middle_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    last_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    company_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    gender?: StringNullableFilter<"farmer_create_staged"> | string | null
    birthdate?: StringNullableFilter<"farmer_create_staged"> | string | null
    education_degree?: StringNullableFilter<"farmer_create_staged"> | string | null
    occupation?: StringNullableFilter<"farmer_create_staged"> | string | null
    second_occupation?: StringNullableFilter<"farmer_create_staged"> | string | null
    phone_number?: StringNullableFilter<"farmer_create_staged"> | string | null
    mobile_number?: StringNullableFilter<"farmer_create_staged"> | string | null
    email?: StringNullableFilter<"farmer_create_staged"> | string | null
    line_id?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_line1?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_subdistrict?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_district?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_province?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_zipcode?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_line1?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_subdistrict?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_district?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_province?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_zipcode?: StringNullableFilter<"farmer_create_staged"> | string | null
    status?: IntFilter<"farmer_create_staged"> | number
    created_at?: DateTimeFilter<"farmer_create_staged"> | Date | string
    created_by_id?: StringFilter<"farmer_create_staged"> | string
    created_by?: StringFilter<"farmer_create_staged"> | string
    updated_at?: DateTimeFilter<"farmer_create_staged"> | Date | string
    updated_by_id?: StringFilter<"farmer_create_staged"> | string
    updated_by?: StringFilter<"farmer_create_staged"> | string
  }

  export type farmer_create_stagedOrderByWithRelationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    company_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    education_degree?: SortOrderInput | SortOrder
    occupation?: SortOrderInput | SortOrder
    second_occupation?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    mobile_number?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    line_id?: SortOrderInput | SortOrder
    address_line1?: SortOrderInput | SortOrder
    address_subdistrict?: SortOrderInput | SortOrder
    address_district?: SortOrderInput | SortOrder
    address_province?: SortOrderInput | SortOrder
    address_zipcode?: SortOrderInput | SortOrder
    contact_address_line1?: SortOrderInput | SortOrder
    contact_address_subdistrict?: SortOrderInput | SortOrder
    contact_address_district?: SortOrderInput | SortOrder
    contact_address_province?: SortOrderInput | SortOrder
    contact_address_zipcode?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_create_stagedWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farmer_create_stagedWhereInput | farmer_create_stagedWhereInput[]
    OR?: farmer_create_stagedWhereInput[]
    NOT?: farmer_create_stagedWhereInput | farmer_create_stagedWhereInput[]
    staged_id?: StringFilter<"farmer_create_staged"> | string
    farmer_type?: StringFilter<"farmer_create_staged"> | string
    tin?: StringFilter<"farmer_create_staged"> | string
    title?: StringNullableFilter<"farmer_create_staged"> | string | null
    first_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    middle_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    last_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    company_name?: StringNullableFilter<"farmer_create_staged"> | string | null
    gender?: StringNullableFilter<"farmer_create_staged"> | string | null
    birthdate?: StringNullableFilter<"farmer_create_staged"> | string | null
    education_degree?: StringNullableFilter<"farmer_create_staged"> | string | null
    occupation?: StringNullableFilter<"farmer_create_staged"> | string | null
    second_occupation?: StringNullableFilter<"farmer_create_staged"> | string | null
    phone_number?: StringNullableFilter<"farmer_create_staged"> | string | null
    mobile_number?: StringNullableFilter<"farmer_create_staged"> | string | null
    email?: StringNullableFilter<"farmer_create_staged"> | string | null
    line_id?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_line1?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_subdistrict?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_district?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_province?: StringNullableFilter<"farmer_create_staged"> | string | null
    address_zipcode?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_line1?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_subdistrict?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_district?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_province?: StringNullableFilter<"farmer_create_staged"> | string | null
    contact_address_zipcode?: StringNullableFilter<"farmer_create_staged"> | string | null
    status?: IntFilter<"farmer_create_staged"> | number
    created_at?: DateTimeFilter<"farmer_create_staged"> | Date | string
    created_by_id?: StringFilter<"farmer_create_staged"> | string
    created_by?: StringFilter<"farmer_create_staged"> | string
    updated_at?: DateTimeFilter<"farmer_create_staged"> | Date | string
    updated_by_id?: StringFilter<"farmer_create_staged"> | string
    updated_by?: StringFilter<"farmer_create_staged"> | string
  }, "id">

  export type farmer_create_stagedOrderByWithAggregationInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    title?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    company_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    education_degree?: SortOrderInput | SortOrder
    occupation?: SortOrderInput | SortOrder
    second_occupation?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    mobile_number?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    line_id?: SortOrderInput | SortOrder
    address_line1?: SortOrderInput | SortOrder
    address_subdistrict?: SortOrderInput | SortOrder
    address_district?: SortOrderInput | SortOrder
    address_province?: SortOrderInput | SortOrder
    address_zipcode?: SortOrderInput | SortOrder
    contact_address_line1?: SortOrderInput | SortOrder
    contact_address_subdistrict?: SortOrderInput | SortOrder
    contact_address_district?: SortOrderInput | SortOrder
    contact_address_province?: SortOrderInput | SortOrder
    contact_address_zipcode?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: farmer_create_stagedCountOrderByAggregateInput
    _avg?: farmer_create_stagedAvgOrderByAggregateInput
    _max?: farmer_create_stagedMaxOrderByAggregateInput
    _min?: farmer_create_stagedMinOrderByAggregateInput
    _sum?: farmer_create_stagedSumOrderByAggregateInput
  }

  export type farmer_create_stagedScalarWhereWithAggregatesInput = {
    AND?: farmer_create_stagedScalarWhereWithAggregatesInput | farmer_create_stagedScalarWhereWithAggregatesInput[]
    OR?: farmer_create_stagedScalarWhereWithAggregatesInput[]
    NOT?: farmer_create_stagedScalarWhereWithAggregatesInput | farmer_create_stagedScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    staged_id?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    farmer_type?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    tin?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    title?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    first_name?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    middle_name?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    company_name?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    gender?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    birthdate?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    education_degree?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    occupation?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    second_occupation?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    phone_number?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    mobile_number?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    email?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    line_id?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    address_line1?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    address_subdistrict?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    address_district?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    address_province?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    address_zipcode?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    contact_address_line1?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    contact_address_subdistrict?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    contact_address_district?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    contact_address_province?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    contact_address_zipcode?: StringNullableWithAggregatesFilter<"farmer_create_staged"> | string | null
    status?: IntWithAggregatesFilter<"farmer_create_staged"> | number
    created_at?: DateTimeWithAggregatesFilter<"farmer_create_staged"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    created_by?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farmer_create_staged"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farmer_create_staged"> | string
    updated_by?: StringWithAggregatesFilter<"farmer_create_staged"> | string
  }

  export type farmersWhereInput = {
    AND?: farmersWhereInput | farmersWhereInput[]
    OR?: farmersWhereInput[]
    NOT?: farmersWhereInput | farmersWhereInput[]
    id?: StringFilter<"farmers"> | string
    tracer_id?: StringFilter<"farmers"> | string
    farmer_type?: StringFilter<"farmers"> | string
    tin?: StringFilter<"farmers"> | string
    masking_tin?: StringNullableFilter<"farmers"> | string | null
    title?: StringFilter<"farmers"> | string
    first_name?: StringFilter<"farmers"> | string
    middle_name?: StringNullableFilter<"farmers"> | string | null
    last_name?: StringFilter<"farmers"> | string
    company_name?: StringNullableFilter<"farmers"> | string | null
    gender?: StringNullableFilter<"farmers"> | string | null
    birthdate?: StringNullableFilter<"farmers"> | string | null
    education_degree?: StringNullableFilter<"farmers"> | string | null
    occupation?: StringNullableFilter<"farmers"> | string | null
    second_occupation?: StringNullableFilter<"farmers"> | string | null
    phone_number?: StringNullableFilter<"farmers"> | string | null
    mobile_number?: StringFilter<"farmers"> | string
    email?: StringNullableFilter<"farmers"> | string | null
    line_id?: StringFilter<"farmers"> | string
    address_line1?: StringFilter<"farmers"> | string
    address_subdistrict?: StringFilter<"farmers"> | string
    address_district?: StringFilter<"farmers"> | string
    address_province?: StringFilter<"farmers"> | string
    address_zipcode?: StringFilter<"farmers"> | string
    contact_address_line1?: StringFilter<"farmers"> | string
    contact_address_subdistrict?: StringFilter<"farmers"> | string
    contact_address_district?: StringFilter<"farmers"> | string
    contact_address_province?: StringFilter<"farmers"> | string
    contact_address_zipcode?: StringFilter<"farmers"> | string
    status?: StringFilter<"farmers"> | string
    created_at?: DateTimeFilter<"farmers"> | Date | string
    created_by_id?: StringFilter<"farmers"> | string
    created_by?: StringFilter<"farmers"> | string
    updated_at?: DateTimeFilter<"farmers"> | Date | string
    updated_by_id?: StringFilter<"farmers"> | string
    updated_by?: StringFilter<"farmers"> | string
    farmer_accounts?: Farmer_accountsListRelationFilter
    farmer_attachments?: Farmer_attachmentsListRelationFilter
  }

  export type farmersOrderByWithRelationInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    masking_tin?: SortOrderInput | SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrder
    company_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    education_degree?: SortOrderInput | SortOrder
    occupation?: SortOrderInput | SortOrder
    second_occupation?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    mobile_number?: SortOrder
    email?: SortOrderInput | SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    farmer_accounts?: farmer_accountsOrderByRelationAggregateInput
    farmer_attachments?: farmer_attachmentsOrderByRelationAggregateInput
  }

  export type farmersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farmersWhereInput | farmersWhereInput[]
    OR?: farmersWhereInput[]
    NOT?: farmersWhereInput | farmersWhereInput[]
    tracer_id?: StringFilter<"farmers"> | string
    farmer_type?: StringFilter<"farmers"> | string
    tin?: StringFilter<"farmers"> | string
    masking_tin?: StringNullableFilter<"farmers"> | string | null
    title?: StringFilter<"farmers"> | string
    first_name?: StringFilter<"farmers"> | string
    middle_name?: StringNullableFilter<"farmers"> | string | null
    last_name?: StringFilter<"farmers"> | string
    company_name?: StringNullableFilter<"farmers"> | string | null
    gender?: StringNullableFilter<"farmers"> | string | null
    birthdate?: StringNullableFilter<"farmers"> | string | null
    education_degree?: StringNullableFilter<"farmers"> | string | null
    occupation?: StringNullableFilter<"farmers"> | string | null
    second_occupation?: StringNullableFilter<"farmers"> | string | null
    phone_number?: StringNullableFilter<"farmers"> | string | null
    mobile_number?: StringFilter<"farmers"> | string
    email?: StringNullableFilter<"farmers"> | string | null
    line_id?: StringFilter<"farmers"> | string
    address_line1?: StringFilter<"farmers"> | string
    address_subdistrict?: StringFilter<"farmers"> | string
    address_district?: StringFilter<"farmers"> | string
    address_province?: StringFilter<"farmers"> | string
    address_zipcode?: StringFilter<"farmers"> | string
    contact_address_line1?: StringFilter<"farmers"> | string
    contact_address_subdistrict?: StringFilter<"farmers"> | string
    contact_address_district?: StringFilter<"farmers"> | string
    contact_address_province?: StringFilter<"farmers"> | string
    contact_address_zipcode?: StringFilter<"farmers"> | string
    status?: StringFilter<"farmers"> | string
    created_at?: DateTimeFilter<"farmers"> | Date | string
    created_by_id?: StringFilter<"farmers"> | string
    created_by?: StringFilter<"farmers"> | string
    updated_at?: DateTimeFilter<"farmers"> | Date | string
    updated_by_id?: StringFilter<"farmers"> | string
    updated_by?: StringFilter<"farmers"> | string
    farmer_accounts?: Farmer_accountsListRelationFilter
    farmer_attachments?: Farmer_attachmentsListRelationFilter
  }, "id">

  export type farmersOrderByWithAggregationInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    masking_tin?: SortOrderInput | SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrderInput | SortOrder
    last_name?: SortOrder
    company_name?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    education_degree?: SortOrderInput | SortOrder
    occupation?: SortOrderInput | SortOrder
    second_occupation?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    mobile_number?: SortOrder
    email?: SortOrderInput | SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: farmersCountOrderByAggregateInput
    _max?: farmersMaxOrderByAggregateInput
    _min?: farmersMinOrderByAggregateInput
  }

  export type farmersScalarWhereWithAggregatesInput = {
    AND?: farmersScalarWhereWithAggregatesInput | farmersScalarWhereWithAggregatesInput[]
    OR?: farmersScalarWhereWithAggregatesInput[]
    NOT?: farmersScalarWhereWithAggregatesInput | farmersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farmers"> | string
    tracer_id?: StringWithAggregatesFilter<"farmers"> | string
    farmer_type?: StringWithAggregatesFilter<"farmers"> | string
    tin?: StringWithAggregatesFilter<"farmers"> | string
    masking_tin?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    title?: StringWithAggregatesFilter<"farmers"> | string
    first_name?: StringWithAggregatesFilter<"farmers"> | string
    middle_name?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    last_name?: StringWithAggregatesFilter<"farmers"> | string
    company_name?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    gender?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    birthdate?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    education_degree?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    occupation?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    second_occupation?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    phone_number?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    mobile_number?: StringWithAggregatesFilter<"farmers"> | string
    email?: StringNullableWithAggregatesFilter<"farmers"> | string | null
    line_id?: StringWithAggregatesFilter<"farmers"> | string
    address_line1?: StringWithAggregatesFilter<"farmers"> | string
    address_subdistrict?: StringWithAggregatesFilter<"farmers"> | string
    address_district?: StringWithAggregatesFilter<"farmers"> | string
    address_province?: StringWithAggregatesFilter<"farmers"> | string
    address_zipcode?: StringWithAggregatesFilter<"farmers"> | string
    contact_address_line1?: StringWithAggregatesFilter<"farmers"> | string
    contact_address_subdistrict?: StringWithAggregatesFilter<"farmers"> | string
    contact_address_district?: StringWithAggregatesFilter<"farmers"> | string
    contact_address_province?: StringWithAggregatesFilter<"farmers"> | string
    contact_address_zipcode?: StringWithAggregatesFilter<"farmers"> | string
    status?: StringWithAggregatesFilter<"farmers"> | string
    created_at?: DateTimeWithAggregatesFilter<"farmers"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farmers"> | string
    created_by?: StringWithAggregatesFilter<"farmers"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farmers"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farmers"> | string
    updated_by?: StringWithAggregatesFilter<"farmers"> | string
  }

  export type farmsWhereInput = {
    AND?: farmsWhereInput | farmsWhereInput[]
    OR?: farmsWhereInput[]
    NOT?: farmsWhereInput | farmsWhereInput[]
    id?: StringFilter<"farms"> | string
    tracer_id?: StringFilter<"farms"> | string
    farm_identification?: StringFilter<"farms"> | string
    farm_type?: StringFilter<"farms"> | string
    max_cows?: IntFilter<"farms"> | number
    name?: StringFilter<"farms"> | string
    standard?: StringFilter<"farms"> | string
    status?: StringFilter<"farms"> | string
    rai?: DecimalFilter<"farms"> | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFilter<"farms"> | Decimal | DecimalJsLike | number | string
    wa?: DecimalFilter<"farms"> | Decimal | DecimalJsLike | number | string
    address_line1?: StringFilter<"farms"> | string
    address_subdistrict?: StringFilter<"farms"> | string
    address_district?: StringFilter<"farms"> | string
    address_province?: StringFilter<"farms"> | string
    address_zipcode?: StringFilter<"farms"> | string
    is_owner_ref_farmer?: BoolFilter<"farms"> | boolean
    farmer_id?: StringNullableFilter<"farms"> | string | null
    owner_type?: StringNullableFilter<"farms"> | string | null
    owner_tin?: StringNullableFilter<"farms"> | string | null
    owner_masking_tin?: StringNullableFilter<"farms"> | string | null
    owner_title?: StringNullableFilter<"farms"> | string | null
    owner_first_name?: StringNullableFilter<"farms"> | string | null
    owner_middle_name?: StringNullableFilter<"farms"> | string | null
    owner_last_name?: StringNullableFilter<"farms"> | string | null
    owner_company_name?: StringNullableFilter<"farms"> | string | null
    owner_gender?: StringNullableFilter<"farms"> | string | null
    owner_birthdate?: StringNullableFilter<"farms"> | string | null
    owner_education_degree?: StringNullableFilter<"farms"> | string | null
    owner_occupation?: StringNullableFilter<"farms"> | string | null
    owner_second_occupation?: StringNullableFilter<"farms"> | string | null
    owner_phone_number?: StringNullableFilter<"farms"> | string | null
    owner_mobile_number?: StringNullableFilter<"farms"> | string | null
    owner_email?: StringNullableFilter<"farms"> | string | null
    owner_line_id?: StringNullableFilter<"farms"> | string | null
    owner_address_line1?: StringNullableFilter<"farms"> | string | null
    owner_address_subdistrict?: StringNullableFilter<"farms"> | string | null
    owner_address_district?: StringNullableFilter<"farms"> | string | null
    owner_address_province?: StringNullableFilter<"farms"> | string | null
    owner_address_zipcode?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_line1?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_subdistrict?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_district?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_province?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_zipcode?: StringNullableFilter<"farms"> | string | null
    created_at?: DateTimeFilter<"farms"> | Date | string
    created_by_id?: StringFilter<"farms"> | string
    created_by?: StringFilter<"farms"> | string
    updated_at?: DateTimeFilter<"farms"> | Date | string
    updated_by_id?: StringFilter<"farms"> | string
    updated_by?: StringFilter<"farms"> | string
    ref_1?: StringFilter<"farms"> | string
    cattles?: CattlesListRelationFilter
    farm_attachments?: Farm_attachmentsListRelationFilter
    farm_authorized?: Farm_authorizedListRelationFilter
    farm_veterinary?: Farm_veterinaryListRelationFilter
    pens?: PensListRelationFilter
  }

  export type farmsOrderByWithRelationInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    status?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrderInput | SortOrder
    owner_type?: SortOrderInput | SortOrder
    owner_tin?: SortOrderInput | SortOrder
    owner_masking_tin?: SortOrderInput | SortOrder
    owner_title?: SortOrderInput | SortOrder
    owner_first_name?: SortOrderInput | SortOrder
    owner_middle_name?: SortOrderInput | SortOrder
    owner_last_name?: SortOrderInput | SortOrder
    owner_company_name?: SortOrderInput | SortOrder
    owner_gender?: SortOrderInput | SortOrder
    owner_birthdate?: SortOrderInput | SortOrder
    owner_education_degree?: SortOrderInput | SortOrder
    owner_occupation?: SortOrderInput | SortOrder
    owner_second_occupation?: SortOrderInput | SortOrder
    owner_phone_number?: SortOrderInput | SortOrder
    owner_mobile_number?: SortOrderInput | SortOrder
    owner_email?: SortOrderInput | SortOrder
    owner_line_id?: SortOrderInput | SortOrder
    owner_address_line1?: SortOrderInput | SortOrder
    owner_address_subdistrict?: SortOrderInput | SortOrder
    owner_address_district?: SortOrderInput | SortOrder
    owner_address_province?: SortOrderInput | SortOrder
    owner_address_zipcode?: SortOrderInput | SortOrder
    owner_contact_address_line1?: SortOrderInput | SortOrder
    owner_contact_address_subdistrict?: SortOrderInput | SortOrder
    owner_contact_address_district?: SortOrderInput | SortOrder
    owner_contact_address_province?: SortOrderInput | SortOrder
    owner_contact_address_zipcode?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    ref_1?: SortOrder
    cattles?: cattlesOrderByRelationAggregateInput
    farm_attachments?: farm_attachmentsOrderByRelationAggregateInput
    farm_authorized?: farm_authorizedOrderByRelationAggregateInput
    farm_veterinary?: farm_veterinaryOrderByRelationAggregateInput
    pens?: pensOrderByRelationAggregateInput
  }

  export type farmsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: farmsWhereInput | farmsWhereInput[]
    OR?: farmsWhereInput[]
    NOT?: farmsWhereInput | farmsWhereInput[]
    tracer_id?: StringFilter<"farms"> | string
    farm_identification?: StringFilter<"farms"> | string
    farm_type?: StringFilter<"farms"> | string
    max_cows?: IntFilter<"farms"> | number
    name?: StringFilter<"farms"> | string
    standard?: StringFilter<"farms"> | string
    status?: StringFilter<"farms"> | string
    rai?: DecimalFilter<"farms"> | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFilter<"farms"> | Decimal | DecimalJsLike | number | string
    wa?: DecimalFilter<"farms"> | Decimal | DecimalJsLike | number | string
    address_line1?: StringFilter<"farms"> | string
    address_subdistrict?: StringFilter<"farms"> | string
    address_district?: StringFilter<"farms"> | string
    address_province?: StringFilter<"farms"> | string
    address_zipcode?: StringFilter<"farms"> | string
    is_owner_ref_farmer?: BoolFilter<"farms"> | boolean
    farmer_id?: StringNullableFilter<"farms"> | string | null
    owner_type?: StringNullableFilter<"farms"> | string | null
    owner_tin?: StringNullableFilter<"farms"> | string | null
    owner_masking_tin?: StringNullableFilter<"farms"> | string | null
    owner_title?: StringNullableFilter<"farms"> | string | null
    owner_first_name?: StringNullableFilter<"farms"> | string | null
    owner_middle_name?: StringNullableFilter<"farms"> | string | null
    owner_last_name?: StringNullableFilter<"farms"> | string | null
    owner_company_name?: StringNullableFilter<"farms"> | string | null
    owner_gender?: StringNullableFilter<"farms"> | string | null
    owner_birthdate?: StringNullableFilter<"farms"> | string | null
    owner_education_degree?: StringNullableFilter<"farms"> | string | null
    owner_occupation?: StringNullableFilter<"farms"> | string | null
    owner_second_occupation?: StringNullableFilter<"farms"> | string | null
    owner_phone_number?: StringNullableFilter<"farms"> | string | null
    owner_mobile_number?: StringNullableFilter<"farms"> | string | null
    owner_email?: StringNullableFilter<"farms"> | string | null
    owner_line_id?: StringNullableFilter<"farms"> | string | null
    owner_address_line1?: StringNullableFilter<"farms"> | string | null
    owner_address_subdistrict?: StringNullableFilter<"farms"> | string | null
    owner_address_district?: StringNullableFilter<"farms"> | string | null
    owner_address_province?: StringNullableFilter<"farms"> | string | null
    owner_address_zipcode?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_line1?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_subdistrict?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_district?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_province?: StringNullableFilter<"farms"> | string | null
    owner_contact_address_zipcode?: StringNullableFilter<"farms"> | string | null
    created_at?: DateTimeFilter<"farms"> | Date | string
    created_by_id?: StringFilter<"farms"> | string
    created_by?: StringFilter<"farms"> | string
    updated_at?: DateTimeFilter<"farms"> | Date | string
    updated_by_id?: StringFilter<"farms"> | string
    updated_by?: StringFilter<"farms"> | string
    ref_1?: StringFilter<"farms"> | string
    cattles?: CattlesListRelationFilter
    farm_attachments?: Farm_attachmentsListRelationFilter
    farm_authorized?: Farm_authorizedListRelationFilter
    farm_veterinary?: Farm_veterinaryListRelationFilter
    pens?: PensListRelationFilter
  }, "id">

  export type farmsOrderByWithAggregationInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    status?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrderInput | SortOrder
    owner_type?: SortOrderInput | SortOrder
    owner_tin?: SortOrderInput | SortOrder
    owner_masking_tin?: SortOrderInput | SortOrder
    owner_title?: SortOrderInput | SortOrder
    owner_first_name?: SortOrderInput | SortOrder
    owner_middle_name?: SortOrderInput | SortOrder
    owner_last_name?: SortOrderInput | SortOrder
    owner_company_name?: SortOrderInput | SortOrder
    owner_gender?: SortOrderInput | SortOrder
    owner_birthdate?: SortOrderInput | SortOrder
    owner_education_degree?: SortOrderInput | SortOrder
    owner_occupation?: SortOrderInput | SortOrder
    owner_second_occupation?: SortOrderInput | SortOrder
    owner_phone_number?: SortOrderInput | SortOrder
    owner_mobile_number?: SortOrderInput | SortOrder
    owner_email?: SortOrderInput | SortOrder
    owner_line_id?: SortOrderInput | SortOrder
    owner_address_line1?: SortOrderInput | SortOrder
    owner_address_subdistrict?: SortOrderInput | SortOrder
    owner_address_district?: SortOrderInput | SortOrder
    owner_address_province?: SortOrderInput | SortOrder
    owner_address_zipcode?: SortOrderInput | SortOrder
    owner_contact_address_line1?: SortOrderInput | SortOrder
    owner_contact_address_subdistrict?: SortOrderInput | SortOrder
    owner_contact_address_district?: SortOrderInput | SortOrder
    owner_contact_address_province?: SortOrderInput | SortOrder
    owner_contact_address_zipcode?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    ref_1?: SortOrder
    _count?: farmsCountOrderByAggregateInput
    _avg?: farmsAvgOrderByAggregateInput
    _max?: farmsMaxOrderByAggregateInput
    _min?: farmsMinOrderByAggregateInput
    _sum?: farmsSumOrderByAggregateInput
  }

  export type farmsScalarWhereWithAggregatesInput = {
    AND?: farmsScalarWhereWithAggregatesInput | farmsScalarWhereWithAggregatesInput[]
    OR?: farmsScalarWhereWithAggregatesInput[]
    NOT?: farmsScalarWhereWithAggregatesInput | farmsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"farms"> | string
    tracer_id?: StringWithAggregatesFilter<"farms"> | string
    farm_identification?: StringWithAggregatesFilter<"farms"> | string
    farm_type?: StringWithAggregatesFilter<"farms"> | string
    max_cows?: IntWithAggregatesFilter<"farms"> | number
    name?: StringWithAggregatesFilter<"farms"> | string
    standard?: StringWithAggregatesFilter<"farms"> | string
    status?: StringWithAggregatesFilter<"farms"> | string
    rai?: DecimalWithAggregatesFilter<"farms"> | Decimal | DecimalJsLike | number | string
    ngan?: DecimalWithAggregatesFilter<"farms"> | Decimal | DecimalJsLike | number | string
    wa?: DecimalWithAggregatesFilter<"farms"> | Decimal | DecimalJsLike | number | string
    address_line1?: StringWithAggregatesFilter<"farms"> | string
    address_subdistrict?: StringWithAggregatesFilter<"farms"> | string
    address_district?: StringWithAggregatesFilter<"farms"> | string
    address_province?: StringWithAggregatesFilter<"farms"> | string
    address_zipcode?: StringWithAggregatesFilter<"farms"> | string
    is_owner_ref_farmer?: BoolWithAggregatesFilter<"farms"> | boolean
    farmer_id?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_type?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_tin?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_masking_tin?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_title?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_first_name?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_middle_name?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_last_name?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_company_name?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_gender?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_birthdate?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_education_degree?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_occupation?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_second_occupation?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_phone_number?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_mobile_number?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_email?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_line_id?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_address_line1?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_address_subdistrict?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_address_district?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_address_province?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_address_zipcode?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_contact_address_line1?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_contact_address_subdistrict?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_contact_address_district?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_contact_address_province?: StringNullableWithAggregatesFilter<"farms"> | string | null
    owner_contact_address_zipcode?: StringNullableWithAggregatesFilter<"farms"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"farms"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"farms"> | string
    created_by?: StringWithAggregatesFilter<"farms"> | string
    updated_at?: DateTimeWithAggregatesFilter<"farms"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"farms"> | string
    updated_by?: StringWithAggregatesFilter<"farms"> | string
    ref_1?: StringWithAggregatesFilter<"farms"> | string
  }

  export type order_attachmentsWhereInput = {
    AND?: order_attachmentsWhereInput | order_attachmentsWhereInput[]
    OR?: order_attachmentsWhereInput[]
    NOT?: order_attachmentsWhereInput | order_attachmentsWhereInput[]
    id?: StringFilter<"order_attachments"> | string
    order_id?: StringFilter<"order_attachments"> | string
    file_name?: StringFilter<"order_attachments"> | string
    file_path?: StringFilter<"order_attachments"> | string
    is_public?: BoolFilter<"order_attachments"> | boolean
    content_type?: StringFilter<"order_attachments"> | string
    description?: StringNullableFilter<"order_attachments"> | string | null
    created_at?: DateTimeFilter<"order_attachments"> | Date | string
    created_by_id?: StringFilter<"order_attachments"> | string
    created_by?: StringFilter<"order_attachments"> | string
    updated_at?: DateTimeFilter<"order_attachments"> | Date | string
    updated_by_id?: StringFilter<"order_attachments"> | string
    updated_by?: StringFilter<"order_attachments"> | string
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
  }

  export type order_attachmentsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    orders?: ordersOrderByWithRelationInput
  }

  export type order_attachmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: order_attachmentsWhereInput | order_attachmentsWhereInput[]
    OR?: order_attachmentsWhereInput[]
    NOT?: order_attachmentsWhereInput | order_attachmentsWhereInput[]
    order_id?: StringFilter<"order_attachments"> | string
    file_name?: StringFilter<"order_attachments"> | string
    file_path?: StringFilter<"order_attachments"> | string
    is_public?: BoolFilter<"order_attachments"> | boolean
    content_type?: StringFilter<"order_attachments"> | string
    description?: StringNullableFilter<"order_attachments"> | string | null
    created_at?: DateTimeFilter<"order_attachments"> | Date | string
    created_by_id?: StringFilter<"order_attachments"> | string
    created_by?: StringFilter<"order_attachments"> | string
    updated_at?: DateTimeFilter<"order_attachments"> | Date | string
    updated_by_id?: StringFilter<"order_attachments"> | string
    updated_by?: StringFilter<"order_attachments"> | string
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
  }, "id">

  export type order_attachmentsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: order_attachmentsCountOrderByAggregateInput
    _max?: order_attachmentsMaxOrderByAggregateInput
    _min?: order_attachmentsMinOrderByAggregateInput
  }

  export type order_attachmentsScalarWhereWithAggregatesInput = {
    AND?: order_attachmentsScalarWhereWithAggregatesInput | order_attachmentsScalarWhereWithAggregatesInput[]
    OR?: order_attachmentsScalarWhereWithAggregatesInput[]
    NOT?: order_attachmentsScalarWhereWithAggregatesInput | order_attachmentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"order_attachments"> | string
    order_id?: StringWithAggregatesFilter<"order_attachments"> | string
    file_name?: StringWithAggregatesFilter<"order_attachments"> | string
    file_path?: StringWithAggregatesFilter<"order_attachments"> | string
    is_public?: BoolWithAggregatesFilter<"order_attachments"> | boolean
    content_type?: StringWithAggregatesFilter<"order_attachments"> | string
    description?: StringNullableWithAggregatesFilter<"order_attachments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"order_attachments"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"order_attachments"> | string
    created_by?: StringWithAggregatesFilter<"order_attachments"> | string
    updated_at?: DateTimeWithAggregatesFilter<"order_attachments"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"order_attachments"> | string
    updated_by?: StringWithAggregatesFilter<"order_attachments"> | string
  }

  export type order_requestsWhereInput = {
    AND?: order_requestsWhereInput | order_requestsWhereInput[]
    OR?: order_requestsWhereInput[]
    NOT?: order_requestsWhereInput | order_requestsWhereInput[]
    id?: StringFilter<"order_requests"> | string
    order_id?: StringFilter<"order_requests"> | string
    cattle_breed_id?: StringFilter<"order_requests"> | string
    cattle_type_ids?: StringNullableListFilter<"order_requests">
    request_amount?: IntFilter<"order_requests"> | number
    received_amount?: IntNullableFilter<"order_requests"> | number | null
    from_age?: IntFilter<"order_requests"> | number
    to_age?: IntFilter<"order_requests"> | number
    from_weight?: DecimalFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    castration_status?: StringFilter<"order_requests"> | string
    status?: StringFilter<"order_requests"> | string
    created_at?: DateTimeFilter<"order_requests"> | Date | string
    created_by_id?: StringFilter<"order_requests"> | string
    created_by?: StringFilter<"order_requests"> | string
    updated_at?: DateTimeFilter<"order_requests"> | Date | string
    updated_by_id?: StringFilter<"order_requests"> | string
    updated_by?: StringFilter<"order_requests"> | string
    gender?: StringNullableFilter<"order_requests"> | string | null
    pregnant_status?: StringNullableFilter<"order_requests"> | string | null
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
  }

  export type order_requestsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    cattle_breed_id?: SortOrder
    cattle_type_ids?: SortOrder
    request_amount?: SortOrder
    received_amount?: SortOrderInput | SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
    castration_status?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    gender?: SortOrderInput | SortOrder
    pregnant_status?: SortOrderInput | SortOrder
    orders?: ordersOrderByWithRelationInput
  }

  export type order_requestsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: order_requestsWhereInput | order_requestsWhereInput[]
    OR?: order_requestsWhereInput[]
    NOT?: order_requestsWhereInput | order_requestsWhereInput[]
    order_id?: StringFilter<"order_requests"> | string
    cattle_breed_id?: StringFilter<"order_requests"> | string
    cattle_type_ids?: StringNullableListFilter<"order_requests">
    request_amount?: IntFilter<"order_requests"> | number
    received_amount?: IntNullableFilter<"order_requests"> | number | null
    from_age?: IntFilter<"order_requests"> | number
    to_age?: IntFilter<"order_requests"> | number
    from_weight?: DecimalFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    castration_status?: StringFilter<"order_requests"> | string
    status?: StringFilter<"order_requests"> | string
    created_at?: DateTimeFilter<"order_requests"> | Date | string
    created_by_id?: StringFilter<"order_requests"> | string
    created_by?: StringFilter<"order_requests"> | string
    updated_at?: DateTimeFilter<"order_requests"> | Date | string
    updated_by_id?: StringFilter<"order_requests"> | string
    updated_by?: StringFilter<"order_requests"> | string
    gender?: StringNullableFilter<"order_requests"> | string | null
    pregnant_status?: StringNullableFilter<"order_requests"> | string | null
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
  }, "id">

  export type order_requestsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    cattle_breed_id?: SortOrder
    cattle_type_ids?: SortOrder
    request_amount?: SortOrder
    received_amount?: SortOrderInput | SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
    castration_status?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    gender?: SortOrderInput | SortOrder
    pregnant_status?: SortOrderInput | SortOrder
    _count?: order_requestsCountOrderByAggregateInput
    _avg?: order_requestsAvgOrderByAggregateInput
    _max?: order_requestsMaxOrderByAggregateInput
    _min?: order_requestsMinOrderByAggregateInput
    _sum?: order_requestsSumOrderByAggregateInput
  }

  export type order_requestsScalarWhereWithAggregatesInput = {
    AND?: order_requestsScalarWhereWithAggregatesInput | order_requestsScalarWhereWithAggregatesInput[]
    OR?: order_requestsScalarWhereWithAggregatesInput[]
    NOT?: order_requestsScalarWhereWithAggregatesInput | order_requestsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"order_requests"> | string
    order_id?: StringWithAggregatesFilter<"order_requests"> | string
    cattle_breed_id?: StringWithAggregatesFilter<"order_requests"> | string
    cattle_type_ids?: StringNullableListFilter<"order_requests">
    request_amount?: IntWithAggregatesFilter<"order_requests"> | number
    received_amount?: IntNullableWithAggregatesFilter<"order_requests"> | number | null
    from_age?: IntWithAggregatesFilter<"order_requests"> | number
    to_age?: IntWithAggregatesFilter<"order_requests"> | number
    from_weight?: DecimalWithAggregatesFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalWithAggregatesFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    castration_status?: StringWithAggregatesFilter<"order_requests"> | string
    status?: StringWithAggregatesFilter<"order_requests"> | string
    created_at?: DateTimeWithAggregatesFilter<"order_requests"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"order_requests"> | string
    created_by?: StringWithAggregatesFilter<"order_requests"> | string
    updated_at?: DateTimeWithAggregatesFilter<"order_requests"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"order_requests"> | string
    updated_by?: StringWithAggregatesFilter<"order_requests"> | string
    gender?: StringNullableWithAggregatesFilter<"order_requests"> | string | null
    pregnant_status?: StringNullableWithAggregatesFilter<"order_requests"> | string | null
  }

  export type ordersWhereInput = {
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    id?: StringFilter<"orders"> | string
    buyer_id?: StringFilter<"orders"> | string
    buyer_code?: StringFilter<"orders"> | string
    buyer_company_name?: StringFilter<"orders"> | string
    buyer_register_date?: DateTimeFilter<"orders"> | Date | string
    order_code?: StringFilter<"orders"> | string
    remark?: StringNullableFilter<"orders"> | string | null
    delivery_from_date?: DateTimeFilter<"orders"> | Date | string
    delivery_to_date?: DateTimeFilter<"orders"> | Date | string
    delivery_type?: StringFilter<"orders"> | string
    origin_address?: StringFilter<"orders"> | string
    destination_address?: StringFilter<"orders"> | string
    destination_country?: StringFilter<"orders"> | string
    destination_country_code?: StringFilter<"orders"> | string
    total_price?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFilter<"orders"> | number
    status?: StringFilter<"orders"> | string
    created_at?: DateTimeFilter<"orders"> | Date | string
    created_by_id?: StringFilter<"orders"> | string
    created_by?: StringFilter<"orders"> | string
    updated_at?: DateTimeFilter<"orders"> | Date | string
    updated_by_id?: StringFilter<"orders"> | string
    updated_by?: StringFilter<"orders"> | string
    order_attachments?: Order_attachmentsListRelationFilter
    order_requests?: Order_requestsListRelationFilter
  }

  export type ordersOrderByWithRelationInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    buyer_code?: SortOrder
    buyer_company_name?: SortOrder
    buyer_register_date?: SortOrder
    order_code?: SortOrder
    remark?: SortOrderInput | SortOrder
    delivery_from_date?: SortOrder
    delivery_to_date?: SortOrder
    delivery_type?: SortOrder
    origin_address?: SortOrder
    destination_address?: SortOrder
    destination_country?: SortOrder
    destination_country_code?: SortOrder
    total_price?: SortOrder
    quarantine_day?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    order_attachments?: order_attachmentsOrderByRelationAggregateInput
    order_requests?: order_requestsOrderByRelationAggregateInput
  }

  export type ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    buyer_id?: StringFilter<"orders"> | string
    buyer_code?: StringFilter<"orders"> | string
    buyer_company_name?: StringFilter<"orders"> | string
    buyer_register_date?: DateTimeFilter<"orders"> | Date | string
    order_code?: StringFilter<"orders"> | string
    remark?: StringNullableFilter<"orders"> | string | null
    delivery_from_date?: DateTimeFilter<"orders"> | Date | string
    delivery_to_date?: DateTimeFilter<"orders"> | Date | string
    delivery_type?: StringFilter<"orders"> | string
    origin_address?: StringFilter<"orders"> | string
    destination_address?: StringFilter<"orders"> | string
    destination_country?: StringFilter<"orders"> | string
    destination_country_code?: StringFilter<"orders"> | string
    total_price?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFilter<"orders"> | number
    status?: StringFilter<"orders"> | string
    created_at?: DateTimeFilter<"orders"> | Date | string
    created_by_id?: StringFilter<"orders"> | string
    created_by?: StringFilter<"orders"> | string
    updated_at?: DateTimeFilter<"orders"> | Date | string
    updated_by_id?: StringFilter<"orders"> | string
    updated_by?: StringFilter<"orders"> | string
    order_attachments?: Order_attachmentsListRelationFilter
    order_requests?: Order_requestsListRelationFilter
  }, "id">

  export type ordersOrderByWithAggregationInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    buyer_code?: SortOrder
    buyer_company_name?: SortOrder
    buyer_register_date?: SortOrder
    order_code?: SortOrder
    remark?: SortOrderInput | SortOrder
    delivery_from_date?: SortOrder
    delivery_to_date?: SortOrder
    delivery_type?: SortOrder
    origin_address?: SortOrder
    destination_address?: SortOrder
    destination_country?: SortOrder
    destination_country_code?: SortOrder
    total_price?: SortOrder
    quarantine_day?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: ordersCountOrderByAggregateInput
    _avg?: ordersAvgOrderByAggregateInput
    _max?: ordersMaxOrderByAggregateInput
    _min?: ordersMinOrderByAggregateInput
    _sum?: ordersSumOrderByAggregateInput
  }

  export type ordersScalarWhereWithAggregatesInput = {
    AND?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    OR?: ordersScalarWhereWithAggregatesInput[]
    NOT?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"orders"> | string
    buyer_id?: StringWithAggregatesFilter<"orders"> | string
    buyer_code?: StringWithAggregatesFilter<"orders"> | string
    buyer_company_name?: StringWithAggregatesFilter<"orders"> | string
    buyer_register_date?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    order_code?: StringWithAggregatesFilter<"orders"> | string
    remark?: StringNullableWithAggregatesFilter<"orders"> | string | null
    delivery_from_date?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    delivery_to_date?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    delivery_type?: StringWithAggregatesFilter<"orders"> | string
    origin_address?: StringWithAggregatesFilter<"orders"> | string
    destination_address?: StringWithAggregatesFilter<"orders"> | string
    destination_country?: StringWithAggregatesFilter<"orders"> | string
    destination_country_code?: StringWithAggregatesFilter<"orders"> | string
    total_price?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntWithAggregatesFilter<"orders"> | number
    status?: StringWithAggregatesFilter<"orders"> | string
    created_at?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"orders"> | string
    created_by?: StringWithAggregatesFilter<"orders"> | string
    updated_at?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"orders"> | string
    updated_by?: StringWithAggregatesFilter<"orders"> | string
  }

  export type pen_attachmentsWhereInput = {
    AND?: pen_attachmentsWhereInput | pen_attachmentsWhereInput[]
    OR?: pen_attachmentsWhereInput[]
    NOT?: pen_attachmentsWhereInput | pen_attachmentsWhereInput[]
    id?: StringFilter<"pen_attachments"> | string
    pen_id?: StringFilter<"pen_attachments"> | string
    file_name?: StringFilter<"pen_attachments"> | string
    file_path?: StringFilter<"pen_attachments"> | string
    is_public?: BoolFilter<"pen_attachments"> | boolean
    content_type?: StringFilter<"pen_attachments"> | string
    description?: StringNullableFilter<"pen_attachments"> | string | null
    created_at?: DateTimeFilter<"pen_attachments"> | Date | string
    created_by_id?: StringFilter<"pen_attachments"> | string
    created_by?: StringFilter<"pen_attachments"> | string
    updated_at?: DateTimeFilter<"pen_attachments"> | Date | string
    updated_by_id?: StringFilter<"pen_attachments"> | string
    updated_by?: StringFilter<"pen_attachments"> | string
    pens?: XOR<PensScalarRelationFilter, pensWhereInput>
  }

  export type pen_attachmentsOrderByWithRelationInput = {
    id?: SortOrder
    pen_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    pens?: pensOrderByWithRelationInput
  }

  export type pen_attachmentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: pen_attachmentsWhereInput | pen_attachmentsWhereInput[]
    OR?: pen_attachmentsWhereInput[]
    NOT?: pen_attachmentsWhereInput | pen_attachmentsWhereInput[]
    pen_id?: StringFilter<"pen_attachments"> | string
    file_name?: StringFilter<"pen_attachments"> | string
    file_path?: StringFilter<"pen_attachments"> | string
    is_public?: BoolFilter<"pen_attachments"> | boolean
    content_type?: StringFilter<"pen_attachments"> | string
    description?: StringNullableFilter<"pen_attachments"> | string | null
    created_at?: DateTimeFilter<"pen_attachments"> | Date | string
    created_by_id?: StringFilter<"pen_attachments"> | string
    created_by?: StringFilter<"pen_attachments"> | string
    updated_at?: DateTimeFilter<"pen_attachments"> | Date | string
    updated_by_id?: StringFilter<"pen_attachments"> | string
    updated_by?: StringFilter<"pen_attachments"> | string
    pens?: XOR<PensScalarRelationFilter, pensWhereInput>
  }, "id">

  export type pen_attachmentsOrderByWithAggregationInput = {
    id?: SortOrder
    pen_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: pen_attachmentsCountOrderByAggregateInput
    _max?: pen_attachmentsMaxOrderByAggregateInput
    _min?: pen_attachmentsMinOrderByAggregateInput
  }

  export type pen_attachmentsScalarWhereWithAggregatesInput = {
    AND?: pen_attachmentsScalarWhereWithAggregatesInput | pen_attachmentsScalarWhereWithAggregatesInput[]
    OR?: pen_attachmentsScalarWhereWithAggregatesInput[]
    NOT?: pen_attachmentsScalarWhereWithAggregatesInput | pen_attachmentsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"pen_attachments"> | string
    pen_id?: StringWithAggregatesFilter<"pen_attachments"> | string
    file_name?: StringWithAggregatesFilter<"pen_attachments"> | string
    file_path?: StringWithAggregatesFilter<"pen_attachments"> | string
    is_public?: BoolWithAggregatesFilter<"pen_attachments"> | boolean
    content_type?: StringWithAggregatesFilter<"pen_attachments"> | string
    description?: StringNullableWithAggregatesFilter<"pen_attachments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"pen_attachments"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"pen_attachments"> | string
    created_by?: StringWithAggregatesFilter<"pen_attachments"> | string
    updated_at?: DateTimeWithAggregatesFilter<"pen_attachments"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"pen_attachments"> | string
    updated_by?: StringWithAggregatesFilter<"pen_attachments"> | string
  }

  export type pensWhereInput = {
    AND?: pensWhereInput | pensWhereInput[]
    OR?: pensWhereInput[]
    NOT?: pensWhereInput | pensWhereInput[]
    id?: StringFilter<"pens"> | string
    farm_id?: StringFilter<"pens"> | string
    pen_type?: StringFilter<"pens"> | string
    pen_number?: StringFilter<"pens"> | string
    capacity?: IntFilter<"pens"> | number
    name?: StringFilter<"pens"> | string
    wa?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"pens"> | string
    created_at?: DateTimeFilter<"pens"> | Date | string
    created_by_id?: StringFilter<"pens"> | string
    created_by?: StringFilter<"pens"> | string
    updated_at?: DateTimeFilter<"pens"> | Date | string
    updated_by_id?: StringFilter<"pens"> | string
    updated_by?: StringFilter<"pens"> | string
    cattles?: CattlesListRelationFilter
    pen_attachments?: Pen_attachmentsListRelationFilter
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }

  export type pensOrderByWithRelationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    pen_type?: SortOrder
    pen_number?: SortOrder
    capacity?: SortOrder
    name?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    cattles?: cattlesOrderByRelationAggregateInput
    pen_attachments?: pen_attachmentsOrderByRelationAggregateInput
    farms?: farmsOrderByWithRelationInput
  }

  export type pensWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: pensWhereInput | pensWhereInput[]
    OR?: pensWhereInput[]
    NOT?: pensWhereInput | pensWhereInput[]
    farm_id?: StringFilter<"pens"> | string
    pen_type?: StringFilter<"pens"> | string
    pen_number?: StringFilter<"pens"> | string
    capacity?: IntFilter<"pens"> | number
    name?: StringFilter<"pens"> | string
    wa?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"pens"> | string
    created_at?: DateTimeFilter<"pens"> | Date | string
    created_by_id?: StringFilter<"pens"> | string
    created_by?: StringFilter<"pens"> | string
    updated_at?: DateTimeFilter<"pens"> | Date | string
    updated_by_id?: StringFilter<"pens"> | string
    updated_by?: StringFilter<"pens"> | string
    cattles?: CattlesListRelationFilter
    pen_attachments?: Pen_attachmentsListRelationFilter
    farms?: XOR<FarmsScalarRelationFilter, farmsWhereInput>
  }, "id">

  export type pensOrderByWithAggregationInput = {
    id?: SortOrder
    farm_id?: SortOrder
    pen_type?: SortOrder
    pen_number?: SortOrder
    capacity?: SortOrder
    name?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: pensCountOrderByAggregateInput
    _avg?: pensAvgOrderByAggregateInput
    _max?: pensMaxOrderByAggregateInput
    _min?: pensMinOrderByAggregateInput
    _sum?: pensSumOrderByAggregateInput
  }

  export type pensScalarWhereWithAggregatesInput = {
    AND?: pensScalarWhereWithAggregatesInput | pensScalarWhereWithAggregatesInput[]
    OR?: pensScalarWhereWithAggregatesInput[]
    NOT?: pensScalarWhereWithAggregatesInput | pensScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"pens"> | string
    farm_id?: StringWithAggregatesFilter<"pens"> | string
    pen_type?: StringWithAggregatesFilter<"pens"> | string
    pen_number?: StringWithAggregatesFilter<"pens"> | string
    capacity?: IntWithAggregatesFilter<"pens"> | number
    name?: StringWithAggregatesFilter<"pens"> | string
    wa?: DecimalWithAggregatesFilter<"pens"> | Decimal | DecimalJsLike | number | string
    latitude?: DecimalWithAggregatesFilter<"pens"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalWithAggregatesFilter<"pens"> | Decimal | DecimalJsLike | number | string
    status?: StringWithAggregatesFilter<"pens"> | string
    created_at?: DateTimeWithAggregatesFilter<"pens"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"pens"> | string
    created_by?: StringWithAggregatesFilter<"pens"> | string
    updated_at?: DateTimeWithAggregatesFilter<"pens"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"pens"> | string
    updated_by?: StringWithAggregatesFilter<"pens"> | string
  }

  export type schema_migrationsWhereInput = {
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    version?: BigIntFilter<"schema_migrations"> | bigint | number
    dirty?: BoolFilter<"schema_migrations"> | boolean
  }

  export type schema_migrationsOrderByWithRelationInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type schema_migrationsWhereUniqueInput = Prisma.AtLeast<{
    version?: bigint | number
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    dirty?: BoolFilter<"schema_migrations"> | boolean
  }, "version">

  export type schema_migrationsOrderByWithAggregationInput = {
    version?: SortOrder
    dirty?: SortOrder
    _count?: schema_migrationsCountOrderByAggregateInput
    _avg?: schema_migrationsAvgOrderByAggregateInput
    _max?: schema_migrationsMaxOrderByAggregateInput
    _min?: schema_migrationsMinOrderByAggregateInput
    _sum?: schema_migrationsSumOrderByAggregateInput
  }

  export type schema_migrationsScalarWhereWithAggregatesInput = {
    AND?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    OR?: schema_migrationsScalarWhereWithAggregatesInput[]
    NOT?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    version?: BigIntWithAggregatesFilter<"schema_migrations"> | bigint | number
    dirty?: BoolWithAggregatesFilter<"schema_migrations"> | boolean
  }

  export type traceabilityWhereInput = {
    AND?: traceabilityWhereInput | traceabilityWhereInput[]
    OR?: traceabilityWhereInput[]
    NOT?: traceabilityWhereInput | traceabilityWhereInput[]
    id?: StringFilter<"traceability"> | string
    reason?: StringFilter<"traceability"> | string
    document_no?: StringFilter<"traceability"> | string
    total_animal?: IntFilter<"traceability"> | number
    origin_farm_id?: StringFilter<"traceability"> | string
    origin_pen_id?: StringFilter<"traceability"> | string
    destination_farm_id?: StringNullableFilter<"traceability"> | string | null
    destination_pen_id?: StringNullableFilter<"traceability"> | string | null
    specific_destination_name?: StringNullableFilter<"traceability"> | string | null
    destination_province?: StringNullableFilter<"traceability"> | string | null
    shipment_date?: DateTimeFilter<"traceability"> | Date | string
    estimated_arrival_date?: DateTimeFilter<"traceability"> | Date | string
    destination_type?: StringFilter<"traceability"> | string
    status?: StringFilter<"traceability"> | string
    created_at?: DateTimeFilter<"traceability"> | Date | string
    created_by_id?: StringFilter<"traceability"> | string
    created_by?: StringFilter<"traceability"> | string
    updated_at?: DateTimeFilter<"traceability"> | Date | string
    updated_by_id?: StringFilter<"traceability"> | string
    updated_by?: StringFilter<"traceability"> | string
    traceability_cattle?: Traceability_cattleListRelationFilter
    traceability_status?: Traceability_statusListRelationFilter
    traceability_vehicle?: Traceability_vehicleListRelationFilter
  }

  export type traceabilityOrderByWithRelationInput = {
    id?: SortOrder
    reason?: SortOrder
    document_no?: SortOrder
    total_animal?: SortOrder
    origin_farm_id?: SortOrder
    origin_pen_id?: SortOrder
    destination_farm_id?: SortOrderInput | SortOrder
    destination_pen_id?: SortOrderInput | SortOrder
    specific_destination_name?: SortOrderInput | SortOrder
    destination_province?: SortOrderInput | SortOrder
    shipment_date?: SortOrder
    estimated_arrival_date?: SortOrder
    destination_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    traceability_cattle?: traceability_cattleOrderByRelationAggregateInput
    traceability_status?: traceability_statusOrderByRelationAggregateInput
    traceability_vehicle?: traceability_vehicleOrderByRelationAggregateInput
  }

  export type traceabilityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: traceabilityWhereInput | traceabilityWhereInput[]
    OR?: traceabilityWhereInput[]
    NOT?: traceabilityWhereInput | traceabilityWhereInput[]
    reason?: StringFilter<"traceability"> | string
    document_no?: StringFilter<"traceability"> | string
    total_animal?: IntFilter<"traceability"> | number
    origin_farm_id?: StringFilter<"traceability"> | string
    origin_pen_id?: StringFilter<"traceability"> | string
    destination_farm_id?: StringNullableFilter<"traceability"> | string | null
    destination_pen_id?: StringNullableFilter<"traceability"> | string | null
    specific_destination_name?: StringNullableFilter<"traceability"> | string | null
    destination_province?: StringNullableFilter<"traceability"> | string | null
    shipment_date?: DateTimeFilter<"traceability"> | Date | string
    estimated_arrival_date?: DateTimeFilter<"traceability"> | Date | string
    destination_type?: StringFilter<"traceability"> | string
    status?: StringFilter<"traceability"> | string
    created_at?: DateTimeFilter<"traceability"> | Date | string
    created_by_id?: StringFilter<"traceability"> | string
    created_by?: StringFilter<"traceability"> | string
    updated_at?: DateTimeFilter<"traceability"> | Date | string
    updated_by_id?: StringFilter<"traceability"> | string
    updated_by?: StringFilter<"traceability"> | string
    traceability_cattle?: Traceability_cattleListRelationFilter
    traceability_status?: Traceability_statusListRelationFilter
    traceability_vehicle?: Traceability_vehicleListRelationFilter
  }, "id">

  export type traceabilityOrderByWithAggregationInput = {
    id?: SortOrder
    reason?: SortOrder
    document_no?: SortOrder
    total_animal?: SortOrder
    origin_farm_id?: SortOrder
    origin_pen_id?: SortOrder
    destination_farm_id?: SortOrderInput | SortOrder
    destination_pen_id?: SortOrderInput | SortOrder
    specific_destination_name?: SortOrderInput | SortOrder
    destination_province?: SortOrderInput | SortOrder
    shipment_date?: SortOrder
    estimated_arrival_date?: SortOrder
    destination_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: traceabilityCountOrderByAggregateInput
    _avg?: traceabilityAvgOrderByAggregateInput
    _max?: traceabilityMaxOrderByAggregateInput
    _min?: traceabilityMinOrderByAggregateInput
    _sum?: traceabilitySumOrderByAggregateInput
  }

  export type traceabilityScalarWhereWithAggregatesInput = {
    AND?: traceabilityScalarWhereWithAggregatesInput | traceabilityScalarWhereWithAggregatesInput[]
    OR?: traceabilityScalarWhereWithAggregatesInput[]
    NOT?: traceabilityScalarWhereWithAggregatesInput | traceabilityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"traceability"> | string
    reason?: StringWithAggregatesFilter<"traceability"> | string
    document_no?: StringWithAggregatesFilter<"traceability"> | string
    total_animal?: IntWithAggregatesFilter<"traceability"> | number
    origin_farm_id?: StringWithAggregatesFilter<"traceability"> | string
    origin_pen_id?: StringWithAggregatesFilter<"traceability"> | string
    destination_farm_id?: StringNullableWithAggregatesFilter<"traceability"> | string | null
    destination_pen_id?: StringNullableWithAggregatesFilter<"traceability"> | string | null
    specific_destination_name?: StringNullableWithAggregatesFilter<"traceability"> | string | null
    destination_province?: StringNullableWithAggregatesFilter<"traceability"> | string | null
    shipment_date?: DateTimeWithAggregatesFilter<"traceability"> | Date | string
    estimated_arrival_date?: DateTimeWithAggregatesFilter<"traceability"> | Date | string
    destination_type?: StringWithAggregatesFilter<"traceability"> | string
    status?: StringWithAggregatesFilter<"traceability"> | string
    created_at?: DateTimeWithAggregatesFilter<"traceability"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"traceability"> | string
    created_by?: StringWithAggregatesFilter<"traceability"> | string
    updated_at?: DateTimeWithAggregatesFilter<"traceability"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"traceability"> | string
    updated_by?: StringWithAggregatesFilter<"traceability"> | string
  }

  export type traceability_cattleWhereInput = {
    AND?: traceability_cattleWhereInput | traceability_cattleWhereInput[]
    OR?: traceability_cattleWhereInput[]
    NOT?: traceability_cattleWhereInput | traceability_cattleWhereInput[]
    id?: StringFilter<"traceability_cattle"> | string
    traceability_id?: StringFilter<"traceability_cattle"> | string
    vehicle_id?: StringFilter<"traceability_cattle"> | string
    cattle_id?: StringFilter<"traceability_cattle"> | string
    created_at?: DateTimeFilter<"traceability_cattle"> | Date | string
    created_by_id?: StringFilter<"traceability_cattle"> | string
    created_by?: StringFilter<"traceability_cattle"> | string
    updated_at?: DateTimeFilter<"traceability_cattle"> | Date | string
    updated_by_id?: StringFilter<"traceability_cattle"> | string
    updated_by?: StringFilter<"traceability_cattle"> | string
    traceability?: XOR<TraceabilityScalarRelationFilter, traceabilityWhereInput>
    traceability_vehicle?: XOR<Traceability_vehicleScalarRelationFilter, traceability_vehicleWhereInput>
  }

  export type traceability_cattleOrderByWithRelationInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    traceability?: traceabilityOrderByWithRelationInput
    traceability_vehicle?: traceability_vehicleOrderByWithRelationInput
  }

  export type traceability_cattleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: traceability_cattleWhereInput | traceability_cattleWhereInput[]
    OR?: traceability_cattleWhereInput[]
    NOT?: traceability_cattleWhereInput | traceability_cattleWhereInput[]
    traceability_id?: StringFilter<"traceability_cattle"> | string
    vehicle_id?: StringFilter<"traceability_cattle"> | string
    cattle_id?: StringFilter<"traceability_cattle"> | string
    created_at?: DateTimeFilter<"traceability_cattle"> | Date | string
    created_by_id?: StringFilter<"traceability_cattle"> | string
    created_by?: StringFilter<"traceability_cattle"> | string
    updated_at?: DateTimeFilter<"traceability_cattle"> | Date | string
    updated_by_id?: StringFilter<"traceability_cattle"> | string
    updated_by?: StringFilter<"traceability_cattle"> | string
    traceability?: XOR<TraceabilityScalarRelationFilter, traceabilityWhereInput>
    traceability_vehicle?: XOR<Traceability_vehicleScalarRelationFilter, traceability_vehicleWhereInput>
  }, "id">

  export type traceability_cattleOrderByWithAggregationInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: traceability_cattleCountOrderByAggregateInput
    _max?: traceability_cattleMaxOrderByAggregateInput
    _min?: traceability_cattleMinOrderByAggregateInput
  }

  export type traceability_cattleScalarWhereWithAggregatesInput = {
    AND?: traceability_cattleScalarWhereWithAggregatesInput | traceability_cattleScalarWhereWithAggregatesInput[]
    OR?: traceability_cattleScalarWhereWithAggregatesInput[]
    NOT?: traceability_cattleScalarWhereWithAggregatesInput | traceability_cattleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"traceability_cattle"> | string
    traceability_id?: StringWithAggregatesFilter<"traceability_cattle"> | string
    vehicle_id?: StringWithAggregatesFilter<"traceability_cattle"> | string
    cattle_id?: StringWithAggregatesFilter<"traceability_cattle"> | string
    created_at?: DateTimeWithAggregatesFilter<"traceability_cattle"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"traceability_cattle"> | string
    created_by?: StringWithAggregatesFilter<"traceability_cattle"> | string
    updated_at?: DateTimeWithAggregatesFilter<"traceability_cattle"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"traceability_cattle"> | string
    updated_by?: StringWithAggregatesFilter<"traceability_cattle"> | string
  }

  export type traceability_statusWhereInput = {
    AND?: traceability_statusWhereInput | traceability_statusWhereInput[]
    OR?: traceability_statusWhereInput[]
    NOT?: traceability_statusWhereInput | traceability_statusWhereInput[]
    id?: StringFilter<"traceability_status"> | string
    traceability_id?: StringFilter<"traceability_status"> | string
    status?: StringFilter<"traceability_status"> | string
    created_at?: DateTimeFilter<"traceability_status"> | Date | string
    created_by_id?: StringFilter<"traceability_status"> | string
    created_by?: StringFilter<"traceability_status"> | string
    updated_at?: DateTimeFilter<"traceability_status"> | Date | string
    updated_by_id?: StringFilter<"traceability_status"> | string
    updated_by?: StringFilter<"traceability_status"> | string
    traceability?: XOR<TraceabilityScalarRelationFilter, traceabilityWhereInput>
  }

  export type traceability_statusOrderByWithRelationInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    traceability?: traceabilityOrderByWithRelationInput
  }

  export type traceability_statusWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: traceability_statusWhereInput | traceability_statusWhereInput[]
    OR?: traceability_statusWhereInput[]
    NOT?: traceability_statusWhereInput | traceability_statusWhereInput[]
    traceability_id?: StringFilter<"traceability_status"> | string
    status?: StringFilter<"traceability_status"> | string
    created_at?: DateTimeFilter<"traceability_status"> | Date | string
    created_by_id?: StringFilter<"traceability_status"> | string
    created_by?: StringFilter<"traceability_status"> | string
    updated_at?: DateTimeFilter<"traceability_status"> | Date | string
    updated_by_id?: StringFilter<"traceability_status"> | string
    updated_by?: StringFilter<"traceability_status"> | string
    traceability?: XOR<TraceabilityScalarRelationFilter, traceabilityWhereInput>
  }, "id">

  export type traceability_statusOrderByWithAggregationInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: traceability_statusCountOrderByAggregateInput
    _max?: traceability_statusMaxOrderByAggregateInput
    _min?: traceability_statusMinOrderByAggregateInput
  }

  export type traceability_statusScalarWhereWithAggregatesInput = {
    AND?: traceability_statusScalarWhereWithAggregatesInput | traceability_statusScalarWhereWithAggregatesInput[]
    OR?: traceability_statusScalarWhereWithAggregatesInput[]
    NOT?: traceability_statusScalarWhereWithAggregatesInput | traceability_statusScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"traceability_status"> | string
    traceability_id?: StringWithAggregatesFilter<"traceability_status"> | string
    status?: StringWithAggregatesFilter<"traceability_status"> | string
    created_at?: DateTimeWithAggregatesFilter<"traceability_status"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"traceability_status"> | string
    created_by?: StringWithAggregatesFilter<"traceability_status"> | string
    updated_at?: DateTimeWithAggregatesFilter<"traceability_status"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"traceability_status"> | string
    updated_by?: StringWithAggregatesFilter<"traceability_status"> | string
  }

  export type traceability_vehicleWhereInput = {
    AND?: traceability_vehicleWhereInput | traceability_vehicleWhereInput[]
    OR?: traceability_vehicleWhereInput[]
    NOT?: traceability_vehicleWhereInput | traceability_vehicleWhereInput[]
    id?: StringFilter<"traceability_vehicle"> | string
    traceability_id?: StringFilter<"traceability_vehicle"> | string
    vehicle_type?: StringFilter<"traceability_vehicle"> | string
    vehicle_registration?: StringFilter<"traceability_vehicle"> | string
    transport_company_name?: StringFilter<"traceability_vehicle"> | string
    driver_title?: StringFilter<"traceability_vehicle"> | string
    driver_first_name?: StringFilter<"traceability_vehicle"> | string
    driver_middle_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    driver_last_name?: StringFilter<"traceability_vehicle"> | string
    contact_title?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_first_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_middle_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_last_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_phone?: StringFilter<"traceability_vehicle"> | string
    is_contract_same_driver?: BoolFilter<"traceability_vehicle"> | boolean
    created_at?: DateTimeFilter<"traceability_vehicle"> | Date | string
    created_by_id?: StringFilter<"traceability_vehicle"> | string
    created_by?: StringFilter<"traceability_vehicle"> | string
    updated_at?: DateTimeFilter<"traceability_vehicle"> | Date | string
    updated_by_id?: StringFilter<"traceability_vehicle"> | string
    updated_by?: StringFilter<"traceability_vehicle"> | string
    traceability_cattle?: Traceability_cattleListRelationFilter
    traceability?: XOR<TraceabilityScalarRelationFilter, traceabilityWhereInput>
  }

  export type traceability_vehicleOrderByWithRelationInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_type?: SortOrder
    vehicle_registration?: SortOrder
    transport_company_name?: SortOrder
    driver_title?: SortOrder
    driver_first_name?: SortOrder
    driver_middle_name?: SortOrderInput | SortOrder
    driver_last_name?: SortOrder
    contact_title?: SortOrderInput | SortOrder
    contact_first_name?: SortOrderInput | SortOrder
    contact_middle_name?: SortOrderInput | SortOrder
    contact_last_name?: SortOrderInput | SortOrder
    contact_phone?: SortOrder
    is_contract_same_driver?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    traceability_cattle?: traceability_cattleOrderByRelationAggregateInput
    traceability?: traceabilityOrderByWithRelationInput
  }

  export type traceability_vehicleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: traceability_vehicleWhereInput | traceability_vehicleWhereInput[]
    OR?: traceability_vehicleWhereInput[]
    NOT?: traceability_vehicleWhereInput | traceability_vehicleWhereInput[]
    traceability_id?: StringFilter<"traceability_vehicle"> | string
    vehicle_type?: StringFilter<"traceability_vehicle"> | string
    vehicle_registration?: StringFilter<"traceability_vehicle"> | string
    transport_company_name?: StringFilter<"traceability_vehicle"> | string
    driver_title?: StringFilter<"traceability_vehicle"> | string
    driver_first_name?: StringFilter<"traceability_vehicle"> | string
    driver_middle_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    driver_last_name?: StringFilter<"traceability_vehicle"> | string
    contact_title?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_first_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_middle_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_last_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_phone?: StringFilter<"traceability_vehicle"> | string
    is_contract_same_driver?: BoolFilter<"traceability_vehicle"> | boolean
    created_at?: DateTimeFilter<"traceability_vehicle"> | Date | string
    created_by_id?: StringFilter<"traceability_vehicle"> | string
    created_by?: StringFilter<"traceability_vehicle"> | string
    updated_at?: DateTimeFilter<"traceability_vehicle"> | Date | string
    updated_by_id?: StringFilter<"traceability_vehicle"> | string
    updated_by?: StringFilter<"traceability_vehicle"> | string
    traceability_cattle?: Traceability_cattleListRelationFilter
    traceability?: XOR<TraceabilityScalarRelationFilter, traceabilityWhereInput>
  }, "id">

  export type traceability_vehicleOrderByWithAggregationInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_type?: SortOrder
    vehicle_registration?: SortOrder
    transport_company_name?: SortOrder
    driver_title?: SortOrder
    driver_first_name?: SortOrder
    driver_middle_name?: SortOrderInput | SortOrder
    driver_last_name?: SortOrder
    contact_title?: SortOrderInput | SortOrder
    contact_first_name?: SortOrderInput | SortOrder
    contact_middle_name?: SortOrderInput | SortOrder
    contact_last_name?: SortOrderInput | SortOrder
    contact_phone?: SortOrder
    is_contract_same_driver?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    _count?: traceability_vehicleCountOrderByAggregateInput
    _max?: traceability_vehicleMaxOrderByAggregateInput
    _min?: traceability_vehicleMinOrderByAggregateInput
  }

  export type traceability_vehicleScalarWhereWithAggregatesInput = {
    AND?: traceability_vehicleScalarWhereWithAggregatesInput | traceability_vehicleScalarWhereWithAggregatesInput[]
    OR?: traceability_vehicleScalarWhereWithAggregatesInput[]
    NOT?: traceability_vehicleScalarWhereWithAggregatesInput | traceability_vehicleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    traceability_id?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    vehicle_type?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    vehicle_registration?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    transport_company_name?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    driver_title?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    driver_first_name?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    driver_middle_name?: StringNullableWithAggregatesFilter<"traceability_vehicle"> | string | null
    driver_last_name?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    contact_title?: StringNullableWithAggregatesFilter<"traceability_vehicle"> | string | null
    contact_first_name?: StringNullableWithAggregatesFilter<"traceability_vehicle"> | string | null
    contact_middle_name?: StringNullableWithAggregatesFilter<"traceability_vehicle"> | string | null
    contact_last_name?: StringNullableWithAggregatesFilter<"traceability_vehicle"> | string | null
    contact_phone?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    is_contract_same_driver?: BoolWithAggregatesFilter<"traceability_vehicle"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"traceability_vehicle"> | Date | string
    created_by_id?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    created_by?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    updated_at?: DateTimeWithAggregatesFilter<"traceability_vehicle"> | Date | string
    updated_by_id?: StringWithAggregatesFilter<"traceability_vehicle"> | string
    updated_by?: StringWithAggregatesFilter<"traceability_vehicle"> | string
  }

  export type adminsCreateInput = {
    id: string
    email?: string | null
    citizen_id: string
    masking_citizen_id: string
    password: string
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    pic_url?: string | null
    permissions?: adminsCreatepermissionsInput | string[]
    role_id?: number | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type adminsUncheckedCreateInput = {
    id: string
    email?: string | null
    citizen_id: string
    masking_citizen_id: string
    password: string
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    pic_url?: string | null
    permissions?: adminsCreatepermissionsInput | string[]
    role_id?: number | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type adminsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    citizen_id?: StringFieldUpdateOperationsInput | string
    masking_citizen_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    pic_url?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: adminsUpdatepermissionsInput | string[]
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type adminsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    citizen_id?: StringFieldUpdateOperationsInput | string
    masking_citizen_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    pic_url?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: adminsUpdatepermissionsInput | string[]
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type adminsCreateManyInput = {
    id: string
    email?: string | null
    citizen_id: string
    masking_citizen_id: string
    password: string
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    pic_url?: string | null
    permissions?: adminsCreatepermissionsInput | string[]
    role_id?: number | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type adminsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    citizen_id?: StringFieldUpdateOperationsInput | string
    masking_citizen_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    pic_url?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: adminsUpdatepermissionsInput | string[]
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type adminsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    citizen_id?: StringFieldUpdateOperationsInput | string
    masking_citizen_id?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    pic_url?: NullableStringFieldUpdateOperationsInput | string | null
    permissions?: adminsUpdatepermissionsInput | string[]
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type buyer_attachmentsCreateInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    buyers: buyersCreateNestedOneWithoutBuyer_attachmentsInput
  }

  export type buyer_attachmentsUncheckedCreateInput = {
    id: string
    buyer_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type buyer_attachmentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    buyers?: buyersUpdateOneRequiredWithoutBuyer_attachmentsNestedInput
  }

  export type buyer_attachmentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type buyer_attachmentsCreateManyInput = {
    id: string
    buyer_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type buyer_attachmentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type buyer_attachmentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type buyersCreateInput = {
    id: string
    buyer_code: string
    company_name: string
    comp_registration_id: string
    country: string
    address: string
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    phone_number: string
    email?: string | null
    whatsapp?: string | null
    wechat?: string | null
    line_id?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    country_code?: string
    buyer_attachments?: buyer_attachmentsCreateNestedManyWithoutBuyersInput
  }

  export type buyersUncheckedCreateInput = {
    id: string
    buyer_code: string
    company_name: string
    comp_registration_id: string
    country: string
    address: string
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    phone_number: string
    email?: string | null
    whatsapp?: string | null
    wechat?: string | null
    line_id?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    country_code?: string
    buyer_attachments?: buyer_attachmentsUncheckedCreateNestedManyWithoutBuyersInput
  }

  export type buyersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    comp_registration_id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    wechat?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    buyer_attachments?: buyer_attachmentsUpdateManyWithoutBuyersNestedInput
  }

  export type buyersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    comp_registration_id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    wechat?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
    buyer_attachments?: buyer_attachmentsUncheckedUpdateManyWithoutBuyersNestedInput
  }

  export type buyersCreateManyInput = {
    id: string
    buyer_code: string
    company_name: string
    comp_registration_id: string
    country: string
    address: string
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    phone_number: string
    email?: string | null
    whatsapp?: string | null
    wechat?: string | null
    line_id?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    country_code?: string
  }

  export type buyersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    comp_registration_id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    wechat?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
  }

  export type buyersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    comp_registration_id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    wechat?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_attachmentsCreateInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles: cattlesCreateNestedOneWithoutCattle_attachmentsInput
  }

  export type cattle_attachmentsUncheckedCreateInput = {
    id: string
    cattle_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_attachmentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateOneRequiredWithoutCattle_attachmentsNestedInput
  }

  export type cattle_attachmentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_attachmentsCreateManyInput = {
    id: string
    cattle_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_attachmentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_attachmentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_breedsCreateInput = {
    id: string
    name_en: string
    name_th: string
    short_name: string
    remark?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_breedsUncheckedCreateInput = {
    id: string
    name_en: string
    name_th: string
    short_name: string
    remark?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_breedsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_breedsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_breedsCreateManyInput = {
    id: string
    name_en: string
    name_th: string
    short_name: string
    remark?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_breedsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_breedsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    short_name?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_create_stagedCreateInput = {
    id: string
    staged_id: string
    order_request_id?: string | null
    farm_sourcing_id?: string | null
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattle_create_stagedCreatecattle_breed_idsInput | string[]
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    breed_sire?: cattle_create_stagedCreatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedCreatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedCreatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedCreatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedCreatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedCreatebreed_mgdInput | string[]
    country_code: string
    health_treatment_date: Date | string
    health_veterinary_name: string
    health_health_condition: string
    health_symptom?: string | null
    health_cause_of_death?: string | null
    health_treatment?: string | null
    health_drug_name?: string | null
    health_dosage?: Decimal | DecimalJsLike | number | string | null
    health_period_residue?: string | null
    vaccination_vaccination_date?: Date | string | null
    vaccination_veterinary_name?: string | null
    vaccination_vaccine_type?: string | null
    vaccination_remark?: string | null
    vaccination_vaccine_id?: string | null
    vaccination_vaccine_lot_no?: string | null
    vaccination_vaccine_expiry_date?: Date | string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_create_stagedUncheckedCreateInput = {
    id: string
    staged_id: string
    order_request_id?: string | null
    farm_sourcing_id?: string | null
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattle_create_stagedCreatecattle_breed_idsInput | string[]
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    breed_sire?: cattle_create_stagedCreatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedCreatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedCreatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedCreatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedCreatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedCreatebreed_mgdInput | string[]
    country_code: string
    health_treatment_date: Date | string
    health_veterinary_name: string
    health_health_condition: string
    health_symptom?: string | null
    health_cause_of_death?: string | null
    health_treatment?: string | null
    health_drug_name?: string | null
    health_dosage?: Decimal | DecimalJsLike | number | string | null
    health_period_residue?: string | null
    vaccination_vaccination_date?: Date | string | null
    vaccination_veterinary_name?: string | null
    vaccination_vaccine_type?: string | null
    vaccination_remark?: string | null
    vaccination_vaccine_id?: string | null
    vaccination_vaccine_lot_no?: string | null
    vaccination_vaccine_expiry_date?: Date | string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_create_stagedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_sourcing_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattle_create_stagedUpdatecattle_breed_idsInput | string[]
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    breed_sire?: cattle_create_stagedUpdatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedUpdatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedUpdatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedUpdatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedUpdatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedUpdatebreed_mgdInput | string[]
    country_code?: StringFieldUpdateOperationsInput | string
    health_treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    health_veterinary_name?: StringFieldUpdateOperationsInput | string
    health_health_condition?: StringFieldUpdateOperationsInput | string
    health_symptom?: NullableStringFieldUpdateOperationsInput | string | null
    health_cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    health_treatment?: NullableStringFieldUpdateOperationsInput | string | null
    health_drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    health_dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vaccination_veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_create_stagedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_sourcing_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattle_create_stagedUpdatecattle_breed_idsInput | string[]
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    breed_sire?: cattle_create_stagedUpdatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedUpdatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedUpdatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedUpdatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedUpdatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedUpdatebreed_mgdInput | string[]
    country_code?: StringFieldUpdateOperationsInput | string
    health_treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    health_veterinary_name?: StringFieldUpdateOperationsInput | string
    health_health_condition?: StringFieldUpdateOperationsInput | string
    health_symptom?: NullableStringFieldUpdateOperationsInput | string | null
    health_cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    health_treatment?: NullableStringFieldUpdateOperationsInput | string | null
    health_drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    health_dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vaccination_veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_create_stagedCreateManyInput = {
    id: string
    staged_id: string
    order_request_id?: string | null
    farm_sourcing_id?: string | null
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattle_create_stagedCreatecattle_breed_idsInput | string[]
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    breed_sire?: cattle_create_stagedCreatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedCreatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedCreatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedCreatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedCreatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedCreatebreed_mgdInput | string[]
    country_code: string
    health_treatment_date: Date | string
    health_veterinary_name: string
    health_health_condition: string
    health_symptom?: string | null
    health_cause_of_death?: string | null
    health_treatment?: string | null
    health_drug_name?: string | null
    health_dosage?: Decimal | DecimalJsLike | number | string | null
    health_period_residue?: string | null
    vaccination_vaccination_date?: Date | string | null
    vaccination_veterinary_name?: string | null
    vaccination_vaccine_type?: string | null
    vaccination_remark?: string | null
    vaccination_vaccine_id?: string | null
    vaccination_vaccine_lot_no?: string | null
    vaccination_vaccine_expiry_date?: Date | string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_create_stagedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_sourcing_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattle_create_stagedUpdatecattle_breed_idsInput | string[]
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    breed_sire?: cattle_create_stagedUpdatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedUpdatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedUpdatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedUpdatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedUpdatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedUpdatebreed_mgdInput | string[]
    country_code?: StringFieldUpdateOperationsInput | string
    health_treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    health_veterinary_name?: StringFieldUpdateOperationsInput | string
    health_health_condition?: StringFieldUpdateOperationsInput | string
    health_symptom?: NullableStringFieldUpdateOperationsInput | string | null
    health_cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    health_treatment?: NullableStringFieldUpdateOperationsInput | string | null
    health_drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    health_dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vaccination_veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_create_stagedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_sourcing_id?: NullableStringFieldUpdateOperationsInput | string | null
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattle_create_stagedUpdatecattle_breed_idsInput | string[]
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    breed_sire?: cattle_create_stagedUpdatebreed_sireInput | string[]
    breed_dam?: cattle_create_stagedUpdatebreed_damInput | string[]
    breed_pgs?: cattle_create_stagedUpdatebreed_pgsInput | string[]
    breed_pgd?: cattle_create_stagedUpdatebreed_pgdInput | string[]
    breed_mgs?: cattle_create_stagedUpdatebreed_mgsInput | string[]
    breed_mgd?: cattle_create_stagedUpdatebreed_mgdInput | string[]
    country_code?: StringFieldUpdateOperationsInput | string
    health_treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    health_veterinary_name?: StringFieldUpdateOperationsInput | string
    health_health_condition?: StringFieldUpdateOperationsInput | string
    health_symptom?: NullableStringFieldUpdateOperationsInput | string | null
    health_cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    health_treatment?: NullableStringFieldUpdateOperationsInput | string | null
    health_drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    health_dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    vaccination_veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccination_vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_healthsCreateInput = {
    id: string
    treatment_date: Date | string
    veterinary_name: string
    health_condition: string
    symptom?: string | null
    cause_of_death?: string | null
    treatment?: string | null
    drug_name?: string | null
    dosage?: Decimal | DecimalJsLike | number | string | null
    period_residue?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles: cattlesCreateNestedOneWithoutCattle_healthsInput
  }

  export type cattle_healthsUncheckedCreateInput = {
    id: string
    cattle_id: string
    treatment_date: Date | string
    veterinary_name: string
    health_condition: string
    symptom?: string | null
    cause_of_death?: string | null
    treatment?: string | null
    drug_name?: string | null
    dosage?: Decimal | DecimalJsLike | number | string | null
    period_residue?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_healthsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateOneRequiredWithoutCattle_healthsNestedInput
  }

  export type cattle_healthsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_healthsCreateManyInput = {
    id: string
    cattle_id: string
    treatment_date: Date | string
    veterinary_name: string
    health_condition: string
    symptom?: string | null
    cause_of_death?: string | null
    treatment?: string | null
    drug_name?: string | null
    dosage?: Decimal | DecimalJsLike | number | string | null
    period_residue?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_healthsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_healthsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_matching_order_stagedCreateInput = {
    id: string
    staged_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_ids?: cattle_matching_order_stagedCreatecattle_idsInput | string[]
    is_exists_all: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_matching_order_stagedUncheckedCreateInput = {
    id: string
    staged_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_ids?: cattle_matching_order_stagedCreatecattle_idsInput | string[]
    is_exists_all: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_matching_order_stagedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_sourcing_id?: StringFieldUpdateOperationsInput | string
    cattle_ids?: cattle_matching_order_stagedUpdatecattle_idsInput | string[]
    is_exists_all?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_matching_order_stagedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_sourcing_id?: StringFieldUpdateOperationsInput | string
    cattle_ids?: cattle_matching_order_stagedUpdatecattle_idsInput | string[]
    is_exists_all?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_matching_order_stagedCreateManyInput = {
    id: string
    staged_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_ids?: cattle_matching_order_stagedCreatecattle_idsInput | string[]
    is_exists_all: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_matching_order_stagedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_sourcing_id?: StringFieldUpdateOperationsInput | string
    cattle_ids?: cattle_matching_order_stagedUpdatecattle_idsInput | string[]
    is_exists_all?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_matching_order_stagedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_sourcing_id?: StringFieldUpdateOperationsInput | string
    cattle_ids?: cattle_matching_order_stagedUpdatecattle_idsInput | string[]
    is_exists_all?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_sourcingCreateInput = {
    id: string
    order_id: string
    order_request_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farm_sourcing: farm_sourcingCreateNestedOneWithoutCattle_sourcingInput
  }

  export type cattle_sourcingUncheckedCreateInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_sourcingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farm_sourcing?: farm_sourcingUpdateOneRequiredWithoutCattle_sourcingNestedInput
  }

  export type cattle_sourcingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_sourcing_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_sourcingCreateManyInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_sourcing_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_sourcingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_sourcingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_sourcing_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_typesCreateInput = {
    id: string
    name_en: string
    name_th: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_typesUncheckedCreateInput = {
    id: string
    name_en: string
    name_th: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_typesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_typesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_typesCreateManyInput = {
    id: string
    name_en: string
    name_th: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_typesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_typesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name_en?: StringFieldUpdateOperationsInput | string
    name_th?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_vaccinationsCreateInput = {
    id: string
    vaccination_date?: Date | string | null
    veterinary_name?: string | null
    vaccine_type?: string | null
    remark?: string | null
    vaccine_id?: string | null
    vaccine_lot_no?: string | null
    vaccine_expiry_date?: Date | string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles: cattlesCreateNestedOneWithoutCattle_vaccinationsInput
  }

  export type cattle_vaccinationsUncheckedCreateInput = {
    id: string
    cattle_id: string
    vaccination_date?: Date | string | null
    veterinary_name?: string | null
    vaccine_type?: string | null
    remark?: string | null
    vaccine_id?: string | null
    vaccine_lot_no?: string | null
    vaccine_expiry_date?: Date | string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_vaccinationsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateOneRequiredWithoutCattle_vaccinationsNestedInput
  }

  export type cattle_vaccinationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_vaccinationsCreateManyInput = {
    id: string
    cattle_id: string
    vaccination_date?: Date | string | null
    veterinary_name?: string | null
    vaccine_type?: string | null
    remark?: string | null
    vaccine_id?: string | null
    vaccine_lot_no?: string | null
    vaccine_expiry_date?: Date | string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_vaccinationsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_vaccinationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattlesCreateInput = {
    id: string
    tracer_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsCreateNestedManyWithoutCattlesInput
    farms: farmsCreateNestedOneWithoutCattlesInput
    pens: pensCreateNestedOneWithoutCattlesInput
  }

  export type cattlesUncheckedCreateInput = {
    id: string
    tracer_id: string
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedCreateNestedManyWithoutCattlesInput
  }

  export type cattlesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUpdateManyWithoutCattlesNestedInput
    farms?: farmsUpdateOneRequiredWithoutCattlesNestedInput
    pens?: pensUpdateOneRequiredWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedUpdateManyWithoutCattlesNestedInput
  }

  export type cattlesCreateManyInput = {
    id: string
    tracer_id: string
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattlesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattlesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type data_migrationsCreateInput = {
    version: bigint | number
    dirty: boolean
  }

  export type data_migrationsUncheckedCreateInput = {
    version: bigint | number
    dirty: boolean
  }

  export type data_migrationsUpdateInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type data_migrationsUncheckedUpdateInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type data_migrationsCreateManyInput = {
    version: bigint | number
    dirty: boolean
  }

  export type data_migrationsUpdateManyMutationInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type data_migrationsUncheckedUpdateManyInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type farm_attachmentsCreateInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
    farms: farmsCreateNestedOneWithoutFarm_attachmentsInput
  }

  export type farm_attachmentsUncheckedCreateInput = {
    id: string
    farm_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farm_attachmentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
    farms?: farmsUpdateOneRequiredWithoutFarm_attachmentsNestedInput
  }

  export type farm_attachmentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farm_attachmentsCreateManyInput = {
    id: string
    farm_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farm_attachmentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farm_attachmentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farm_authorizedCreateInput = {
    id: string
    authorized_type: string
    authorized_second_type?: string | null
    license_id: string
    expire_date: Date | string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farms: farmsCreateNestedOneWithoutFarm_authorizedInput
  }

  export type farm_authorizedUncheckedCreateInput = {
    id: string
    farm_id: string
    authorized_type: string
    authorized_second_type?: string | null
    license_id: string
    expire_date: Date | string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_authorizedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farms?: farmsUpdateOneRequiredWithoutFarm_authorizedNestedInput
  }

  export type farm_authorizedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_authorizedCreateManyInput = {
    id: string
    farm_id: string
    authorized_type: string
    authorized_second_type?: string | null
    license_id: string
    expire_date: Date | string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_authorizedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_authorizedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_create_stagedCreateInput = {
    id: string
    staged_id: string
    farm_identification: string
    farm_type: string
    ref_1: string
    max_cows: number
    name: string
    standard: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    tracer_id: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    authorized_type: string
    authorized_second_type?: string | null
    authorized_license_id: string
    authorized_expire_date: Date | string
    veterinary_name?: string | null
    veterinary_license_id?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    status?: string
  }

  export type farm_create_stagedUncheckedCreateInput = {
    id: string
    staged_id: string
    farm_identification: string
    farm_type: string
    ref_1: string
    max_cows: number
    name: string
    standard: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    tracer_id: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    authorized_type: string
    authorized_second_type?: string | null
    authorized_license_id: string
    authorized_expire_date: Date | string
    veterinary_name?: string | null
    veterinary_license_id?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    status?: string
  }

  export type farm_create_stagedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_license_id?: StringFieldUpdateOperationsInput | string
    authorized_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    veterinary_license_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type farm_create_stagedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_license_id?: StringFieldUpdateOperationsInput | string
    authorized_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    veterinary_license_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type farm_create_stagedCreateManyInput = {
    id: string
    staged_id: string
    farm_identification: string
    farm_type: string
    ref_1: string
    max_cows: number
    name: string
    standard: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    tracer_id: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    authorized_type: string
    authorized_second_type?: string | null
    authorized_license_id: string
    authorized_expire_date: Date | string
    veterinary_name?: string | null
    veterinary_license_id?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    status?: string
  }

  export type farm_create_stagedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_license_id?: StringFieldUpdateOperationsInput | string
    authorized_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    veterinary_license_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type farm_create_stagedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    authorized_license_id?: StringFieldUpdateOperationsInput | string
    authorized_expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    veterinary_license_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
  }

  export type farm_sourcingCreateInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_id: string
    amount: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_sourcing?: cattle_sourcingCreateNestedManyWithoutFarm_sourcingInput
  }

  export type farm_sourcingUncheckedCreateInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_id: string
    amount: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_sourcing?: cattle_sourcingUncheckedCreateNestedManyWithoutFarm_sourcingInput
  }

  export type farm_sourcingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_sourcing?: cattle_sourcingUpdateManyWithoutFarm_sourcingNestedInput
  }

  export type farm_sourcingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_sourcing?: cattle_sourcingUncheckedUpdateManyWithoutFarm_sourcingNestedInput
  }

  export type farm_sourcingCreateManyInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_id: string
    amount: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_sourcingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_sourcingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_veterinaryCreateInput = {
    id: string
    name: string
    license_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farms: farmsCreateNestedOneWithoutFarm_veterinaryInput
  }

  export type farm_veterinaryUncheckedCreateInput = {
    id: string
    farm_id: string
    name: string
    license_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_veterinaryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farms?: farmsUpdateOneRequiredWithoutFarm_veterinaryNestedInput
  }

  export type farm_veterinaryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_veterinaryCreateManyInput = {
    id: string
    farm_id: string
    name: string
    license_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_veterinaryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_veterinaryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_accountsCreateInput = {
    id: string
    username: string
    password: string
    role_id?: number | null
    permissions?: farmer_accountsCreatepermissionsInput | string[]
    status?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmers: farmersCreateNestedOneWithoutFarmer_accountsInput
  }

  export type farmer_accountsUncheckedCreateInput = {
    id: string
    farmer_id: string
    username: string
    password: string
    role_id?: number | null
    permissions?: farmer_accountsCreatepermissionsInput | string[]
    status?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_accountsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmers?: farmersUpdateOneRequiredWithoutFarmer_accountsNestedInput
  }

  export type farmer_accountsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    farmer_id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_accountsCreateManyInput = {
    id: string
    farmer_id: string
    username: string
    password: string
    role_id?: number | null
    permissions?: farmer_accountsCreatepermissionsInput | string[]
    status?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_accountsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_accountsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    farmer_id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_attachmentsCreateInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
    farmers: farmersCreateNestedOneWithoutFarmer_attachmentsInput
  }

  export type farmer_attachmentsUncheckedCreateInput = {
    id: string
    farmer_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farmer_attachmentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
    farmers?: farmersUpdateOneRequiredWithoutFarmer_attachmentsNestedInput
  }

  export type farmer_attachmentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    farmer_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farmer_attachmentsCreateManyInput = {
    id: string
    farmer_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farmer_attachmentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farmer_attachmentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    farmer_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farmer_create_stagedCreateInput = {
    id: string
    staged_id: string
    farmer_type: string
    tin: string
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number?: string | null
    email?: string | null
    line_id?: string | null
    address_line1?: string | null
    address_subdistrict?: string | null
    address_district?: string | null
    address_province?: string | null
    address_zipcode?: string | null
    contact_address_line1?: string | null
    contact_address_subdistrict?: string | null
    contact_address_district?: string | null
    contact_address_province?: string | null
    contact_address_zipcode?: string | null
    status: number
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_create_stagedUncheckedCreateInput = {
    id: string
    staged_id: string
    farmer_type: string
    tin: string
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number?: string | null
    email?: string | null
    line_id?: string | null
    address_line1?: string | null
    address_subdistrict?: string | null
    address_district?: string | null
    address_province?: string | null
    address_zipcode?: string | null
    contact_address_line1?: string | null
    contact_address_subdistrict?: string | null
    contact_address_district?: string | null
    contact_address_province?: string | null
    contact_address_zipcode?: string | null
    status: number
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_create_stagedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    address_district?: NullableStringFieldUpdateOperationsInput | string | null
    address_province?: NullableStringFieldUpdateOperationsInput | string | null
    address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_create_stagedUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    address_district?: NullableStringFieldUpdateOperationsInput | string | null
    address_province?: NullableStringFieldUpdateOperationsInput | string | null
    address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_create_stagedCreateManyInput = {
    id: string
    staged_id: string
    farmer_type: string
    tin: string
    title?: string | null
    first_name?: string | null
    middle_name?: string | null
    last_name?: string | null
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number?: string | null
    email?: string | null
    line_id?: string | null
    address_line1?: string | null
    address_subdistrict?: string | null
    address_district?: string | null
    address_province?: string | null
    address_zipcode?: string | null
    contact_address_line1?: string | null
    contact_address_subdistrict?: string | null
    contact_address_district?: string | null
    contact_address_province?: string | null
    contact_address_zipcode?: string | null
    status: number
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_create_stagedUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    address_district?: NullableStringFieldUpdateOperationsInput | string | null
    address_province?: NullableStringFieldUpdateOperationsInput | string | null
    address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_create_stagedUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    staged_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    address_district?: NullableStringFieldUpdateOperationsInput | string | null
    address_province?: NullableStringFieldUpdateOperationsInput | string | null
    address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmersCreateInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmer_accounts?: farmer_accountsCreateNestedManyWithoutFarmersInput
    farmer_attachments?: farmer_attachmentsCreateNestedManyWithoutFarmersInput
  }

  export type farmersUncheckedCreateInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmer_accounts?: farmer_accountsUncheckedCreateNestedManyWithoutFarmersInput
    farmer_attachments?: farmer_attachmentsUncheckedCreateNestedManyWithoutFarmersInput
  }

  export type farmersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmer_accounts?: farmer_accountsUpdateManyWithoutFarmersNestedInput
    farmer_attachments?: farmer_attachmentsUpdateManyWithoutFarmersNestedInput
  }

  export type farmersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmer_accounts?: farmer_accountsUncheckedUpdateManyWithoutFarmersNestedInput
    farmer_attachments?: farmer_attachmentsUncheckedUpdateManyWithoutFarmersNestedInput
  }

  export type farmersCreateManyInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmsCreateInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryCreateNestedManyWithoutFarmsInput
    pens?: pensCreateNestedManyWithoutFarmsInput
  }

  export type farmsUncheckedCreateInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsUncheckedCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedUncheckedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryUncheckedCreateNestedManyWithoutFarmsInput
    pens?: pensUncheckedCreateNestedManyWithoutFarmsInput
  }

  export type farmsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUpdateManyWithoutFarmsNestedInput
    pens?: pensUpdateManyWithoutFarmsNestedInput
  }

  export type farmsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUncheckedUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUncheckedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUncheckedUpdateManyWithoutFarmsNestedInput
    pens?: pensUncheckedUpdateManyWithoutFarmsNestedInput
  }

  export type farmsCreateManyInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
  }

  export type farmsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
  }

  export type farmsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
  }

  export type order_attachmentsCreateInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    orders: ordersCreateNestedOneWithoutOrder_attachmentsInput
  }

  export type order_attachmentsUncheckedCreateInput = {
    id: string
    order_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type order_attachmentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    orders?: ordersUpdateOneRequiredWithoutOrder_attachmentsNestedInput
  }

  export type order_attachmentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_attachmentsCreateManyInput = {
    id: string
    order_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type order_attachmentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_attachmentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_requestsCreateInput = {
    id: string
    cattle_breed_id: string
    cattle_type_ids?: order_requestsCreatecattle_type_idsInput | string[]
    request_amount: number
    received_amount?: number | null
    from_age: number
    to_age: number
    from_weight: Decimal | DecimalJsLike | number | string
    to_weight: Decimal | DecimalJsLike | number | string
    castration_status: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    gender?: string | null
    pregnant_status?: string | null
    orders: ordersCreateNestedOneWithoutOrder_requestsInput
  }

  export type order_requestsUncheckedCreateInput = {
    id: string
    order_id: string
    cattle_breed_id: string
    cattle_type_ids?: order_requestsCreatecattle_type_idsInput | string[]
    request_amount: number
    received_amount?: number | null
    from_age: number
    to_age: number
    from_weight: Decimal | DecimalJsLike | number | string
    to_weight: Decimal | DecimalJsLike | number | string
    castration_status: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    gender?: string | null
    pregnant_status?: string | null
  }

  export type order_requestsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: ordersUpdateOneRequiredWithoutOrder_requestsNestedInput
  }

  export type order_requestsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_requestsCreateManyInput = {
    id: string
    order_id: string
    cattle_breed_id: string
    cattle_type_ids?: order_requestsCreatecattle_type_idsInput | string[]
    request_amount: number
    received_amount?: number | null
    from_age: number
    to_age: number
    from_weight: Decimal | DecimalJsLike | number | string
    to_weight: Decimal | DecimalJsLike | number | string
    castration_status: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    gender?: string | null
    pregnant_status?: string | null
  }

  export type order_requestsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_requestsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ordersCreateInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    order_attachments?: order_attachmentsCreateNestedManyWithoutOrdersInput
    order_requests?: order_requestsCreateNestedManyWithoutOrdersInput
  }

  export type ordersUncheckedCreateInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    order_attachments?: order_attachmentsUncheckedCreateNestedManyWithoutOrdersInput
    order_requests?: order_requestsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    order_attachments?: order_attachmentsUpdateManyWithoutOrdersNestedInput
    order_requests?: order_requestsUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    order_attachments?: order_attachmentsUncheckedUpdateManyWithoutOrdersNestedInput
    order_requests?: order_requestsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersCreateManyInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type ordersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type ordersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pen_attachmentsCreateInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    pens: pensCreateNestedOneWithoutPen_attachmentsInput
  }

  export type pen_attachmentsUncheckedCreateInput = {
    id: string
    pen_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pen_attachmentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    pens?: pensUpdateOneRequiredWithoutPen_attachmentsNestedInput
  }

  export type pen_attachmentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pen_attachmentsCreateManyInput = {
    id: string
    pen_id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pen_attachmentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pen_attachmentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pensCreateInput = {
    id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles?: cattlesCreateNestedManyWithoutPensInput
    pen_attachments?: pen_attachmentsCreateNestedManyWithoutPensInput
    farms: farmsCreateNestedOneWithoutPensInput
  }

  export type pensUncheckedCreateInput = {
    id: string
    farm_id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutPensInput
    pen_attachments?: pen_attachmentsUncheckedCreateNestedManyWithoutPensInput
  }

  export type pensUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutPensNestedInput
    pen_attachments?: pen_attachmentsUpdateManyWithoutPensNestedInput
    farms?: farmsUpdateOneRequiredWithoutPensNestedInput
  }

  export type pensUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutPensNestedInput
    pen_attachments?: pen_attachmentsUncheckedUpdateManyWithoutPensNestedInput
  }

  export type pensCreateManyInput = {
    id: string
    farm_id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pensUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pensUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsCreateInput = {
    version: bigint | number
    dirty: boolean
  }

  export type schema_migrationsUncheckedCreateInput = {
    version: bigint | number
    dirty: boolean
  }

  export type schema_migrationsUpdateInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type schema_migrationsUncheckedUpdateInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type schema_migrationsCreateManyInput = {
    version: bigint | number
    dirty: boolean
  }

  export type schema_migrationsUpdateManyMutationInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type schema_migrationsUncheckedUpdateManyInput = {
    version?: BigIntFieldUpdateOperationsInput | bigint | number
    dirty?: BoolFieldUpdateOperationsInput | boolean
  }

  export type traceabilityCreateInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleCreateNestedManyWithoutTraceabilityInput
    traceability_status?: traceability_statusCreateNestedManyWithoutTraceabilityInput
    traceability_vehicle?: traceability_vehicleCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityUncheckedCreateInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleUncheckedCreateNestedManyWithoutTraceabilityInput
    traceability_status?: traceability_statusUncheckedCreateNestedManyWithoutTraceabilityInput
    traceability_vehicle?: traceability_vehicleUncheckedCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUpdateManyWithoutTraceabilityNestedInput
    traceability_status?: traceability_statusUpdateManyWithoutTraceabilityNestedInput
    traceability_vehicle?: traceability_vehicleUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceabilityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUncheckedUpdateManyWithoutTraceabilityNestedInput
    traceability_status?: traceability_statusUncheckedUpdateManyWithoutTraceabilityNestedInput
    traceability_vehicle?: traceability_vehicleUncheckedUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceabilityCreateManyInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceabilityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceabilityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleCreateInput = {
    id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability: traceabilityCreateNestedOneWithoutTraceability_cattleInput
    traceability_vehicle: traceability_vehicleCreateNestedOneWithoutTraceability_cattleInput
  }

  export type traceability_cattleUncheckedCreateInput = {
    id: string
    traceability_id: string
    vehicle_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_cattleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability?: traceabilityUpdateOneRequiredWithoutTraceability_cattleNestedInput
    traceability_vehicle?: traceability_vehicleUpdateOneRequiredWithoutTraceability_cattleNestedInput
  }

  export type traceability_cattleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    vehicle_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleCreateManyInput = {
    id: string
    traceability_id: string
    vehicle_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_cattleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    vehicle_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_statusCreateInput = {
    id: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability: traceabilityCreateNestedOneWithoutTraceability_statusInput
  }

  export type traceability_statusUncheckedCreateInput = {
    id: string
    traceability_id: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_statusUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability?: traceabilityUpdateOneRequiredWithoutTraceability_statusNestedInput
  }

  export type traceability_statusUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_statusCreateManyInput = {
    id: string
    traceability_id: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_statusUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_statusUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_vehicleCreateInput = {
    id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleCreateNestedManyWithoutTraceability_vehicleInput
    traceability: traceabilityCreateNestedOneWithoutTraceability_vehicleInput
  }

  export type traceability_vehicleUncheckedCreateInput = {
    id: string
    traceability_id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleUncheckedCreateNestedManyWithoutTraceability_vehicleInput
  }

  export type traceability_vehicleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUpdateManyWithoutTraceability_vehicleNestedInput
    traceability?: traceabilityUpdateOneRequiredWithoutTraceability_vehicleNestedInput
  }

  export type traceability_vehicleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUncheckedUpdateManyWithoutTraceability_vehicleNestedInput
  }

  export type traceability_vehicleCreateManyInput = {
    id: string
    traceability_id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_vehicleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_vehicleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type adminsCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    citizen_id?: SortOrder
    masking_citizen_id?: SortOrder
    password?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    pic_url?: SortOrder
    permissions?: SortOrder
    role_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type adminsAvgOrderByAggregateInput = {
    role_id?: SortOrder
  }

  export type adminsMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    citizen_id?: SortOrder
    masking_citizen_id?: SortOrder
    password?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    pic_url?: SortOrder
    role_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type adminsMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    citizen_id?: SortOrder
    masking_citizen_id?: SortOrder
    password?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    pic_url?: SortOrder
    role_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type adminsSumOrderByAggregateInput = {
    role_id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type BuyersScalarRelationFilter = {
    is?: buyersWhereInput
    isNot?: buyersWhereInput
  }

  export type buyer_attachmentsCountOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type buyer_attachmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type buyer_attachmentsMinOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type Buyer_attachmentsListRelationFilter = {
    every?: buyer_attachmentsWhereInput
    some?: buyer_attachmentsWhereInput
    none?: buyer_attachmentsWhereInput
  }

  export type buyer_attachmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type buyersCountOrderByAggregateInput = {
    id?: SortOrder
    buyer_code?: SortOrder
    company_name?: SortOrder
    comp_registration_id?: SortOrder
    country?: SortOrder
    address?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    whatsapp?: SortOrder
    wechat?: SortOrder
    line_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    country_code?: SortOrder
  }

  export type buyersMaxOrderByAggregateInput = {
    id?: SortOrder
    buyer_code?: SortOrder
    company_name?: SortOrder
    comp_registration_id?: SortOrder
    country?: SortOrder
    address?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    whatsapp?: SortOrder
    wechat?: SortOrder
    line_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    country_code?: SortOrder
  }

  export type buyersMinOrderByAggregateInput = {
    id?: SortOrder
    buyer_code?: SortOrder
    company_name?: SortOrder
    comp_registration_id?: SortOrder
    country?: SortOrder
    address?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    whatsapp?: SortOrder
    wechat?: SortOrder
    line_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    country_code?: SortOrder
  }

  export type CattlesScalarRelationFilter = {
    is?: cattlesWhereInput
    isNot?: cattlesWhereInput
  }

  export type cattle_attachmentsCountOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_attachmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_attachmentsMinOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_breedsCountOrderByAggregateInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    short_name?: SortOrder
    remark?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_breedsMaxOrderByAggregateInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    short_name?: SortOrder
    remark?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_breedsMinOrderByAggregateInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    short_name?: SortOrder
    remark?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type cattle_create_stagedCountOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    cattle_breed_ids?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    breed_sire?: SortOrder
    breed_dam?: SortOrder
    breed_pgs?: SortOrder
    breed_pgd?: SortOrder
    breed_mgs?: SortOrder
    breed_mgd?: SortOrder
    country_code?: SortOrder
    health_treatment_date?: SortOrder
    health_veterinary_name?: SortOrder
    health_health_condition?: SortOrder
    health_symptom?: SortOrder
    health_cause_of_death?: SortOrder
    health_treatment?: SortOrder
    health_drug_name?: SortOrder
    health_dosage?: SortOrder
    health_period_residue?: SortOrder
    vaccination_vaccination_date?: SortOrder
    vaccination_veterinary_name?: SortOrder
    vaccination_vaccine_type?: SortOrder
    vaccination_remark?: SortOrder
    vaccination_vaccine_id?: SortOrder
    vaccination_vaccine_lot_no?: SortOrder
    vaccination_vaccine_expiry_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_create_stagedAvgOrderByAggregateInput = {
    weight?: SortOrder
    health_dosage?: SortOrder
  }

  export type cattle_create_stagedMaxOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    country_code?: SortOrder
    health_treatment_date?: SortOrder
    health_veterinary_name?: SortOrder
    health_health_condition?: SortOrder
    health_symptom?: SortOrder
    health_cause_of_death?: SortOrder
    health_treatment?: SortOrder
    health_drug_name?: SortOrder
    health_dosage?: SortOrder
    health_period_residue?: SortOrder
    vaccination_vaccination_date?: SortOrder
    vaccination_veterinary_name?: SortOrder
    vaccination_vaccine_type?: SortOrder
    vaccination_remark?: SortOrder
    vaccination_vaccine_id?: SortOrder
    vaccination_vaccine_lot_no?: SortOrder
    vaccination_vaccine_expiry_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_create_stagedMinOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    country_code?: SortOrder
    health_treatment_date?: SortOrder
    health_veterinary_name?: SortOrder
    health_health_condition?: SortOrder
    health_symptom?: SortOrder
    health_cause_of_death?: SortOrder
    health_treatment?: SortOrder
    health_drug_name?: SortOrder
    health_dosage?: SortOrder
    health_period_residue?: SortOrder
    vaccination_vaccination_date?: SortOrder
    vaccination_veterinary_name?: SortOrder
    vaccination_vaccine_type?: SortOrder
    vaccination_remark?: SortOrder
    vaccination_vaccine_id?: SortOrder
    vaccination_vaccine_lot_no?: SortOrder
    vaccination_vaccine_expiry_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_create_stagedSumOrderByAggregateInput = {
    weight?: SortOrder
    health_dosage?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type cattle_healthsCountOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    treatment_date?: SortOrder
    veterinary_name?: SortOrder
    health_condition?: SortOrder
    symptom?: SortOrder
    cause_of_death?: SortOrder
    treatment?: SortOrder
    drug_name?: SortOrder
    dosage?: SortOrder
    period_residue?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_healthsAvgOrderByAggregateInput = {
    dosage?: SortOrder
  }

  export type cattle_healthsMaxOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    treatment_date?: SortOrder
    veterinary_name?: SortOrder
    health_condition?: SortOrder
    symptom?: SortOrder
    cause_of_death?: SortOrder
    treatment?: SortOrder
    drug_name?: SortOrder
    dosage?: SortOrder
    period_residue?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_healthsMinOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    treatment_date?: SortOrder
    veterinary_name?: SortOrder
    health_condition?: SortOrder
    symptom?: SortOrder
    cause_of_death?: SortOrder
    treatment?: SortOrder
    drug_name?: SortOrder
    dosage?: SortOrder
    period_residue?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_healthsSumOrderByAggregateInput = {
    dosage?: SortOrder
  }

  export type cattle_matching_order_stagedCountOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_ids?: SortOrder
    is_exists_all?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_matching_order_stagedMaxOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    is_exists_all?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_matching_order_stagedMinOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    is_exists_all?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type Farm_sourcingScalarRelationFilter = {
    is?: farm_sourcingWhereInput
    isNot?: farm_sourcingWhereInput
  }

  export type cattle_sourcingCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_sourcingMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_sourcingMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_sourcing_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_typesCountOrderByAggregateInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_typesMaxOrderByAggregateInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_typesMinOrderByAggregateInput = {
    id?: SortOrder
    name_en?: SortOrder
    name_th?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_vaccinationsCountOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    vaccination_date?: SortOrder
    veterinary_name?: SortOrder
    vaccine_type?: SortOrder
    remark?: SortOrder
    vaccine_id?: SortOrder
    vaccine_lot_no?: SortOrder
    vaccine_expiry_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_vaccinationsMaxOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    vaccination_date?: SortOrder
    veterinary_name?: SortOrder
    vaccine_type?: SortOrder
    remark?: SortOrder
    vaccine_id?: SortOrder
    vaccine_lot_no?: SortOrder
    vaccine_expiry_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattle_vaccinationsMinOrderByAggregateInput = {
    id?: SortOrder
    cattle_id?: SortOrder
    vaccination_date?: SortOrder
    veterinary_name?: SortOrder
    vaccine_type?: SortOrder
    remark?: SortOrder
    vaccine_id?: SortOrder
    vaccine_lot_no?: SortOrder
    vaccine_expiry_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type Cattle_attachmentsListRelationFilter = {
    every?: cattle_attachmentsWhereInput
    some?: cattle_attachmentsWhereInput
    none?: cattle_attachmentsWhereInput
  }

  export type Cattle_healthsListRelationFilter = {
    every?: cattle_healthsWhereInput
    some?: cattle_healthsWhereInput
    none?: cattle_healthsWhereInput
  }

  export type Cattle_vaccinationsListRelationFilter = {
    every?: cattle_vaccinationsWhereInput
    some?: cattle_vaccinationsWhereInput
    none?: cattle_vaccinationsWhereInput
  }

  export type FarmsScalarRelationFilter = {
    is?: farmsWhereInput
    isNot?: farmsWhereInput
  }

  export type PensScalarRelationFilter = {
    is?: pensWhereInput
    isNot?: pensWhereInput
  }

  export type cattle_attachmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cattle_healthsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cattle_vaccinationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cattlesCountOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    cattle_breed_ids?: SortOrder
    traceability_id?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    ear_tag?: SortOrder
    breed_sire?: SortOrder
    breed_dam?: SortOrder
    breed_pgs?: SortOrder
    breed_pgd?: SortOrder
    breed_mgs?: SortOrder
    breed_mgd?: SortOrder
    is_sourcing?: SortOrder
    is_tracing?: SortOrder
    country_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattlesAvgOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type cattlesMaxOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    traceability_id?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    is_sourcing?: SortOrder
    is_tracing?: SortOrder
    country_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattlesMinOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_id?: SortOrder
    pen_id?: SortOrder
    cattle_type_id?: SortOrder
    traceability_id?: SortOrder
    nid?: SortOrder
    gender?: SortOrder
    castration_status?: SortOrder
    pregnant_status?: SortOrder
    birthdate?: SortOrder
    passport_no?: SortOrder
    color?: SortOrder
    ear?: SortOrder
    horn?: SortOrder
    weight?: SortOrder
    date_weight?: SortOrder
    tracer_tag?: SortOrder
    is_sourcing?: SortOrder
    is_tracing?: SortOrder
    country_code?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type cattlesSumOrderByAggregateInput = {
    weight?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type data_migrationsCountOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type data_migrationsAvgOrderByAggregateInput = {
    version?: SortOrder
  }

  export type data_migrationsMaxOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type data_migrationsMinOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type data_migrationsSumOrderByAggregateInput = {
    version?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type farm_attachmentsCountOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrder
  }

  export type farm_attachmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrder
  }

  export type farm_attachmentsMinOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrder
  }

  export type farm_authorizedCountOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrder
    license_id?: SortOrder
    expire_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_authorizedMaxOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrder
    license_id?: SortOrder
    expire_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_authorizedMinOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrder
    license_id?: SortOrder
    expire_date?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type farm_create_stagedCountOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    ref_1?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    tracer_id?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrder
    owner_type?: SortOrder
    owner_tin?: SortOrder
    owner_title?: SortOrder
    owner_first_name?: SortOrder
    owner_middle_name?: SortOrder
    owner_last_name?: SortOrder
    owner_company_name?: SortOrder
    owner_gender?: SortOrder
    owner_birthdate?: SortOrder
    owner_education_degree?: SortOrder
    owner_occupation?: SortOrder
    owner_second_occupation?: SortOrder
    owner_phone_number?: SortOrder
    owner_mobile_number?: SortOrder
    owner_email?: SortOrder
    owner_line_id?: SortOrder
    owner_address_line1?: SortOrder
    owner_address_subdistrict?: SortOrder
    owner_address_district?: SortOrder
    owner_address_province?: SortOrder
    owner_address_zipcode?: SortOrder
    owner_contact_address_line1?: SortOrder
    owner_contact_address_subdistrict?: SortOrder
    owner_contact_address_district?: SortOrder
    owner_contact_address_province?: SortOrder
    owner_contact_address_zipcode?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrder
    authorized_license_id?: SortOrder
    authorized_expire_date?: SortOrder
    veterinary_name?: SortOrder
    veterinary_license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    status?: SortOrder
  }

  export type farm_create_stagedAvgOrderByAggregateInput = {
    max_cows?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
  }

  export type farm_create_stagedMaxOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    ref_1?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    tracer_id?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrder
    owner_type?: SortOrder
    owner_tin?: SortOrder
    owner_title?: SortOrder
    owner_first_name?: SortOrder
    owner_middle_name?: SortOrder
    owner_last_name?: SortOrder
    owner_company_name?: SortOrder
    owner_gender?: SortOrder
    owner_birthdate?: SortOrder
    owner_education_degree?: SortOrder
    owner_occupation?: SortOrder
    owner_second_occupation?: SortOrder
    owner_phone_number?: SortOrder
    owner_mobile_number?: SortOrder
    owner_email?: SortOrder
    owner_line_id?: SortOrder
    owner_address_line1?: SortOrder
    owner_address_subdistrict?: SortOrder
    owner_address_district?: SortOrder
    owner_address_province?: SortOrder
    owner_address_zipcode?: SortOrder
    owner_contact_address_line1?: SortOrder
    owner_contact_address_subdistrict?: SortOrder
    owner_contact_address_district?: SortOrder
    owner_contact_address_province?: SortOrder
    owner_contact_address_zipcode?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrder
    authorized_license_id?: SortOrder
    authorized_expire_date?: SortOrder
    veterinary_name?: SortOrder
    veterinary_license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    status?: SortOrder
  }

  export type farm_create_stagedMinOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    ref_1?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    tracer_id?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrder
    owner_type?: SortOrder
    owner_tin?: SortOrder
    owner_title?: SortOrder
    owner_first_name?: SortOrder
    owner_middle_name?: SortOrder
    owner_last_name?: SortOrder
    owner_company_name?: SortOrder
    owner_gender?: SortOrder
    owner_birthdate?: SortOrder
    owner_education_degree?: SortOrder
    owner_occupation?: SortOrder
    owner_second_occupation?: SortOrder
    owner_phone_number?: SortOrder
    owner_mobile_number?: SortOrder
    owner_email?: SortOrder
    owner_line_id?: SortOrder
    owner_address_line1?: SortOrder
    owner_address_subdistrict?: SortOrder
    owner_address_district?: SortOrder
    owner_address_province?: SortOrder
    owner_address_zipcode?: SortOrder
    owner_contact_address_line1?: SortOrder
    owner_contact_address_subdistrict?: SortOrder
    owner_contact_address_district?: SortOrder
    owner_contact_address_province?: SortOrder
    owner_contact_address_zipcode?: SortOrder
    authorized_type?: SortOrder
    authorized_second_type?: SortOrder
    authorized_license_id?: SortOrder
    authorized_expire_date?: SortOrder
    veterinary_name?: SortOrder
    veterinary_license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    status?: SortOrder
  }

  export type farm_create_stagedSumOrderByAggregateInput = {
    max_cows?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type Cattle_sourcingListRelationFilter = {
    every?: cattle_sourcingWhereInput
    some?: cattle_sourcingWhereInput
    none?: cattle_sourcingWhereInput
  }

  export type cattle_sourcingOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farm_sourcingCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_sourcingAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type farm_sourcingMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_sourcingMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    order_request_id?: SortOrder
    farm_id?: SortOrder
    amount?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_sourcingSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type farm_veterinaryCountOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    name?: SortOrder
    license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_veterinaryMaxOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    name?: SortOrder
    license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farm_veterinaryMinOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    name?: SortOrder
    license_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type FarmersScalarRelationFilter = {
    is?: farmersWhereInput
    isNot?: farmersWhereInput
  }

  export type farmer_accountsCountOrderByAggregateInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    permissions?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_accountsAvgOrderByAggregateInput = {
    role_id?: SortOrder
  }

  export type farmer_accountsMaxOrderByAggregateInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_accountsMinOrderByAggregateInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_accountsSumOrderByAggregateInput = {
    role_id?: SortOrder
  }

  export type farmer_attachmentsCountOrderByAggregateInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrder
  }

  export type farmer_attachmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrder
  }

  export type farmer_attachmentsMinOrderByAggregateInput = {
    id?: SortOrder
    farmer_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    encrypted_key?: SortOrder
  }

  export type farmer_create_stagedCountOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    company_name?: SortOrder
    gender?: SortOrder
    birthdate?: SortOrder
    education_degree?: SortOrder
    occupation?: SortOrder
    second_occupation?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    email?: SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_create_stagedAvgOrderByAggregateInput = {
    status?: SortOrder
  }

  export type farmer_create_stagedMaxOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    company_name?: SortOrder
    gender?: SortOrder
    birthdate?: SortOrder
    education_degree?: SortOrder
    occupation?: SortOrder
    second_occupation?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    email?: SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_create_stagedMinOrderByAggregateInput = {
    id?: SortOrder
    staged_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    company_name?: SortOrder
    gender?: SortOrder
    birthdate?: SortOrder
    education_degree?: SortOrder
    occupation?: SortOrder
    second_occupation?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    email?: SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmer_create_stagedSumOrderByAggregateInput = {
    status?: SortOrder
  }

  export type Farmer_accountsListRelationFilter = {
    every?: farmer_accountsWhereInput
    some?: farmer_accountsWhereInput
    none?: farmer_accountsWhereInput
  }

  export type Farmer_attachmentsListRelationFilter = {
    every?: farmer_attachmentsWhereInput
    some?: farmer_attachmentsWhereInput
    none?: farmer_attachmentsWhereInput
  }

  export type farmer_accountsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farmer_attachmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farmersCountOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    masking_tin?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    company_name?: SortOrder
    gender?: SortOrder
    birthdate?: SortOrder
    education_degree?: SortOrder
    occupation?: SortOrder
    second_occupation?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    email?: SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmersMaxOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    masking_tin?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    company_name?: SortOrder
    gender?: SortOrder
    birthdate?: SortOrder
    education_degree?: SortOrder
    occupation?: SortOrder
    second_occupation?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    email?: SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type farmersMinOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farmer_type?: SortOrder
    tin?: SortOrder
    masking_tin?: SortOrder
    title?: SortOrder
    first_name?: SortOrder
    middle_name?: SortOrder
    last_name?: SortOrder
    company_name?: SortOrder
    gender?: SortOrder
    birthdate?: SortOrder
    education_degree?: SortOrder
    occupation?: SortOrder
    second_occupation?: SortOrder
    phone_number?: SortOrder
    mobile_number?: SortOrder
    email?: SortOrder
    line_id?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    contact_address_line1?: SortOrder
    contact_address_subdistrict?: SortOrder
    contact_address_district?: SortOrder
    contact_address_province?: SortOrder
    contact_address_zipcode?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type CattlesListRelationFilter = {
    every?: cattlesWhereInput
    some?: cattlesWhereInput
    none?: cattlesWhereInput
  }

  export type Farm_attachmentsListRelationFilter = {
    every?: farm_attachmentsWhereInput
    some?: farm_attachmentsWhereInput
    none?: farm_attachmentsWhereInput
  }

  export type Farm_authorizedListRelationFilter = {
    every?: farm_authorizedWhereInput
    some?: farm_authorizedWhereInput
    none?: farm_authorizedWhereInput
  }

  export type Farm_veterinaryListRelationFilter = {
    every?: farm_veterinaryWhereInput
    some?: farm_veterinaryWhereInput
    none?: farm_veterinaryWhereInput
  }

  export type PensListRelationFilter = {
    every?: pensWhereInput
    some?: pensWhereInput
    none?: pensWhereInput
  }

  export type cattlesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farm_attachmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farm_authorizedOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farm_veterinaryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type farmsCountOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    status?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrder
    owner_type?: SortOrder
    owner_tin?: SortOrder
    owner_masking_tin?: SortOrder
    owner_title?: SortOrder
    owner_first_name?: SortOrder
    owner_middle_name?: SortOrder
    owner_last_name?: SortOrder
    owner_company_name?: SortOrder
    owner_gender?: SortOrder
    owner_birthdate?: SortOrder
    owner_education_degree?: SortOrder
    owner_occupation?: SortOrder
    owner_second_occupation?: SortOrder
    owner_phone_number?: SortOrder
    owner_mobile_number?: SortOrder
    owner_email?: SortOrder
    owner_line_id?: SortOrder
    owner_address_line1?: SortOrder
    owner_address_subdistrict?: SortOrder
    owner_address_district?: SortOrder
    owner_address_province?: SortOrder
    owner_address_zipcode?: SortOrder
    owner_contact_address_line1?: SortOrder
    owner_contact_address_subdistrict?: SortOrder
    owner_contact_address_district?: SortOrder
    owner_contact_address_province?: SortOrder
    owner_contact_address_zipcode?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    ref_1?: SortOrder
  }

  export type farmsAvgOrderByAggregateInput = {
    max_cows?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
  }

  export type farmsMaxOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    status?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrder
    owner_type?: SortOrder
    owner_tin?: SortOrder
    owner_masking_tin?: SortOrder
    owner_title?: SortOrder
    owner_first_name?: SortOrder
    owner_middle_name?: SortOrder
    owner_last_name?: SortOrder
    owner_company_name?: SortOrder
    owner_gender?: SortOrder
    owner_birthdate?: SortOrder
    owner_education_degree?: SortOrder
    owner_occupation?: SortOrder
    owner_second_occupation?: SortOrder
    owner_phone_number?: SortOrder
    owner_mobile_number?: SortOrder
    owner_email?: SortOrder
    owner_line_id?: SortOrder
    owner_address_line1?: SortOrder
    owner_address_subdistrict?: SortOrder
    owner_address_district?: SortOrder
    owner_address_province?: SortOrder
    owner_address_zipcode?: SortOrder
    owner_contact_address_line1?: SortOrder
    owner_contact_address_subdistrict?: SortOrder
    owner_contact_address_district?: SortOrder
    owner_contact_address_province?: SortOrder
    owner_contact_address_zipcode?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    ref_1?: SortOrder
  }

  export type farmsMinOrderByAggregateInput = {
    id?: SortOrder
    tracer_id?: SortOrder
    farm_identification?: SortOrder
    farm_type?: SortOrder
    max_cows?: SortOrder
    name?: SortOrder
    standard?: SortOrder
    status?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
    address_line1?: SortOrder
    address_subdistrict?: SortOrder
    address_district?: SortOrder
    address_province?: SortOrder
    address_zipcode?: SortOrder
    is_owner_ref_farmer?: SortOrder
    farmer_id?: SortOrder
    owner_type?: SortOrder
    owner_tin?: SortOrder
    owner_masking_tin?: SortOrder
    owner_title?: SortOrder
    owner_first_name?: SortOrder
    owner_middle_name?: SortOrder
    owner_last_name?: SortOrder
    owner_company_name?: SortOrder
    owner_gender?: SortOrder
    owner_birthdate?: SortOrder
    owner_education_degree?: SortOrder
    owner_occupation?: SortOrder
    owner_second_occupation?: SortOrder
    owner_phone_number?: SortOrder
    owner_mobile_number?: SortOrder
    owner_email?: SortOrder
    owner_line_id?: SortOrder
    owner_address_line1?: SortOrder
    owner_address_subdistrict?: SortOrder
    owner_address_district?: SortOrder
    owner_address_province?: SortOrder
    owner_address_zipcode?: SortOrder
    owner_contact_address_line1?: SortOrder
    owner_contact_address_subdistrict?: SortOrder
    owner_contact_address_district?: SortOrder
    owner_contact_address_province?: SortOrder
    owner_contact_address_zipcode?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    ref_1?: SortOrder
  }

  export type farmsSumOrderByAggregateInput = {
    max_cows?: SortOrder
    rai?: SortOrder
    ngan?: SortOrder
    wa?: SortOrder
  }

  export type OrdersScalarRelationFilter = {
    is?: ordersWhereInput
    isNot?: ordersWhereInput
  }

  export type order_attachmentsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type order_attachmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type order_attachmentsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type order_requestsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    cattle_breed_id?: SortOrder
    cattle_type_ids?: SortOrder
    request_amount?: SortOrder
    received_amount?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
    castration_status?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    gender?: SortOrder
    pregnant_status?: SortOrder
  }

  export type order_requestsAvgOrderByAggregateInput = {
    request_amount?: SortOrder
    received_amount?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
  }

  export type order_requestsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    cattle_breed_id?: SortOrder
    request_amount?: SortOrder
    received_amount?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
    castration_status?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    gender?: SortOrder
    pregnant_status?: SortOrder
  }

  export type order_requestsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    cattle_breed_id?: SortOrder
    request_amount?: SortOrder
    received_amount?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
    castration_status?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
    gender?: SortOrder
    pregnant_status?: SortOrder
  }

  export type order_requestsSumOrderByAggregateInput = {
    request_amount?: SortOrder
    received_amount?: SortOrder
    from_age?: SortOrder
    to_age?: SortOrder
    from_weight?: SortOrder
    to_weight?: SortOrder
  }

  export type Order_attachmentsListRelationFilter = {
    every?: order_attachmentsWhereInput
    some?: order_attachmentsWhereInput
    none?: order_attachmentsWhereInput
  }

  export type Order_requestsListRelationFilter = {
    every?: order_requestsWhereInput
    some?: order_requestsWhereInput
    none?: order_requestsWhereInput
  }

  export type order_attachmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type order_requestsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordersCountOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    buyer_code?: SortOrder
    buyer_company_name?: SortOrder
    buyer_register_date?: SortOrder
    order_code?: SortOrder
    remark?: SortOrder
    delivery_from_date?: SortOrder
    delivery_to_date?: SortOrder
    delivery_type?: SortOrder
    origin_address?: SortOrder
    destination_address?: SortOrder
    destination_country?: SortOrder
    destination_country_code?: SortOrder
    total_price?: SortOrder
    quarantine_day?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type ordersAvgOrderByAggregateInput = {
    total_price?: SortOrder
    quarantine_day?: SortOrder
  }

  export type ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    buyer_code?: SortOrder
    buyer_company_name?: SortOrder
    buyer_register_date?: SortOrder
    order_code?: SortOrder
    remark?: SortOrder
    delivery_from_date?: SortOrder
    delivery_to_date?: SortOrder
    delivery_type?: SortOrder
    origin_address?: SortOrder
    destination_address?: SortOrder
    destination_country?: SortOrder
    destination_country_code?: SortOrder
    total_price?: SortOrder
    quarantine_day?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type ordersMinOrderByAggregateInput = {
    id?: SortOrder
    buyer_id?: SortOrder
    buyer_code?: SortOrder
    buyer_company_name?: SortOrder
    buyer_register_date?: SortOrder
    order_code?: SortOrder
    remark?: SortOrder
    delivery_from_date?: SortOrder
    delivery_to_date?: SortOrder
    delivery_type?: SortOrder
    origin_address?: SortOrder
    destination_address?: SortOrder
    destination_country?: SortOrder
    destination_country_code?: SortOrder
    total_price?: SortOrder
    quarantine_day?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type ordersSumOrderByAggregateInput = {
    total_price?: SortOrder
    quarantine_day?: SortOrder
  }

  export type pen_attachmentsCountOrderByAggregateInput = {
    id?: SortOrder
    pen_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type pen_attachmentsMaxOrderByAggregateInput = {
    id?: SortOrder
    pen_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type pen_attachmentsMinOrderByAggregateInput = {
    id?: SortOrder
    pen_id?: SortOrder
    file_name?: SortOrder
    file_path?: SortOrder
    is_public?: SortOrder
    content_type?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type Pen_attachmentsListRelationFilter = {
    every?: pen_attachmentsWhereInput
    some?: pen_attachmentsWhereInput
    none?: pen_attachmentsWhereInput
  }

  export type pen_attachmentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pensCountOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    pen_type?: SortOrder
    pen_number?: SortOrder
    capacity?: SortOrder
    name?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type pensAvgOrderByAggregateInput = {
    capacity?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type pensMaxOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    pen_type?: SortOrder
    pen_number?: SortOrder
    capacity?: SortOrder
    name?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type pensMinOrderByAggregateInput = {
    id?: SortOrder
    farm_id?: SortOrder
    pen_type?: SortOrder
    pen_number?: SortOrder
    capacity?: SortOrder
    name?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type pensSumOrderByAggregateInput = {
    capacity?: SortOrder
    wa?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type schema_migrationsCountOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type schema_migrationsAvgOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMaxOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type schema_migrationsMinOrderByAggregateInput = {
    version?: SortOrder
    dirty?: SortOrder
  }

  export type schema_migrationsSumOrderByAggregateInput = {
    version?: SortOrder
  }

  export type Traceability_cattleListRelationFilter = {
    every?: traceability_cattleWhereInput
    some?: traceability_cattleWhereInput
    none?: traceability_cattleWhereInput
  }

  export type Traceability_statusListRelationFilter = {
    every?: traceability_statusWhereInput
    some?: traceability_statusWhereInput
    none?: traceability_statusWhereInput
  }

  export type Traceability_vehicleListRelationFilter = {
    every?: traceability_vehicleWhereInput
    some?: traceability_vehicleWhereInput
    none?: traceability_vehicleWhereInput
  }

  export type traceability_cattleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type traceability_statusOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type traceability_vehicleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type traceabilityCountOrderByAggregateInput = {
    id?: SortOrder
    reason?: SortOrder
    document_no?: SortOrder
    total_animal?: SortOrder
    origin_farm_id?: SortOrder
    origin_pen_id?: SortOrder
    destination_farm_id?: SortOrder
    destination_pen_id?: SortOrder
    specific_destination_name?: SortOrder
    destination_province?: SortOrder
    shipment_date?: SortOrder
    estimated_arrival_date?: SortOrder
    destination_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceabilityAvgOrderByAggregateInput = {
    total_animal?: SortOrder
  }

  export type traceabilityMaxOrderByAggregateInput = {
    id?: SortOrder
    reason?: SortOrder
    document_no?: SortOrder
    total_animal?: SortOrder
    origin_farm_id?: SortOrder
    origin_pen_id?: SortOrder
    destination_farm_id?: SortOrder
    destination_pen_id?: SortOrder
    specific_destination_name?: SortOrder
    destination_province?: SortOrder
    shipment_date?: SortOrder
    estimated_arrival_date?: SortOrder
    destination_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceabilityMinOrderByAggregateInput = {
    id?: SortOrder
    reason?: SortOrder
    document_no?: SortOrder
    total_animal?: SortOrder
    origin_farm_id?: SortOrder
    origin_pen_id?: SortOrder
    destination_farm_id?: SortOrder
    destination_pen_id?: SortOrder
    specific_destination_name?: SortOrder
    destination_province?: SortOrder
    shipment_date?: SortOrder
    estimated_arrival_date?: SortOrder
    destination_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceabilitySumOrderByAggregateInput = {
    total_animal?: SortOrder
  }

  export type TraceabilityScalarRelationFilter = {
    is?: traceabilityWhereInput
    isNot?: traceabilityWhereInput
  }

  export type Traceability_vehicleScalarRelationFilter = {
    is?: traceability_vehicleWhereInput
    isNot?: traceability_vehicleWhereInput
  }

  export type traceability_cattleCountOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_cattleMaxOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_cattleMinOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_id?: SortOrder
    cattle_id?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_statusCountOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_statusMaxOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_statusMinOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_vehicleCountOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_type?: SortOrder
    vehicle_registration?: SortOrder
    transport_company_name?: SortOrder
    driver_title?: SortOrder
    driver_first_name?: SortOrder
    driver_middle_name?: SortOrder
    driver_last_name?: SortOrder
    contact_title?: SortOrder
    contact_first_name?: SortOrder
    contact_middle_name?: SortOrder
    contact_last_name?: SortOrder
    contact_phone?: SortOrder
    is_contract_same_driver?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_vehicleMaxOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_type?: SortOrder
    vehicle_registration?: SortOrder
    transport_company_name?: SortOrder
    driver_title?: SortOrder
    driver_first_name?: SortOrder
    driver_middle_name?: SortOrder
    driver_last_name?: SortOrder
    contact_title?: SortOrder
    contact_first_name?: SortOrder
    contact_middle_name?: SortOrder
    contact_last_name?: SortOrder
    contact_phone?: SortOrder
    is_contract_same_driver?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type traceability_vehicleMinOrderByAggregateInput = {
    id?: SortOrder
    traceability_id?: SortOrder
    vehicle_type?: SortOrder
    vehicle_registration?: SortOrder
    transport_company_name?: SortOrder
    driver_title?: SortOrder
    driver_first_name?: SortOrder
    driver_middle_name?: SortOrder
    driver_last_name?: SortOrder
    contact_title?: SortOrder
    contact_first_name?: SortOrder
    contact_middle_name?: SortOrder
    contact_last_name?: SortOrder
    contact_phone?: SortOrder
    is_contract_same_driver?: SortOrder
    created_at?: SortOrder
    created_by_id?: SortOrder
    created_by?: SortOrder
    updated_at?: SortOrder
    updated_by_id?: SortOrder
    updated_by?: SortOrder
  }

  export type adminsCreatepermissionsInput = {
    set: string[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type adminsUpdatepermissionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type buyersCreateNestedOneWithoutBuyer_attachmentsInput = {
    create?: XOR<buyersCreateWithoutBuyer_attachmentsInput, buyersUncheckedCreateWithoutBuyer_attachmentsInput>
    connectOrCreate?: buyersCreateOrConnectWithoutBuyer_attachmentsInput
    connect?: buyersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type buyersUpdateOneRequiredWithoutBuyer_attachmentsNestedInput = {
    create?: XOR<buyersCreateWithoutBuyer_attachmentsInput, buyersUncheckedCreateWithoutBuyer_attachmentsInput>
    connectOrCreate?: buyersCreateOrConnectWithoutBuyer_attachmentsInput
    upsert?: buyersUpsertWithoutBuyer_attachmentsInput
    connect?: buyersWhereUniqueInput
    update?: XOR<XOR<buyersUpdateToOneWithWhereWithoutBuyer_attachmentsInput, buyersUpdateWithoutBuyer_attachmentsInput>, buyersUncheckedUpdateWithoutBuyer_attachmentsInput>
  }

  export type buyer_attachmentsCreateNestedManyWithoutBuyersInput = {
    create?: XOR<buyer_attachmentsCreateWithoutBuyersInput, buyer_attachmentsUncheckedCreateWithoutBuyersInput> | buyer_attachmentsCreateWithoutBuyersInput[] | buyer_attachmentsUncheckedCreateWithoutBuyersInput[]
    connectOrCreate?: buyer_attachmentsCreateOrConnectWithoutBuyersInput | buyer_attachmentsCreateOrConnectWithoutBuyersInput[]
    createMany?: buyer_attachmentsCreateManyBuyersInputEnvelope
    connect?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
  }

  export type buyer_attachmentsUncheckedCreateNestedManyWithoutBuyersInput = {
    create?: XOR<buyer_attachmentsCreateWithoutBuyersInput, buyer_attachmentsUncheckedCreateWithoutBuyersInput> | buyer_attachmentsCreateWithoutBuyersInput[] | buyer_attachmentsUncheckedCreateWithoutBuyersInput[]
    connectOrCreate?: buyer_attachmentsCreateOrConnectWithoutBuyersInput | buyer_attachmentsCreateOrConnectWithoutBuyersInput[]
    createMany?: buyer_attachmentsCreateManyBuyersInputEnvelope
    connect?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
  }

  export type buyer_attachmentsUpdateManyWithoutBuyersNestedInput = {
    create?: XOR<buyer_attachmentsCreateWithoutBuyersInput, buyer_attachmentsUncheckedCreateWithoutBuyersInput> | buyer_attachmentsCreateWithoutBuyersInput[] | buyer_attachmentsUncheckedCreateWithoutBuyersInput[]
    connectOrCreate?: buyer_attachmentsCreateOrConnectWithoutBuyersInput | buyer_attachmentsCreateOrConnectWithoutBuyersInput[]
    upsert?: buyer_attachmentsUpsertWithWhereUniqueWithoutBuyersInput | buyer_attachmentsUpsertWithWhereUniqueWithoutBuyersInput[]
    createMany?: buyer_attachmentsCreateManyBuyersInputEnvelope
    set?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    disconnect?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    delete?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    connect?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    update?: buyer_attachmentsUpdateWithWhereUniqueWithoutBuyersInput | buyer_attachmentsUpdateWithWhereUniqueWithoutBuyersInput[]
    updateMany?: buyer_attachmentsUpdateManyWithWhereWithoutBuyersInput | buyer_attachmentsUpdateManyWithWhereWithoutBuyersInput[]
    deleteMany?: buyer_attachmentsScalarWhereInput | buyer_attachmentsScalarWhereInput[]
  }

  export type buyer_attachmentsUncheckedUpdateManyWithoutBuyersNestedInput = {
    create?: XOR<buyer_attachmentsCreateWithoutBuyersInput, buyer_attachmentsUncheckedCreateWithoutBuyersInput> | buyer_attachmentsCreateWithoutBuyersInput[] | buyer_attachmentsUncheckedCreateWithoutBuyersInput[]
    connectOrCreate?: buyer_attachmentsCreateOrConnectWithoutBuyersInput | buyer_attachmentsCreateOrConnectWithoutBuyersInput[]
    upsert?: buyer_attachmentsUpsertWithWhereUniqueWithoutBuyersInput | buyer_attachmentsUpsertWithWhereUniqueWithoutBuyersInput[]
    createMany?: buyer_attachmentsCreateManyBuyersInputEnvelope
    set?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    disconnect?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    delete?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    connect?: buyer_attachmentsWhereUniqueInput | buyer_attachmentsWhereUniqueInput[]
    update?: buyer_attachmentsUpdateWithWhereUniqueWithoutBuyersInput | buyer_attachmentsUpdateWithWhereUniqueWithoutBuyersInput[]
    updateMany?: buyer_attachmentsUpdateManyWithWhereWithoutBuyersInput | buyer_attachmentsUpdateManyWithWhereWithoutBuyersInput[]
    deleteMany?: buyer_attachmentsScalarWhereInput | buyer_attachmentsScalarWhereInput[]
  }

  export type cattlesCreateNestedOneWithoutCattle_attachmentsInput = {
    create?: XOR<cattlesCreateWithoutCattle_attachmentsInput, cattlesUncheckedCreateWithoutCattle_attachmentsInput>
    connectOrCreate?: cattlesCreateOrConnectWithoutCattle_attachmentsInput
    connect?: cattlesWhereUniqueInput
  }

  export type cattlesUpdateOneRequiredWithoutCattle_attachmentsNestedInput = {
    create?: XOR<cattlesCreateWithoutCattle_attachmentsInput, cattlesUncheckedCreateWithoutCattle_attachmentsInput>
    connectOrCreate?: cattlesCreateOrConnectWithoutCattle_attachmentsInput
    upsert?: cattlesUpsertWithoutCattle_attachmentsInput
    connect?: cattlesWhereUniqueInput
    update?: XOR<XOR<cattlesUpdateToOneWithWhereWithoutCattle_attachmentsInput, cattlesUpdateWithoutCattle_attachmentsInput>, cattlesUncheckedUpdateWithoutCattle_attachmentsInput>
  }

  export type cattle_create_stagedCreatecattle_breed_idsInput = {
    set: string[]
  }

  export type cattle_create_stagedCreatebreed_sireInput = {
    set: string[]
  }

  export type cattle_create_stagedCreatebreed_damInput = {
    set: string[]
  }

  export type cattle_create_stagedCreatebreed_pgsInput = {
    set: string[]
  }

  export type cattle_create_stagedCreatebreed_pgdInput = {
    set: string[]
  }

  export type cattle_create_stagedCreatebreed_mgsInput = {
    set: string[]
  }

  export type cattle_create_stagedCreatebreed_mgdInput = {
    set: string[]
  }

  export type cattle_create_stagedUpdatecattle_breed_idsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type cattle_create_stagedUpdatebreed_sireInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattle_create_stagedUpdatebreed_damInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattle_create_stagedUpdatebreed_pgsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattle_create_stagedUpdatebreed_pgdInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattle_create_stagedUpdatebreed_mgsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattle_create_stagedUpdatebreed_mgdInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type cattlesCreateNestedOneWithoutCattle_healthsInput = {
    create?: XOR<cattlesCreateWithoutCattle_healthsInput, cattlesUncheckedCreateWithoutCattle_healthsInput>
    connectOrCreate?: cattlesCreateOrConnectWithoutCattle_healthsInput
    connect?: cattlesWhereUniqueInput
  }

  export type cattlesUpdateOneRequiredWithoutCattle_healthsNestedInput = {
    create?: XOR<cattlesCreateWithoutCattle_healthsInput, cattlesUncheckedCreateWithoutCattle_healthsInput>
    connectOrCreate?: cattlesCreateOrConnectWithoutCattle_healthsInput
    upsert?: cattlesUpsertWithoutCattle_healthsInput
    connect?: cattlesWhereUniqueInput
    update?: XOR<XOR<cattlesUpdateToOneWithWhereWithoutCattle_healthsInput, cattlesUpdateWithoutCattle_healthsInput>, cattlesUncheckedUpdateWithoutCattle_healthsInput>
  }

  export type cattle_matching_order_stagedCreatecattle_idsInput = {
    set: string[]
  }

  export type cattle_matching_order_stagedUpdatecattle_idsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type farm_sourcingCreateNestedOneWithoutCattle_sourcingInput = {
    create?: XOR<farm_sourcingCreateWithoutCattle_sourcingInput, farm_sourcingUncheckedCreateWithoutCattle_sourcingInput>
    connectOrCreate?: farm_sourcingCreateOrConnectWithoutCattle_sourcingInput
    connect?: farm_sourcingWhereUniqueInput
  }

  export type farm_sourcingUpdateOneRequiredWithoutCattle_sourcingNestedInput = {
    create?: XOR<farm_sourcingCreateWithoutCattle_sourcingInput, farm_sourcingUncheckedCreateWithoutCattle_sourcingInput>
    connectOrCreate?: farm_sourcingCreateOrConnectWithoutCattle_sourcingInput
    upsert?: farm_sourcingUpsertWithoutCattle_sourcingInput
    connect?: farm_sourcingWhereUniqueInput
    update?: XOR<XOR<farm_sourcingUpdateToOneWithWhereWithoutCattle_sourcingInput, farm_sourcingUpdateWithoutCattle_sourcingInput>, farm_sourcingUncheckedUpdateWithoutCattle_sourcingInput>
  }

  export type cattlesCreateNestedOneWithoutCattle_vaccinationsInput = {
    create?: XOR<cattlesCreateWithoutCattle_vaccinationsInput, cattlesUncheckedCreateWithoutCattle_vaccinationsInput>
    connectOrCreate?: cattlesCreateOrConnectWithoutCattle_vaccinationsInput
    connect?: cattlesWhereUniqueInput
  }

  export type cattlesUpdateOneRequiredWithoutCattle_vaccinationsNestedInput = {
    create?: XOR<cattlesCreateWithoutCattle_vaccinationsInput, cattlesUncheckedCreateWithoutCattle_vaccinationsInput>
    connectOrCreate?: cattlesCreateOrConnectWithoutCattle_vaccinationsInput
    upsert?: cattlesUpsertWithoutCattle_vaccinationsInput
    connect?: cattlesWhereUniqueInput
    update?: XOR<XOR<cattlesUpdateToOneWithWhereWithoutCattle_vaccinationsInput, cattlesUpdateWithoutCattle_vaccinationsInput>, cattlesUncheckedUpdateWithoutCattle_vaccinationsInput>
  }

  export type cattlesCreatecattle_breed_idsInput = {
    set: string[]
  }

  export type cattlesCreateear_tagInput = {
    set: string[]
  }

  export type cattlesCreatebreed_sireInput = {
    set: string[]
  }

  export type cattlesCreatebreed_damInput = {
    set: string[]
  }

  export type cattlesCreatebreed_pgsInput = {
    set: string[]
  }

  export type cattlesCreatebreed_pgdInput = {
    set: string[]
  }

  export type cattlesCreatebreed_mgsInput = {
    set: string[]
  }

  export type cattlesCreatebreed_mgdInput = {
    set: string[]
  }

  export type cattle_attachmentsCreateNestedManyWithoutCattlesInput = {
    create?: XOR<cattle_attachmentsCreateWithoutCattlesInput, cattle_attachmentsUncheckedCreateWithoutCattlesInput> | cattle_attachmentsCreateWithoutCattlesInput[] | cattle_attachmentsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_attachmentsCreateOrConnectWithoutCattlesInput | cattle_attachmentsCreateOrConnectWithoutCattlesInput[]
    createMany?: cattle_attachmentsCreateManyCattlesInputEnvelope
    connect?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
  }

  export type cattle_healthsCreateNestedManyWithoutCattlesInput = {
    create?: XOR<cattle_healthsCreateWithoutCattlesInput, cattle_healthsUncheckedCreateWithoutCattlesInput> | cattle_healthsCreateWithoutCattlesInput[] | cattle_healthsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_healthsCreateOrConnectWithoutCattlesInput | cattle_healthsCreateOrConnectWithoutCattlesInput[]
    createMany?: cattle_healthsCreateManyCattlesInputEnvelope
    connect?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
  }

  export type cattle_vaccinationsCreateNestedManyWithoutCattlesInput = {
    create?: XOR<cattle_vaccinationsCreateWithoutCattlesInput, cattle_vaccinationsUncheckedCreateWithoutCattlesInput> | cattle_vaccinationsCreateWithoutCattlesInput[] | cattle_vaccinationsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_vaccinationsCreateOrConnectWithoutCattlesInput | cattle_vaccinationsCreateOrConnectWithoutCattlesInput[]
    createMany?: cattle_vaccinationsCreateManyCattlesInputEnvelope
    connect?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
  }

  export type farmsCreateNestedOneWithoutCattlesInput = {
    create?: XOR<farmsCreateWithoutCattlesInput, farmsUncheckedCreateWithoutCattlesInput>
    connectOrCreate?: farmsCreateOrConnectWithoutCattlesInput
    connect?: farmsWhereUniqueInput
  }

  export type pensCreateNestedOneWithoutCattlesInput = {
    create?: XOR<pensCreateWithoutCattlesInput, pensUncheckedCreateWithoutCattlesInput>
    connectOrCreate?: pensCreateOrConnectWithoutCattlesInput
    connect?: pensWhereUniqueInput
  }

  export type cattle_attachmentsUncheckedCreateNestedManyWithoutCattlesInput = {
    create?: XOR<cattle_attachmentsCreateWithoutCattlesInput, cattle_attachmentsUncheckedCreateWithoutCattlesInput> | cattle_attachmentsCreateWithoutCattlesInput[] | cattle_attachmentsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_attachmentsCreateOrConnectWithoutCattlesInput | cattle_attachmentsCreateOrConnectWithoutCattlesInput[]
    createMany?: cattle_attachmentsCreateManyCattlesInputEnvelope
    connect?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
  }

  export type cattle_healthsUncheckedCreateNestedManyWithoutCattlesInput = {
    create?: XOR<cattle_healthsCreateWithoutCattlesInput, cattle_healthsUncheckedCreateWithoutCattlesInput> | cattle_healthsCreateWithoutCattlesInput[] | cattle_healthsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_healthsCreateOrConnectWithoutCattlesInput | cattle_healthsCreateOrConnectWithoutCattlesInput[]
    createMany?: cattle_healthsCreateManyCattlesInputEnvelope
    connect?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
  }

  export type cattle_vaccinationsUncheckedCreateNestedManyWithoutCattlesInput = {
    create?: XOR<cattle_vaccinationsCreateWithoutCattlesInput, cattle_vaccinationsUncheckedCreateWithoutCattlesInput> | cattle_vaccinationsCreateWithoutCattlesInput[] | cattle_vaccinationsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_vaccinationsCreateOrConnectWithoutCattlesInput | cattle_vaccinationsCreateOrConnectWithoutCattlesInput[]
    createMany?: cattle_vaccinationsCreateManyCattlesInputEnvelope
    connect?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
  }

  export type cattlesUpdatecattle_breed_idsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdateear_tagInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdatebreed_sireInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdatebreed_damInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdatebreed_pgsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdatebreed_pgdInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdatebreed_mgsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattlesUpdatebreed_mgdInput = {
    set?: string[]
    push?: string | string[]
  }

  export type cattle_attachmentsUpdateManyWithoutCattlesNestedInput = {
    create?: XOR<cattle_attachmentsCreateWithoutCattlesInput, cattle_attachmentsUncheckedCreateWithoutCattlesInput> | cattle_attachmentsCreateWithoutCattlesInput[] | cattle_attachmentsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_attachmentsCreateOrConnectWithoutCattlesInput | cattle_attachmentsCreateOrConnectWithoutCattlesInput[]
    upsert?: cattle_attachmentsUpsertWithWhereUniqueWithoutCattlesInput | cattle_attachmentsUpsertWithWhereUniqueWithoutCattlesInput[]
    createMany?: cattle_attachmentsCreateManyCattlesInputEnvelope
    set?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    disconnect?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    delete?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    connect?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    update?: cattle_attachmentsUpdateWithWhereUniqueWithoutCattlesInput | cattle_attachmentsUpdateWithWhereUniqueWithoutCattlesInput[]
    updateMany?: cattle_attachmentsUpdateManyWithWhereWithoutCattlesInput | cattle_attachmentsUpdateManyWithWhereWithoutCattlesInput[]
    deleteMany?: cattle_attachmentsScalarWhereInput | cattle_attachmentsScalarWhereInput[]
  }

  export type cattle_healthsUpdateManyWithoutCattlesNestedInput = {
    create?: XOR<cattle_healthsCreateWithoutCattlesInput, cattle_healthsUncheckedCreateWithoutCattlesInput> | cattle_healthsCreateWithoutCattlesInput[] | cattle_healthsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_healthsCreateOrConnectWithoutCattlesInput | cattle_healthsCreateOrConnectWithoutCattlesInput[]
    upsert?: cattle_healthsUpsertWithWhereUniqueWithoutCattlesInput | cattle_healthsUpsertWithWhereUniqueWithoutCattlesInput[]
    createMany?: cattle_healthsCreateManyCattlesInputEnvelope
    set?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    disconnect?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    delete?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    connect?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    update?: cattle_healthsUpdateWithWhereUniqueWithoutCattlesInput | cattle_healthsUpdateWithWhereUniqueWithoutCattlesInput[]
    updateMany?: cattle_healthsUpdateManyWithWhereWithoutCattlesInput | cattle_healthsUpdateManyWithWhereWithoutCattlesInput[]
    deleteMany?: cattle_healthsScalarWhereInput | cattle_healthsScalarWhereInput[]
  }

  export type cattle_vaccinationsUpdateManyWithoutCattlesNestedInput = {
    create?: XOR<cattle_vaccinationsCreateWithoutCattlesInput, cattle_vaccinationsUncheckedCreateWithoutCattlesInput> | cattle_vaccinationsCreateWithoutCattlesInput[] | cattle_vaccinationsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_vaccinationsCreateOrConnectWithoutCattlesInput | cattle_vaccinationsCreateOrConnectWithoutCattlesInput[]
    upsert?: cattle_vaccinationsUpsertWithWhereUniqueWithoutCattlesInput | cattle_vaccinationsUpsertWithWhereUniqueWithoutCattlesInput[]
    createMany?: cattle_vaccinationsCreateManyCattlesInputEnvelope
    set?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    disconnect?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    delete?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    connect?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    update?: cattle_vaccinationsUpdateWithWhereUniqueWithoutCattlesInput | cattle_vaccinationsUpdateWithWhereUniqueWithoutCattlesInput[]
    updateMany?: cattle_vaccinationsUpdateManyWithWhereWithoutCattlesInput | cattle_vaccinationsUpdateManyWithWhereWithoutCattlesInput[]
    deleteMany?: cattle_vaccinationsScalarWhereInput | cattle_vaccinationsScalarWhereInput[]
  }

  export type farmsUpdateOneRequiredWithoutCattlesNestedInput = {
    create?: XOR<farmsCreateWithoutCattlesInput, farmsUncheckedCreateWithoutCattlesInput>
    connectOrCreate?: farmsCreateOrConnectWithoutCattlesInput
    upsert?: farmsUpsertWithoutCattlesInput
    connect?: farmsWhereUniqueInput
    update?: XOR<XOR<farmsUpdateToOneWithWhereWithoutCattlesInput, farmsUpdateWithoutCattlesInput>, farmsUncheckedUpdateWithoutCattlesInput>
  }

  export type pensUpdateOneRequiredWithoutCattlesNestedInput = {
    create?: XOR<pensCreateWithoutCattlesInput, pensUncheckedCreateWithoutCattlesInput>
    connectOrCreate?: pensCreateOrConnectWithoutCattlesInput
    upsert?: pensUpsertWithoutCattlesInput
    connect?: pensWhereUniqueInput
    update?: XOR<XOR<pensUpdateToOneWithWhereWithoutCattlesInput, pensUpdateWithoutCattlesInput>, pensUncheckedUpdateWithoutCattlesInput>
  }

  export type cattle_attachmentsUncheckedUpdateManyWithoutCattlesNestedInput = {
    create?: XOR<cattle_attachmentsCreateWithoutCattlesInput, cattle_attachmentsUncheckedCreateWithoutCattlesInput> | cattle_attachmentsCreateWithoutCattlesInput[] | cattle_attachmentsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_attachmentsCreateOrConnectWithoutCattlesInput | cattle_attachmentsCreateOrConnectWithoutCattlesInput[]
    upsert?: cattle_attachmentsUpsertWithWhereUniqueWithoutCattlesInput | cattle_attachmentsUpsertWithWhereUniqueWithoutCattlesInput[]
    createMany?: cattle_attachmentsCreateManyCattlesInputEnvelope
    set?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    disconnect?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    delete?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    connect?: cattle_attachmentsWhereUniqueInput | cattle_attachmentsWhereUniqueInput[]
    update?: cattle_attachmentsUpdateWithWhereUniqueWithoutCattlesInput | cattle_attachmentsUpdateWithWhereUniqueWithoutCattlesInput[]
    updateMany?: cattle_attachmentsUpdateManyWithWhereWithoutCattlesInput | cattle_attachmentsUpdateManyWithWhereWithoutCattlesInput[]
    deleteMany?: cattle_attachmentsScalarWhereInput | cattle_attachmentsScalarWhereInput[]
  }

  export type cattle_healthsUncheckedUpdateManyWithoutCattlesNestedInput = {
    create?: XOR<cattle_healthsCreateWithoutCattlesInput, cattle_healthsUncheckedCreateWithoutCattlesInput> | cattle_healthsCreateWithoutCattlesInput[] | cattle_healthsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_healthsCreateOrConnectWithoutCattlesInput | cattle_healthsCreateOrConnectWithoutCattlesInput[]
    upsert?: cattle_healthsUpsertWithWhereUniqueWithoutCattlesInput | cattle_healthsUpsertWithWhereUniqueWithoutCattlesInput[]
    createMany?: cattle_healthsCreateManyCattlesInputEnvelope
    set?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    disconnect?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    delete?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    connect?: cattle_healthsWhereUniqueInput | cattle_healthsWhereUniqueInput[]
    update?: cattle_healthsUpdateWithWhereUniqueWithoutCattlesInput | cattle_healthsUpdateWithWhereUniqueWithoutCattlesInput[]
    updateMany?: cattle_healthsUpdateManyWithWhereWithoutCattlesInput | cattle_healthsUpdateManyWithWhereWithoutCattlesInput[]
    deleteMany?: cattle_healthsScalarWhereInput | cattle_healthsScalarWhereInput[]
  }

  export type cattle_vaccinationsUncheckedUpdateManyWithoutCattlesNestedInput = {
    create?: XOR<cattle_vaccinationsCreateWithoutCattlesInput, cattle_vaccinationsUncheckedCreateWithoutCattlesInput> | cattle_vaccinationsCreateWithoutCattlesInput[] | cattle_vaccinationsUncheckedCreateWithoutCattlesInput[]
    connectOrCreate?: cattle_vaccinationsCreateOrConnectWithoutCattlesInput | cattle_vaccinationsCreateOrConnectWithoutCattlesInput[]
    upsert?: cattle_vaccinationsUpsertWithWhereUniqueWithoutCattlesInput | cattle_vaccinationsUpsertWithWhereUniqueWithoutCattlesInput[]
    createMany?: cattle_vaccinationsCreateManyCattlesInputEnvelope
    set?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    disconnect?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    delete?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    connect?: cattle_vaccinationsWhereUniqueInput | cattle_vaccinationsWhereUniqueInput[]
    update?: cattle_vaccinationsUpdateWithWhereUniqueWithoutCattlesInput | cattle_vaccinationsUpdateWithWhereUniqueWithoutCattlesInput[]
    updateMany?: cattle_vaccinationsUpdateManyWithWhereWithoutCattlesInput | cattle_vaccinationsUpdateManyWithWhereWithoutCattlesInput[]
    deleteMany?: cattle_vaccinationsScalarWhereInput | cattle_vaccinationsScalarWhereInput[]
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type farmsCreateNestedOneWithoutFarm_attachmentsInput = {
    create?: XOR<farmsCreateWithoutFarm_attachmentsInput, farmsUncheckedCreateWithoutFarm_attachmentsInput>
    connectOrCreate?: farmsCreateOrConnectWithoutFarm_attachmentsInput
    connect?: farmsWhereUniqueInput
  }

  export type farmsUpdateOneRequiredWithoutFarm_attachmentsNestedInput = {
    create?: XOR<farmsCreateWithoutFarm_attachmentsInput, farmsUncheckedCreateWithoutFarm_attachmentsInput>
    connectOrCreate?: farmsCreateOrConnectWithoutFarm_attachmentsInput
    upsert?: farmsUpsertWithoutFarm_attachmentsInput
    connect?: farmsWhereUniqueInput
    update?: XOR<XOR<farmsUpdateToOneWithWhereWithoutFarm_attachmentsInput, farmsUpdateWithoutFarm_attachmentsInput>, farmsUncheckedUpdateWithoutFarm_attachmentsInput>
  }

  export type farmsCreateNestedOneWithoutFarm_authorizedInput = {
    create?: XOR<farmsCreateWithoutFarm_authorizedInput, farmsUncheckedCreateWithoutFarm_authorizedInput>
    connectOrCreate?: farmsCreateOrConnectWithoutFarm_authorizedInput
    connect?: farmsWhereUniqueInput
  }

  export type farmsUpdateOneRequiredWithoutFarm_authorizedNestedInput = {
    create?: XOR<farmsCreateWithoutFarm_authorizedInput, farmsUncheckedCreateWithoutFarm_authorizedInput>
    connectOrCreate?: farmsCreateOrConnectWithoutFarm_authorizedInput
    upsert?: farmsUpsertWithoutFarm_authorizedInput
    connect?: farmsWhereUniqueInput
    update?: XOR<XOR<farmsUpdateToOneWithWhereWithoutFarm_authorizedInput, farmsUpdateWithoutFarm_authorizedInput>, farmsUncheckedUpdateWithoutFarm_authorizedInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type cattle_sourcingCreateNestedManyWithoutFarm_sourcingInput = {
    create?: XOR<cattle_sourcingCreateWithoutFarm_sourcingInput, cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput> | cattle_sourcingCreateWithoutFarm_sourcingInput[] | cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput[]
    connectOrCreate?: cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput | cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput[]
    createMany?: cattle_sourcingCreateManyFarm_sourcingInputEnvelope
    connect?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
  }

  export type cattle_sourcingUncheckedCreateNestedManyWithoutFarm_sourcingInput = {
    create?: XOR<cattle_sourcingCreateWithoutFarm_sourcingInput, cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput> | cattle_sourcingCreateWithoutFarm_sourcingInput[] | cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput[]
    connectOrCreate?: cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput | cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput[]
    createMany?: cattle_sourcingCreateManyFarm_sourcingInputEnvelope
    connect?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
  }

  export type cattle_sourcingUpdateManyWithoutFarm_sourcingNestedInput = {
    create?: XOR<cattle_sourcingCreateWithoutFarm_sourcingInput, cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput> | cattle_sourcingCreateWithoutFarm_sourcingInput[] | cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput[]
    connectOrCreate?: cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput | cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput[]
    upsert?: cattle_sourcingUpsertWithWhereUniqueWithoutFarm_sourcingInput | cattle_sourcingUpsertWithWhereUniqueWithoutFarm_sourcingInput[]
    createMany?: cattle_sourcingCreateManyFarm_sourcingInputEnvelope
    set?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    disconnect?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    delete?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    connect?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    update?: cattle_sourcingUpdateWithWhereUniqueWithoutFarm_sourcingInput | cattle_sourcingUpdateWithWhereUniqueWithoutFarm_sourcingInput[]
    updateMany?: cattle_sourcingUpdateManyWithWhereWithoutFarm_sourcingInput | cattle_sourcingUpdateManyWithWhereWithoutFarm_sourcingInput[]
    deleteMany?: cattle_sourcingScalarWhereInput | cattle_sourcingScalarWhereInput[]
  }

  export type cattle_sourcingUncheckedUpdateManyWithoutFarm_sourcingNestedInput = {
    create?: XOR<cattle_sourcingCreateWithoutFarm_sourcingInput, cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput> | cattle_sourcingCreateWithoutFarm_sourcingInput[] | cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput[]
    connectOrCreate?: cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput | cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput[]
    upsert?: cattle_sourcingUpsertWithWhereUniqueWithoutFarm_sourcingInput | cattle_sourcingUpsertWithWhereUniqueWithoutFarm_sourcingInput[]
    createMany?: cattle_sourcingCreateManyFarm_sourcingInputEnvelope
    set?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    disconnect?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    delete?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    connect?: cattle_sourcingWhereUniqueInput | cattle_sourcingWhereUniqueInput[]
    update?: cattle_sourcingUpdateWithWhereUniqueWithoutFarm_sourcingInput | cattle_sourcingUpdateWithWhereUniqueWithoutFarm_sourcingInput[]
    updateMany?: cattle_sourcingUpdateManyWithWhereWithoutFarm_sourcingInput | cattle_sourcingUpdateManyWithWhereWithoutFarm_sourcingInput[]
    deleteMany?: cattle_sourcingScalarWhereInput | cattle_sourcingScalarWhereInput[]
  }

  export type farmsCreateNestedOneWithoutFarm_veterinaryInput = {
    create?: XOR<farmsCreateWithoutFarm_veterinaryInput, farmsUncheckedCreateWithoutFarm_veterinaryInput>
    connectOrCreate?: farmsCreateOrConnectWithoutFarm_veterinaryInput
    connect?: farmsWhereUniqueInput
  }

  export type farmsUpdateOneRequiredWithoutFarm_veterinaryNestedInput = {
    create?: XOR<farmsCreateWithoutFarm_veterinaryInput, farmsUncheckedCreateWithoutFarm_veterinaryInput>
    connectOrCreate?: farmsCreateOrConnectWithoutFarm_veterinaryInput
    upsert?: farmsUpsertWithoutFarm_veterinaryInput
    connect?: farmsWhereUniqueInput
    update?: XOR<XOR<farmsUpdateToOneWithWhereWithoutFarm_veterinaryInput, farmsUpdateWithoutFarm_veterinaryInput>, farmsUncheckedUpdateWithoutFarm_veterinaryInput>
  }

  export type farmer_accountsCreatepermissionsInput = {
    set: string[]
  }

  export type farmersCreateNestedOneWithoutFarmer_accountsInput = {
    create?: XOR<farmersCreateWithoutFarmer_accountsInput, farmersUncheckedCreateWithoutFarmer_accountsInput>
    connectOrCreate?: farmersCreateOrConnectWithoutFarmer_accountsInput
    connect?: farmersWhereUniqueInput
  }

  export type farmer_accountsUpdatepermissionsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type farmersUpdateOneRequiredWithoutFarmer_accountsNestedInput = {
    create?: XOR<farmersCreateWithoutFarmer_accountsInput, farmersUncheckedCreateWithoutFarmer_accountsInput>
    connectOrCreate?: farmersCreateOrConnectWithoutFarmer_accountsInput
    upsert?: farmersUpsertWithoutFarmer_accountsInput
    connect?: farmersWhereUniqueInput
    update?: XOR<XOR<farmersUpdateToOneWithWhereWithoutFarmer_accountsInput, farmersUpdateWithoutFarmer_accountsInput>, farmersUncheckedUpdateWithoutFarmer_accountsInput>
  }

  export type farmersCreateNestedOneWithoutFarmer_attachmentsInput = {
    create?: XOR<farmersCreateWithoutFarmer_attachmentsInput, farmersUncheckedCreateWithoutFarmer_attachmentsInput>
    connectOrCreate?: farmersCreateOrConnectWithoutFarmer_attachmentsInput
    connect?: farmersWhereUniqueInput
  }

  export type farmersUpdateOneRequiredWithoutFarmer_attachmentsNestedInput = {
    create?: XOR<farmersCreateWithoutFarmer_attachmentsInput, farmersUncheckedCreateWithoutFarmer_attachmentsInput>
    connectOrCreate?: farmersCreateOrConnectWithoutFarmer_attachmentsInput
    upsert?: farmersUpsertWithoutFarmer_attachmentsInput
    connect?: farmersWhereUniqueInput
    update?: XOR<XOR<farmersUpdateToOneWithWhereWithoutFarmer_attachmentsInput, farmersUpdateWithoutFarmer_attachmentsInput>, farmersUncheckedUpdateWithoutFarmer_attachmentsInput>
  }

  export type farmer_accountsCreateNestedManyWithoutFarmersInput = {
    create?: XOR<farmer_accountsCreateWithoutFarmersInput, farmer_accountsUncheckedCreateWithoutFarmersInput> | farmer_accountsCreateWithoutFarmersInput[] | farmer_accountsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_accountsCreateOrConnectWithoutFarmersInput | farmer_accountsCreateOrConnectWithoutFarmersInput[]
    createMany?: farmer_accountsCreateManyFarmersInputEnvelope
    connect?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
  }

  export type farmer_attachmentsCreateNestedManyWithoutFarmersInput = {
    create?: XOR<farmer_attachmentsCreateWithoutFarmersInput, farmer_attachmentsUncheckedCreateWithoutFarmersInput> | farmer_attachmentsCreateWithoutFarmersInput[] | farmer_attachmentsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_attachmentsCreateOrConnectWithoutFarmersInput | farmer_attachmentsCreateOrConnectWithoutFarmersInput[]
    createMany?: farmer_attachmentsCreateManyFarmersInputEnvelope
    connect?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
  }

  export type farmer_accountsUncheckedCreateNestedManyWithoutFarmersInput = {
    create?: XOR<farmer_accountsCreateWithoutFarmersInput, farmer_accountsUncheckedCreateWithoutFarmersInput> | farmer_accountsCreateWithoutFarmersInput[] | farmer_accountsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_accountsCreateOrConnectWithoutFarmersInput | farmer_accountsCreateOrConnectWithoutFarmersInput[]
    createMany?: farmer_accountsCreateManyFarmersInputEnvelope
    connect?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
  }

  export type farmer_attachmentsUncheckedCreateNestedManyWithoutFarmersInput = {
    create?: XOR<farmer_attachmentsCreateWithoutFarmersInput, farmer_attachmentsUncheckedCreateWithoutFarmersInput> | farmer_attachmentsCreateWithoutFarmersInput[] | farmer_attachmentsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_attachmentsCreateOrConnectWithoutFarmersInput | farmer_attachmentsCreateOrConnectWithoutFarmersInput[]
    createMany?: farmer_attachmentsCreateManyFarmersInputEnvelope
    connect?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
  }

  export type farmer_accountsUpdateManyWithoutFarmersNestedInput = {
    create?: XOR<farmer_accountsCreateWithoutFarmersInput, farmer_accountsUncheckedCreateWithoutFarmersInput> | farmer_accountsCreateWithoutFarmersInput[] | farmer_accountsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_accountsCreateOrConnectWithoutFarmersInput | farmer_accountsCreateOrConnectWithoutFarmersInput[]
    upsert?: farmer_accountsUpsertWithWhereUniqueWithoutFarmersInput | farmer_accountsUpsertWithWhereUniqueWithoutFarmersInput[]
    createMany?: farmer_accountsCreateManyFarmersInputEnvelope
    set?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    disconnect?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    delete?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    connect?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    update?: farmer_accountsUpdateWithWhereUniqueWithoutFarmersInput | farmer_accountsUpdateWithWhereUniqueWithoutFarmersInput[]
    updateMany?: farmer_accountsUpdateManyWithWhereWithoutFarmersInput | farmer_accountsUpdateManyWithWhereWithoutFarmersInput[]
    deleteMany?: farmer_accountsScalarWhereInput | farmer_accountsScalarWhereInput[]
  }

  export type farmer_attachmentsUpdateManyWithoutFarmersNestedInput = {
    create?: XOR<farmer_attachmentsCreateWithoutFarmersInput, farmer_attachmentsUncheckedCreateWithoutFarmersInput> | farmer_attachmentsCreateWithoutFarmersInput[] | farmer_attachmentsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_attachmentsCreateOrConnectWithoutFarmersInput | farmer_attachmentsCreateOrConnectWithoutFarmersInput[]
    upsert?: farmer_attachmentsUpsertWithWhereUniqueWithoutFarmersInput | farmer_attachmentsUpsertWithWhereUniqueWithoutFarmersInput[]
    createMany?: farmer_attachmentsCreateManyFarmersInputEnvelope
    set?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    disconnect?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    delete?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    connect?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    update?: farmer_attachmentsUpdateWithWhereUniqueWithoutFarmersInput | farmer_attachmentsUpdateWithWhereUniqueWithoutFarmersInput[]
    updateMany?: farmer_attachmentsUpdateManyWithWhereWithoutFarmersInput | farmer_attachmentsUpdateManyWithWhereWithoutFarmersInput[]
    deleteMany?: farmer_attachmentsScalarWhereInput | farmer_attachmentsScalarWhereInput[]
  }

  export type farmer_accountsUncheckedUpdateManyWithoutFarmersNestedInput = {
    create?: XOR<farmer_accountsCreateWithoutFarmersInput, farmer_accountsUncheckedCreateWithoutFarmersInput> | farmer_accountsCreateWithoutFarmersInput[] | farmer_accountsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_accountsCreateOrConnectWithoutFarmersInput | farmer_accountsCreateOrConnectWithoutFarmersInput[]
    upsert?: farmer_accountsUpsertWithWhereUniqueWithoutFarmersInput | farmer_accountsUpsertWithWhereUniqueWithoutFarmersInput[]
    createMany?: farmer_accountsCreateManyFarmersInputEnvelope
    set?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    disconnect?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    delete?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    connect?: farmer_accountsWhereUniqueInput | farmer_accountsWhereUniqueInput[]
    update?: farmer_accountsUpdateWithWhereUniqueWithoutFarmersInput | farmer_accountsUpdateWithWhereUniqueWithoutFarmersInput[]
    updateMany?: farmer_accountsUpdateManyWithWhereWithoutFarmersInput | farmer_accountsUpdateManyWithWhereWithoutFarmersInput[]
    deleteMany?: farmer_accountsScalarWhereInput | farmer_accountsScalarWhereInput[]
  }

  export type farmer_attachmentsUncheckedUpdateManyWithoutFarmersNestedInput = {
    create?: XOR<farmer_attachmentsCreateWithoutFarmersInput, farmer_attachmentsUncheckedCreateWithoutFarmersInput> | farmer_attachmentsCreateWithoutFarmersInput[] | farmer_attachmentsUncheckedCreateWithoutFarmersInput[]
    connectOrCreate?: farmer_attachmentsCreateOrConnectWithoutFarmersInput | farmer_attachmentsCreateOrConnectWithoutFarmersInput[]
    upsert?: farmer_attachmentsUpsertWithWhereUniqueWithoutFarmersInput | farmer_attachmentsUpsertWithWhereUniqueWithoutFarmersInput[]
    createMany?: farmer_attachmentsCreateManyFarmersInputEnvelope
    set?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    disconnect?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    delete?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    connect?: farmer_attachmentsWhereUniqueInput | farmer_attachmentsWhereUniqueInput[]
    update?: farmer_attachmentsUpdateWithWhereUniqueWithoutFarmersInput | farmer_attachmentsUpdateWithWhereUniqueWithoutFarmersInput[]
    updateMany?: farmer_attachmentsUpdateManyWithWhereWithoutFarmersInput | farmer_attachmentsUpdateManyWithWhereWithoutFarmersInput[]
    deleteMany?: farmer_attachmentsScalarWhereInput | farmer_attachmentsScalarWhereInput[]
  }

  export type cattlesCreateNestedManyWithoutFarmsInput = {
    create?: XOR<cattlesCreateWithoutFarmsInput, cattlesUncheckedCreateWithoutFarmsInput> | cattlesCreateWithoutFarmsInput[] | cattlesUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutFarmsInput | cattlesCreateOrConnectWithoutFarmsInput[]
    createMany?: cattlesCreateManyFarmsInputEnvelope
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
  }

  export type farm_attachmentsCreateNestedManyWithoutFarmsInput = {
    create?: XOR<farm_attachmentsCreateWithoutFarmsInput, farm_attachmentsUncheckedCreateWithoutFarmsInput> | farm_attachmentsCreateWithoutFarmsInput[] | farm_attachmentsUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_attachmentsCreateOrConnectWithoutFarmsInput | farm_attachmentsCreateOrConnectWithoutFarmsInput[]
    createMany?: farm_attachmentsCreateManyFarmsInputEnvelope
    connect?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
  }

  export type farm_authorizedCreateNestedManyWithoutFarmsInput = {
    create?: XOR<farm_authorizedCreateWithoutFarmsInput, farm_authorizedUncheckedCreateWithoutFarmsInput> | farm_authorizedCreateWithoutFarmsInput[] | farm_authorizedUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_authorizedCreateOrConnectWithoutFarmsInput | farm_authorizedCreateOrConnectWithoutFarmsInput[]
    createMany?: farm_authorizedCreateManyFarmsInputEnvelope
    connect?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
  }

  export type farm_veterinaryCreateNestedManyWithoutFarmsInput = {
    create?: XOR<farm_veterinaryCreateWithoutFarmsInput, farm_veterinaryUncheckedCreateWithoutFarmsInput> | farm_veterinaryCreateWithoutFarmsInput[] | farm_veterinaryUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_veterinaryCreateOrConnectWithoutFarmsInput | farm_veterinaryCreateOrConnectWithoutFarmsInput[]
    createMany?: farm_veterinaryCreateManyFarmsInputEnvelope
    connect?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
  }

  export type pensCreateNestedManyWithoutFarmsInput = {
    create?: XOR<pensCreateWithoutFarmsInput, pensUncheckedCreateWithoutFarmsInput> | pensCreateWithoutFarmsInput[] | pensUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: pensCreateOrConnectWithoutFarmsInput | pensCreateOrConnectWithoutFarmsInput[]
    createMany?: pensCreateManyFarmsInputEnvelope
    connect?: pensWhereUniqueInput | pensWhereUniqueInput[]
  }

  export type cattlesUncheckedCreateNestedManyWithoutFarmsInput = {
    create?: XOR<cattlesCreateWithoutFarmsInput, cattlesUncheckedCreateWithoutFarmsInput> | cattlesCreateWithoutFarmsInput[] | cattlesUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutFarmsInput | cattlesCreateOrConnectWithoutFarmsInput[]
    createMany?: cattlesCreateManyFarmsInputEnvelope
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
  }

  export type farm_attachmentsUncheckedCreateNestedManyWithoutFarmsInput = {
    create?: XOR<farm_attachmentsCreateWithoutFarmsInput, farm_attachmentsUncheckedCreateWithoutFarmsInput> | farm_attachmentsCreateWithoutFarmsInput[] | farm_attachmentsUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_attachmentsCreateOrConnectWithoutFarmsInput | farm_attachmentsCreateOrConnectWithoutFarmsInput[]
    createMany?: farm_attachmentsCreateManyFarmsInputEnvelope
    connect?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
  }

  export type farm_authorizedUncheckedCreateNestedManyWithoutFarmsInput = {
    create?: XOR<farm_authorizedCreateWithoutFarmsInput, farm_authorizedUncheckedCreateWithoutFarmsInput> | farm_authorizedCreateWithoutFarmsInput[] | farm_authorizedUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_authorizedCreateOrConnectWithoutFarmsInput | farm_authorizedCreateOrConnectWithoutFarmsInput[]
    createMany?: farm_authorizedCreateManyFarmsInputEnvelope
    connect?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
  }

  export type farm_veterinaryUncheckedCreateNestedManyWithoutFarmsInput = {
    create?: XOR<farm_veterinaryCreateWithoutFarmsInput, farm_veterinaryUncheckedCreateWithoutFarmsInput> | farm_veterinaryCreateWithoutFarmsInput[] | farm_veterinaryUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_veterinaryCreateOrConnectWithoutFarmsInput | farm_veterinaryCreateOrConnectWithoutFarmsInput[]
    createMany?: farm_veterinaryCreateManyFarmsInputEnvelope
    connect?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
  }

  export type pensUncheckedCreateNestedManyWithoutFarmsInput = {
    create?: XOR<pensCreateWithoutFarmsInput, pensUncheckedCreateWithoutFarmsInput> | pensCreateWithoutFarmsInput[] | pensUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: pensCreateOrConnectWithoutFarmsInput | pensCreateOrConnectWithoutFarmsInput[]
    createMany?: pensCreateManyFarmsInputEnvelope
    connect?: pensWhereUniqueInput | pensWhereUniqueInput[]
  }

  export type cattlesUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<cattlesCreateWithoutFarmsInput, cattlesUncheckedCreateWithoutFarmsInput> | cattlesCreateWithoutFarmsInput[] | cattlesUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutFarmsInput | cattlesCreateOrConnectWithoutFarmsInput[]
    upsert?: cattlesUpsertWithWhereUniqueWithoutFarmsInput | cattlesUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: cattlesCreateManyFarmsInputEnvelope
    set?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    disconnect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    delete?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    update?: cattlesUpdateWithWhereUniqueWithoutFarmsInput | cattlesUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: cattlesUpdateManyWithWhereWithoutFarmsInput | cattlesUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: cattlesScalarWhereInput | cattlesScalarWhereInput[]
  }

  export type farm_attachmentsUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<farm_attachmentsCreateWithoutFarmsInput, farm_attachmentsUncheckedCreateWithoutFarmsInput> | farm_attachmentsCreateWithoutFarmsInput[] | farm_attachmentsUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_attachmentsCreateOrConnectWithoutFarmsInput | farm_attachmentsCreateOrConnectWithoutFarmsInput[]
    upsert?: farm_attachmentsUpsertWithWhereUniqueWithoutFarmsInput | farm_attachmentsUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: farm_attachmentsCreateManyFarmsInputEnvelope
    set?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    disconnect?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    delete?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    connect?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    update?: farm_attachmentsUpdateWithWhereUniqueWithoutFarmsInput | farm_attachmentsUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: farm_attachmentsUpdateManyWithWhereWithoutFarmsInput | farm_attachmentsUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: farm_attachmentsScalarWhereInput | farm_attachmentsScalarWhereInput[]
  }

  export type farm_authorizedUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<farm_authorizedCreateWithoutFarmsInput, farm_authorizedUncheckedCreateWithoutFarmsInput> | farm_authorizedCreateWithoutFarmsInput[] | farm_authorizedUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_authorizedCreateOrConnectWithoutFarmsInput | farm_authorizedCreateOrConnectWithoutFarmsInput[]
    upsert?: farm_authorizedUpsertWithWhereUniqueWithoutFarmsInput | farm_authorizedUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: farm_authorizedCreateManyFarmsInputEnvelope
    set?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    disconnect?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    delete?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    connect?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    update?: farm_authorizedUpdateWithWhereUniqueWithoutFarmsInput | farm_authorizedUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: farm_authorizedUpdateManyWithWhereWithoutFarmsInput | farm_authorizedUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: farm_authorizedScalarWhereInput | farm_authorizedScalarWhereInput[]
  }

  export type farm_veterinaryUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<farm_veterinaryCreateWithoutFarmsInput, farm_veterinaryUncheckedCreateWithoutFarmsInput> | farm_veterinaryCreateWithoutFarmsInput[] | farm_veterinaryUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_veterinaryCreateOrConnectWithoutFarmsInput | farm_veterinaryCreateOrConnectWithoutFarmsInput[]
    upsert?: farm_veterinaryUpsertWithWhereUniqueWithoutFarmsInput | farm_veterinaryUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: farm_veterinaryCreateManyFarmsInputEnvelope
    set?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    disconnect?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    delete?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    connect?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    update?: farm_veterinaryUpdateWithWhereUniqueWithoutFarmsInput | farm_veterinaryUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: farm_veterinaryUpdateManyWithWhereWithoutFarmsInput | farm_veterinaryUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: farm_veterinaryScalarWhereInput | farm_veterinaryScalarWhereInput[]
  }

  export type pensUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<pensCreateWithoutFarmsInput, pensUncheckedCreateWithoutFarmsInput> | pensCreateWithoutFarmsInput[] | pensUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: pensCreateOrConnectWithoutFarmsInput | pensCreateOrConnectWithoutFarmsInput[]
    upsert?: pensUpsertWithWhereUniqueWithoutFarmsInput | pensUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: pensCreateManyFarmsInputEnvelope
    set?: pensWhereUniqueInput | pensWhereUniqueInput[]
    disconnect?: pensWhereUniqueInput | pensWhereUniqueInput[]
    delete?: pensWhereUniqueInput | pensWhereUniqueInput[]
    connect?: pensWhereUniqueInput | pensWhereUniqueInput[]
    update?: pensUpdateWithWhereUniqueWithoutFarmsInput | pensUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: pensUpdateManyWithWhereWithoutFarmsInput | pensUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: pensScalarWhereInput | pensScalarWhereInput[]
  }

  export type cattlesUncheckedUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<cattlesCreateWithoutFarmsInput, cattlesUncheckedCreateWithoutFarmsInput> | cattlesCreateWithoutFarmsInput[] | cattlesUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutFarmsInput | cattlesCreateOrConnectWithoutFarmsInput[]
    upsert?: cattlesUpsertWithWhereUniqueWithoutFarmsInput | cattlesUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: cattlesCreateManyFarmsInputEnvelope
    set?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    disconnect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    delete?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    update?: cattlesUpdateWithWhereUniqueWithoutFarmsInput | cattlesUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: cattlesUpdateManyWithWhereWithoutFarmsInput | cattlesUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: cattlesScalarWhereInput | cattlesScalarWhereInput[]
  }

  export type farm_attachmentsUncheckedUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<farm_attachmentsCreateWithoutFarmsInput, farm_attachmentsUncheckedCreateWithoutFarmsInput> | farm_attachmentsCreateWithoutFarmsInput[] | farm_attachmentsUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_attachmentsCreateOrConnectWithoutFarmsInput | farm_attachmentsCreateOrConnectWithoutFarmsInput[]
    upsert?: farm_attachmentsUpsertWithWhereUniqueWithoutFarmsInput | farm_attachmentsUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: farm_attachmentsCreateManyFarmsInputEnvelope
    set?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    disconnect?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    delete?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    connect?: farm_attachmentsWhereUniqueInput | farm_attachmentsWhereUniqueInput[]
    update?: farm_attachmentsUpdateWithWhereUniqueWithoutFarmsInput | farm_attachmentsUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: farm_attachmentsUpdateManyWithWhereWithoutFarmsInput | farm_attachmentsUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: farm_attachmentsScalarWhereInput | farm_attachmentsScalarWhereInput[]
  }

  export type farm_authorizedUncheckedUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<farm_authorizedCreateWithoutFarmsInput, farm_authorizedUncheckedCreateWithoutFarmsInput> | farm_authorizedCreateWithoutFarmsInput[] | farm_authorizedUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_authorizedCreateOrConnectWithoutFarmsInput | farm_authorizedCreateOrConnectWithoutFarmsInput[]
    upsert?: farm_authorizedUpsertWithWhereUniqueWithoutFarmsInput | farm_authorizedUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: farm_authorizedCreateManyFarmsInputEnvelope
    set?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    disconnect?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    delete?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    connect?: farm_authorizedWhereUniqueInput | farm_authorizedWhereUniqueInput[]
    update?: farm_authorizedUpdateWithWhereUniqueWithoutFarmsInput | farm_authorizedUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: farm_authorizedUpdateManyWithWhereWithoutFarmsInput | farm_authorizedUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: farm_authorizedScalarWhereInput | farm_authorizedScalarWhereInput[]
  }

  export type farm_veterinaryUncheckedUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<farm_veterinaryCreateWithoutFarmsInput, farm_veterinaryUncheckedCreateWithoutFarmsInput> | farm_veterinaryCreateWithoutFarmsInput[] | farm_veterinaryUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: farm_veterinaryCreateOrConnectWithoutFarmsInput | farm_veterinaryCreateOrConnectWithoutFarmsInput[]
    upsert?: farm_veterinaryUpsertWithWhereUniqueWithoutFarmsInput | farm_veterinaryUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: farm_veterinaryCreateManyFarmsInputEnvelope
    set?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    disconnect?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    delete?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    connect?: farm_veterinaryWhereUniqueInput | farm_veterinaryWhereUniqueInput[]
    update?: farm_veterinaryUpdateWithWhereUniqueWithoutFarmsInput | farm_veterinaryUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: farm_veterinaryUpdateManyWithWhereWithoutFarmsInput | farm_veterinaryUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: farm_veterinaryScalarWhereInput | farm_veterinaryScalarWhereInput[]
  }

  export type pensUncheckedUpdateManyWithoutFarmsNestedInput = {
    create?: XOR<pensCreateWithoutFarmsInput, pensUncheckedCreateWithoutFarmsInput> | pensCreateWithoutFarmsInput[] | pensUncheckedCreateWithoutFarmsInput[]
    connectOrCreate?: pensCreateOrConnectWithoutFarmsInput | pensCreateOrConnectWithoutFarmsInput[]
    upsert?: pensUpsertWithWhereUniqueWithoutFarmsInput | pensUpsertWithWhereUniqueWithoutFarmsInput[]
    createMany?: pensCreateManyFarmsInputEnvelope
    set?: pensWhereUniqueInput | pensWhereUniqueInput[]
    disconnect?: pensWhereUniqueInput | pensWhereUniqueInput[]
    delete?: pensWhereUniqueInput | pensWhereUniqueInput[]
    connect?: pensWhereUniqueInput | pensWhereUniqueInput[]
    update?: pensUpdateWithWhereUniqueWithoutFarmsInput | pensUpdateWithWhereUniqueWithoutFarmsInput[]
    updateMany?: pensUpdateManyWithWhereWithoutFarmsInput | pensUpdateManyWithWhereWithoutFarmsInput[]
    deleteMany?: pensScalarWhereInput | pensScalarWhereInput[]
  }

  export type ordersCreateNestedOneWithoutOrder_attachmentsInput = {
    create?: XOR<ordersCreateWithoutOrder_attachmentsInput, ordersUncheckedCreateWithoutOrder_attachmentsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_attachmentsInput
    connect?: ordersWhereUniqueInput
  }

  export type ordersUpdateOneRequiredWithoutOrder_attachmentsNestedInput = {
    create?: XOR<ordersCreateWithoutOrder_attachmentsInput, ordersUncheckedCreateWithoutOrder_attachmentsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_attachmentsInput
    upsert?: ordersUpsertWithoutOrder_attachmentsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutOrder_attachmentsInput, ordersUpdateWithoutOrder_attachmentsInput>, ordersUncheckedUpdateWithoutOrder_attachmentsInput>
  }

  export type order_requestsCreatecattle_type_idsInput = {
    set: string[]
  }

  export type ordersCreateNestedOneWithoutOrder_requestsInput = {
    create?: XOR<ordersCreateWithoutOrder_requestsInput, ordersUncheckedCreateWithoutOrder_requestsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_requestsInput
    connect?: ordersWhereUniqueInput
  }

  export type order_requestsUpdatecattle_type_idsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ordersUpdateOneRequiredWithoutOrder_requestsNestedInput = {
    create?: XOR<ordersCreateWithoutOrder_requestsInput, ordersUncheckedCreateWithoutOrder_requestsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_requestsInput
    upsert?: ordersUpsertWithoutOrder_requestsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutOrder_requestsInput, ordersUpdateWithoutOrder_requestsInput>, ordersUncheckedUpdateWithoutOrder_requestsInput>
  }

  export type order_attachmentsCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_attachmentsCreateWithoutOrdersInput, order_attachmentsUncheckedCreateWithoutOrdersInput> | order_attachmentsCreateWithoutOrdersInput[] | order_attachmentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_attachmentsCreateOrConnectWithoutOrdersInput | order_attachmentsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_attachmentsCreateManyOrdersInputEnvelope
    connect?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
  }

  export type order_requestsCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_requestsCreateWithoutOrdersInput, order_requestsUncheckedCreateWithoutOrdersInput> | order_requestsCreateWithoutOrdersInput[] | order_requestsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_requestsCreateOrConnectWithoutOrdersInput | order_requestsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_requestsCreateManyOrdersInputEnvelope
    connect?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
  }

  export type order_attachmentsUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_attachmentsCreateWithoutOrdersInput, order_attachmentsUncheckedCreateWithoutOrdersInput> | order_attachmentsCreateWithoutOrdersInput[] | order_attachmentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_attachmentsCreateOrConnectWithoutOrdersInput | order_attachmentsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_attachmentsCreateManyOrdersInputEnvelope
    connect?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
  }

  export type order_requestsUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_requestsCreateWithoutOrdersInput, order_requestsUncheckedCreateWithoutOrdersInput> | order_requestsCreateWithoutOrdersInput[] | order_requestsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_requestsCreateOrConnectWithoutOrdersInput | order_requestsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_requestsCreateManyOrdersInputEnvelope
    connect?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
  }

  export type order_attachmentsUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_attachmentsCreateWithoutOrdersInput, order_attachmentsUncheckedCreateWithoutOrdersInput> | order_attachmentsCreateWithoutOrdersInput[] | order_attachmentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_attachmentsCreateOrConnectWithoutOrdersInput | order_attachmentsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_attachmentsUpsertWithWhereUniqueWithoutOrdersInput | order_attachmentsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_attachmentsCreateManyOrdersInputEnvelope
    set?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    disconnect?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    delete?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    connect?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    update?: order_attachmentsUpdateWithWhereUniqueWithoutOrdersInput | order_attachmentsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_attachmentsUpdateManyWithWhereWithoutOrdersInput | order_attachmentsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_attachmentsScalarWhereInput | order_attachmentsScalarWhereInput[]
  }

  export type order_requestsUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_requestsCreateWithoutOrdersInput, order_requestsUncheckedCreateWithoutOrdersInput> | order_requestsCreateWithoutOrdersInput[] | order_requestsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_requestsCreateOrConnectWithoutOrdersInput | order_requestsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_requestsUpsertWithWhereUniqueWithoutOrdersInput | order_requestsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_requestsCreateManyOrdersInputEnvelope
    set?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    disconnect?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    delete?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    connect?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    update?: order_requestsUpdateWithWhereUniqueWithoutOrdersInput | order_requestsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_requestsUpdateManyWithWhereWithoutOrdersInput | order_requestsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_requestsScalarWhereInput | order_requestsScalarWhereInput[]
  }

  export type order_attachmentsUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_attachmentsCreateWithoutOrdersInput, order_attachmentsUncheckedCreateWithoutOrdersInput> | order_attachmentsCreateWithoutOrdersInput[] | order_attachmentsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_attachmentsCreateOrConnectWithoutOrdersInput | order_attachmentsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_attachmentsUpsertWithWhereUniqueWithoutOrdersInput | order_attachmentsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_attachmentsCreateManyOrdersInputEnvelope
    set?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    disconnect?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    delete?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    connect?: order_attachmentsWhereUniqueInput | order_attachmentsWhereUniqueInput[]
    update?: order_attachmentsUpdateWithWhereUniqueWithoutOrdersInput | order_attachmentsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_attachmentsUpdateManyWithWhereWithoutOrdersInput | order_attachmentsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_attachmentsScalarWhereInput | order_attachmentsScalarWhereInput[]
  }

  export type order_requestsUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_requestsCreateWithoutOrdersInput, order_requestsUncheckedCreateWithoutOrdersInput> | order_requestsCreateWithoutOrdersInput[] | order_requestsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_requestsCreateOrConnectWithoutOrdersInput | order_requestsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_requestsUpsertWithWhereUniqueWithoutOrdersInput | order_requestsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_requestsCreateManyOrdersInputEnvelope
    set?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    disconnect?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    delete?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    connect?: order_requestsWhereUniqueInput | order_requestsWhereUniqueInput[]
    update?: order_requestsUpdateWithWhereUniqueWithoutOrdersInput | order_requestsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_requestsUpdateManyWithWhereWithoutOrdersInput | order_requestsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_requestsScalarWhereInput | order_requestsScalarWhereInput[]
  }

  export type pensCreateNestedOneWithoutPen_attachmentsInput = {
    create?: XOR<pensCreateWithoutPen_attachmentsInput, pensUncheckedCreateWithoutPen_attachmentsInput>
    connectOrCreate?: pensCreateOrConnectWithoutPen_attachmentsInput
    connect?: pensWhereUniqueInput
  }

  export type pensUpdateOneRequiredWithoutPen_attachmentsNestedInput = {
    create?: XOR<pensCreateWithoutPen_attachmentsInput, pensUncheckedCreateWithoutPen_attachmentsInput>
    connectOrCreate?: pensCreateOrConnectWithoutPen_attachmentsInput
    upsert?: pensUpsertWithoutPen_attachmentsInput
    connect?: pensWhereUniqueInput
    update?: XOR<XOR<pensUpdateToOneWithWhereWithoutPen_attachmentsInput, pensUpdateWithoutPen_attachmentsInput>, pensUncheckedUpdateWithoutPen_attachmentsInput>
  }

  export type cattlesCreateNestedManyWithoutPensInput = {
    create?: XOR<cattlesCreateWithoutPensInput, cattlesUncheckedCreateWithoutPensInput> | cattlesCreateWithoutPensInput[] | cattlesUncheckedCreateWithoutPensInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutPensInput | cattlesCreateOrConnectWithoutPensInput[]
    createMany?: cattlesCreateManyPensInputEnvelope
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
  }

  export type pen_attachmentsCreateNestedManyWithoutPensInput = {
    create?: XOR<pen_attachmentsCreateWithoutPensInput, pen_attachmentsUncheckedCreateWithoutPensInput> | pen_attachmentsCreateWithoutPensInput[] | pen_attachmentsUncheckedCreateWithoutPensInput[]
    connectOrCreate?: pen_attachmentsCreateOrConnectWithoutPensInput | pen_attachmentsCreateOrConnectWithoutPensInput[]
    createMany?: pen_attachmentsCreateManyPensInputEnvelope
    connect?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
  }

  export type farmsCreateNestedOneWithoutPensInput = {
    create?: XOR<farmsCreateWithoutPensInput, farmsUncheckedCreateWithoutPensInput>
    connectOrCreate?: farmsCreateOrConnectWithoutPensInput
    connect?: farmsWhereUniqueInput
  }

  export type cattlesUncheckedCreateNestedManyWithoutPensInput = {
    create?: XOR<cattlesCreateWithoutPensInput, cattlesUncheckedCreateWithoutPensInput> | cattlesCreateWithoutPensInput[] | cattlesUncheckedCreateWithoutPensInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutPensInput | cattlesCreateOrConnectWithoutPensInput[]
    createMany?: cattlesCreateManyPensInputEnvelope
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
  }

  export type pen_attachmentsUncheckedCreateNestedManyWithoutPensInput = {
    create?: XOR<pen_attachmentsCreateWithoutPensInput, pen_attachmentsUncheckedCreateWithoutPensInput> | pen_attachmentsCreateWithoutPensInput[] | pen_attachmentsUncheckedCreateWithoutPensInput[]
    connectOrCreate?: pen_attachmentsCreateOrConnectWithoutPensInput | pen_attachmentsCreateOrConnectWithoutPensInput[]
    createMany?: pen_attachmentsCreateManyPensInputEnvelope
    connect?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
  }

  export type cattlesUpdateManyWithoutPensNestedInput = {
    create?: XOR<cattlesCreateWithoutPensInput, cattlesUncheckedCreateWithoutPensInput> | cattlesCreateWithoutPensInput[] | cattlesUncheckedCreateWithoutPensInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutPensInput | cattlesCreateOrConnectWithoutPensInput[]
    upsert?: cattlesUpsertWithWhereUniqueWithoutPensInput | cattlesUpsertWithWhereUniqueWithoutPensInput[]
    createMany?: cattlesCreateManyPensInputEnvelope
    set?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    disconnect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    delete?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    update?: cattlesUpdateWithWhereUniqueWithoutPensInput | cattlesUpdateWithWhereUniqueWithoutPensInput[]
    updateMany?: cattlesUpdateManyWithWhereWithoutPensInput | cattlesUpdateManyWithWhereWithoutPensInput[]
    deleteMany?: cattlesScalarWhereInput | cattlesScalarWhereInput[]
  }

  export type pen_attachmentsUpdateManyWithoutPensNestedInput = {
    create?: XOR<pen_attachmentsCreateWithoutPensInput, pen_attachmentsUncheckedCreateWithoutPensInput> | pen_attachmentsCreateWithoutPensInput[] | pen_attachmentsUncheckedCreateWithoutPensInput[]
    connectOrCreate?: pen_attachmentsCreateOrConnectWithoutPensInput | pen_attachmentsCreateOrConnectWithoutPensInput[]
    upsert?: pen_attachmentsUpsertWithWhereUniqueWithoutPensInput | pen_attachmentsUpsertWithWhereUniqueWithoutPensInput[]
    createMany?: pen_attachmentsCreateManyPensInputEnvelope
    set?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    disconnect?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    delete?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    connect?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    update?: pen_attachmentsUpdateWithWhereUniqueWithoutPensInput | pen_attachmentsUpdateWithWhereUniqueWithoutPensInput[]
    updateMany?: pen_attachmentsUpdateManyWithWhereWithoutPensInput | pen_attachmentsUpdateManyWithWhereWithoutPensInput[]
    deleteMany?: pen_attachmentsScalarWhereInput | pen_attachmentsScalarWhereInput[]
  }

  export type farmsUpdateOneRequiredWithoutPensNestedInput = {
    create?: XOR<farmsCreateWithoutPensInput, farmsUncheckedCreateWithoutPensInput>
    connectOrCreate?: farmsCreateOrConnectWithoutPensInput
    upsert?: farmsUpsertWithoutPensInput
    connect?: farmsWhereUniqueInput
    update?: XOR<XOR<farmsUpdateToOneWithWhereWithoutPensInput, farmsUpdateWithoutPensInput>, farmsUncheckedUpdateWithoutPensInput>
  }

  export type cattlesUncheckedUpdateManyWithoutPensNestedInput = {
    create?: XOR<cattlesCreateWithoutPensInput, cattlesUncheckedCreateWithoutPensInput> | cattlesCreateWithoutPensInput[] | cattlesUncheckedCreateWithoutPensInput[]
    connectOrCreate?: cattlesCreateOrConnectWithoutPensInput | cattlesCreateOrConnectWithoutPensInput[]
    upsert?: cattlesUpsertWithWhereUniqueWithoutPensInput | cattlesUpsertWithWhereUniqueWithoutPensInput[]
    createMany?: cattlesCreateManyPensInputEnvelope
    set?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    disconnect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    delete?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    connect?: cattlesWhereUniqueInput | cattlesWhereUniqueInput[]
    update?: cattlesUpdateWithWhereUniqueWithoutPensInput | cattlesUpdateWithWhereUniqueWithoutPensInput[]
    updateMany?: cattlesUpdateManyWithWhereWithoutPensInput | cattlesUpdateManyWithWhereWithoutPensInput[]
    deleteMany?: cattlesScalarWhereInput | cattlesScalarWhereInput[]
  }

  export type pen_attachmentsUncheckedUpdateManyWithoutPensNestedInput = {
    create?: XOR<pen_attachmentsCreateWithoutPensInput, pen_attachmentsUncheckedCreateWithoutPensInput> | pen_attachmentsCreateWithoutPensInput[] | pen_attachmentsUncheckedCreateWithoutPensInput[]
    connectOrCreate?: pen_attachmentsCreateOrConnectWithoutPensInput | pen_attachmentsCreateOrConnectWithoutPensInput[]
    upsert?: pen_attachmentsUpsertWithWhereUniqueWithoutPensInput | pen_attachmentsUpsertWithWhereUniqueWithoutPensInput[]
    createMany?: pen_attachmentsCreateManyPensInputEnvelope
    set?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    disconnect?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    delete?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    connect?: pen_attachmentsWhereUniqueInput | pen_attachmentsWhereUniqueInput[]
    update?: pen_attachmentsUpdateWithWhereUniqueWithoutPensInput | pen_attachmentsUpdateWithWhereUniqueWithoutPensInput[]
    updateMany?: pen_attachmentsUpdateManyWithWhereWithoutPensInput | pen_attachmentsUpdateManyWithWhereWithoutPensInput[]
    deleteMany?: pen_attachmentsScalarWhereInput | pen_attachmentsScalarWhereInput[]
  }

  export type traceability_cattleCreateNestedManyWithoutTraceabilityInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceabilityInput, traceability_cattleUncheckedCreateWithoutTraceabilityInput> | traceability_cattleCreateWithoutTraceabilityInput[] | traceability_cattleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceabilityInput | traceability_cattleCreateOrConnectWithoutTraceabilityInput[]
    createMany?: traceability_cattleCreateManyTraceabilityInputEnvelope
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
  }

  export type traceability_statusCreateNestedManyWithoutTraceabilityInput = {
    create?: XOR<traceability_statusCreateWithoutTraceabilityInput, traceability_statusUncheckedCreateWithoutTraceabilityInput> | traceability_statusCreateWithoutTraceabilityInput[] | traceability_statusUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_statusCreateOrConnectWithoutTraceabilityInput | traceability_statusCreateOrConnectWithoutTraceabilityInput[]
    createMany?: traceability_statusCreateManyTraceabilityInputEnvelope
    connect?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
  }

  export type traceability_vehicleCreateNestedManyWithoutTraceabilityInput = {
    create?: XOR<traceability_vehicleCreateWithoutTraceabilityInput, traceability_vehicleUncheckedCreateWithoutTraceabilityInput> | traceability_vehicleCreateWithoutTraceabilityInput[] | traceability_vehicleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_vehicleCreateOrConnectWithoutTraceabilityInput | traceability_vehicleCreateOrConnectWithoutTraceabilityInput[]
    createMany?: traceability_vehicleCreateManyTraceabilityInputEnvelope
    connect?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
  }

  export type traceability_cattleUncheckedCreateNestedManyWithoutTraceabilityInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceabilityInput, traceability_cattleUncheckedCreateWithoutTraceabilityInput> | traceability_cattleCreateWithoutTraceabilityInput[] | traceability_cattleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceabilityInput | traceability_cattleCreateOrConnectWithoutTraceabilityInput[]
    createMany?: traceability_cattleCreateManyTraceabilityInputEnvelope
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
  }

  export type traceability_statusUncheckedCreateNestedManyWithoutTraceabilityInput = {
    create?: XOR<traceability_statusCreateWithoutTraceabilityInput, traceability_statusUncheckedCreateWithoutTraceabilityInput> | traceability_statusCreateWithoutTraceabilityInput[] | traceability_statusUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_statusCreateOrConnectWithoutTraceabilityInput | traceability_statusCreateOrConnectWithoutTraceabilityInput[]
    createMany?: traceability_statusCreateManyTraceabilityInputEnvelope
    connect?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
  }

  export type traceability_vehicleUncheckedCreateNestedManyWithoutTraceabilityInput = {
    create?: XOR<traceability_vehicleCreateWithoutTraceabilityInput, traceability_vehicleUncheckedCreateWithoutTraceabilityInput> | traceability_vehicleCreateWithoutTraceabilityInput[] | traceability_vehicleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_vehicleCreateOrConnectWithoutTraceabilityInput | traceability_vehicleCreateOrConnectWithoutTraceabilityInput[]
    createMany?: traceability_vehicleCreateManyTraceabilityInputEnvelope
    connect?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
  }

  export type traceability_cattleUpdateManyWithoutTraceabilityNestedInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceabilityInput, traceability_cattleUncheckedCreateWithoutTraceabilityInput> | traceability_cattleCreateWithoutTraceabilityInput[] | traceability_cattleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceabilityInput | traceability_cattleCreateOrConnectWithoutTraceabilityInput[]
    upsert?: traceability_cattleUpsertWithWhereUniqueWithoutTraceabilityInput | traceability_cattleUpsertWithWhereUniqueWithoutTraceabilityInput[]
    createMany?: traceability_cattleCreateManyTraceabilityInputEnvelope
    set?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    disconnect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    delete?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    update?: traceability_cattleUpdateWithWhereUniqueWithoutTraceabilityInput | traceability_cattleUpdateWithWhereUniqueWithoutTraceabilityInput[]
    updateMany?: traceability_cattleUpdateManyWithWhereWithoutTraceabilityInput | traceability_cattleUpdateManyWithWhereWithoutTraceabilityInput[]
    deleteMany?: traceability_cattleScalarWhereInput | traceability_cattleScalarWhereInput[]
  }

  export type traceability_statusUpdateManyWithoutTraceabilityNestedInput = {
    create?: XOR<traceability_statusCreateWithoutTraceabilityInput, traceability_statusUncheckedCreateWithoutTraceabilityInput> | traceability_statusCreateWithoutTraceabilityInput[] | traceability_statusUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_statusCreateOrConnectWithoutTraceabilityInput | traceability_statusCreateOrConnectWithoutTraceabilityInput[]
    upsert?: traceability_statusUpsertWithWhereUniqueWithoutTraceabilityInput | traceability_statusUpsertWithWhereUniqueWithoutTraceabilityInput[]
    createMany?: traceability_statusCreateManyTraceabilityInputEnvelope
    set?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    disconnect?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    delete?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    connect?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    update?: traceability_statusUpdateWithWhereUniqueWithoutTraceabilityInput | traceability_statusUpdateWithWhereUniqueWithoutTraceabilityInput[]
    updateMany?: traceability_statusUpdateManyWithWhereWithoutTraceabilityInput | traceability_statusUpdateManyWithWhereWithoutTraceabilityInput[]
    deleteMany?: traceability_statusScalarWhereInput | traceability_statusScalarWhereInput[]
  }

  export type traceability_vehicleUpdateManyWithoutTraceabilityNestedInput = {
    create?: XOR<traceability_vehicleCreateWithoutTraceabilityInput, traceability_vehicleUncheckedCreateWithoutTraceabilityInput> | traceability_vehicleCreateWithoutTraceabilityInput[] | traceability_vehicleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_vehicleCreateOrConnectWithoutTraceabilityInput | traceability_vehicleCreateOrConnectWithoutTraceabilityInput[]
    upsert?: traceability_vehicleUpsertWithWhereUniqueWithoutTraceabilityInput | traceability_vehicleUpsertWithWhereUniqueWithoutTraceabilityInput[]
    createMany?: traceability_vehicleCreateManyTraceabilityInputEnvelope
    set?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    disconnect?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    delete?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    connect?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    update?: traceability_vehicleUpdateWithWhereUniqueWithoutTraceabilityInput | traceability_vehicleUpdateWithWhereUniqueWithoutTraceabilityInput[]
    updateMany?: traceability_vehicleUpdateManyWithWhereWithoutTraceabilityInput | traceability_vehicleUpdateManyWithWhereWithoutTraceabilityInput[]
    deleteMany?: traceability_vehicleScalarWhereInput | traceability_vehicleScalarWhereInput[]
  }

  export type traceability_cattleUncheckedUpdateManyWithoutTraceabilityNestedInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceabilityInput, traceability_cattleUncheckedCreateWithoutTraceabilityInput> | traceability_cattleCreateWithoutTraceabilityInput[] | traceability_cattleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceabilityInput | traceability_cattleCreateOrConnectWithoutTraceabilityInput[]
    upsert?: traceability_cattleUpsertWithWhereUniqueWithoutTraceabilityInput | traceability_cattleUpsertWithWhereUniqueWithoutTraceabilityInput[]
    createMany?: traceability_cattleCreateManyTraceabilityInputEnvelope
    set?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    disconnect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    delete?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    update?: traceability_cattleUpdateWithWhereUniqueWithoutTraceabilityInput | traceability_cattleUpdateWithWhereUniqueWithoutTraceabilityInput[]
    updateMany?: traceability_cattleUpdateManyWithWhereWithoutTraceabilityInput | traceability_cattleUpdateManyWithWhereWithoutTraceabilityInput[]
    deleteMany?: traceability_cattleScalarWhereInput | traceability_cattleScalarWhereInput[]
  }

  export type traceability_statusUncheckedUpdateManyWithoutTraceabilityNestedInput = {
    create?: XOR<traceability_statusCreateWithoutTraceabilityInput, traceability_statusUncheckedCreateWithoutTraceabilityInput> | traceability_statusCreateWithoutTraceabilityInput[] | traceability_statusUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_statusCreateOrConnectWithoutTraceabilityInput | traceability_statusCreateOrConnectWithoutTraceabilityInput[]
    upsert?: traceability_statusUpsertWithWhereUniqueWithoutTraceabilityInput | traceability_statusUpsertWithWhereUniqueWithoutTraceabilityInput[]
    createMany?: traceability_statusCreateManyTraceabilityInputEnvelope
    set?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    disconnect?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    delete?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    connect?: traceability_statusWhereUniqueInput | traceability_statusWhereUniqueInput[]
    update?: traceability_statusUpdateWithWhereUniqueWithoutTraceabilityInput | traceability_statusUpdateWithWhereUniqueWithoutTraceabilityInput[]
    updateMany?: traceability_statusUpdateManyWithWhereWithoutTraceabilityInput | traceability_statusUpdateManyWithWhereWithoutTraceabilityInput[]
    deleteMany?: traceability_statusScalarWhereInput | traceability_statusScalarWhereInput[]
  }

  export type traceability_vehicleUncheckedUpdateManyWithoutTraceabilityNestedInput = {
    create?: XOR<traceability_vehicleCreateWithoutTraceabilityInput, traceability_vehicleUncheckedCreateWithoutTraceabilityInput> | traceability_vehicleCreateWithoutTraceabilityInput[] | traceability_vehicleUncheckedCreateWithoutTraceabilityInput[]
    connectOrCreate?: traceability_vehicleCreateOrConnectWithoutTraceabilityInput | traceability_vehicleCreateOrConnectWithoutTraceabilityInput[]
    upsert?: traceability_vehicleUpsertWithWhereUniqueWithoutTraceabilityInput | traceability_vehicleUpsertWithWhereUniqueWithoutTraceabilityInput[]
    createMany?: traceability_vehicleCreateManyTraceabilityInputEnvelope
    set?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    disconnect?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    delete?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    connect?: traceability_vehicleWhereUniqueInput | traceability_vehicleWhereUniqueInput[]
    update?: traceability_vehicleUpdateWithWhereUniqueWithoutTraceabilityInput | traceability_vehicleUpdateWithWhereUniqueWithoutTraceabilityInput[]
    updateMany?: traceability_vehicleUpdateManyWithWhereWithoutTraceabilityInput | traceability_vehicleUpdateManyWithWhereWithoutTraceabilityInput[]
    deleteMany?: traceability_vehicleScalarWhereInput | traceability_vehicleScalarWhereInput[]
  }

  export type traceabilityCreateNestedOneWithoutTraceability_cattleInput = {
    create?: XOR<traceabilityCreateWithoutTraceability_cattleInput, traceabilityUncheckedCreateWithoutTraceability_cattleInput>
    connectOrCreate?: traceabilityCreateOrConnectWithoutTraceability_cattleInput
    connect?: traceabilityWhereUniqueInput
  }

  export type traceability_vehicleCreateNestedOneWithoutTraceability_cattleInput = {
    create?: XOR<traceability_vehicleCreateWithoutTraceability_cattleInput, traceability_vehicleUncheckedCreateWithoutTraceability_cattleInput>
    connectOrCreate?: traceability_vehicleCreateOrConnectWithoutTraceability_cattleInput
    connect?: traceability_vehicleWhereUniqueInput
  }

  export type traceabilityUpdateOneRequiredWithoutTraceability_cattleNestedInput = {
    create?: XOR<traceabilityCreateWithoutTraceability_cattleInput, traceabilityUncheckedCreateWithoutTraceability_cattleInput>
    connectOrCreate?: traceabilityCreateOrConnectWithoutTraceability_cattleInput
    upsert?: traceabilityUpsertWithoutTraceability_cattleInput
    connect?: traceabilityWhereUniqueInput
    update?: XOR<XOR<traceabilityUpdateToOneWithWhereWithoutTraceability_cattleInput, traceabilityUpdateWithoutTraceability_cattleInput>, traceabilityUncheckedUpdateWithoutTraceability_cattleInput>
  }

  export type traceability_vehicleUpdateOneRequiredWithoutTraceability_cattleNestedInput = {
    create?: XOR<traceability_vehicleCreateWithoutTraceability_cattleInput, traceability_vehicleUncheckedCreateWithoutTraceability_cattleInput>
    connectOrCreate?: traceability_vehicleCreateOrConnectWithoutTraceability_cattleInput
    upsert?: traceability_vehicleUpsertWithoutTraceability_cattleInput
    connect?: traceability_vehicleWhereUniqueInput
    update?: XOR<XOR<traceability_vehicleUpdateToOneWithWhereWithoutTraceability_cattleInput, traceability_vehicleUpdateWithoutTraceability_cattleInput>, traceability_vehicleUncheckedUpdateWithoutTraceability_cattleInput>
  }

  export type traceabilityCreateNestedOneWithoutTraceability_statusInput = {
    create?: XOR<traceabilityCreateWithoutTraceability_statusInput, traceabilityUncheckedCreateWithoutTraceability_statusInput>
    connectOrCreate?: traceabilityCreateOrConnectWithoutTraceability_statusInput
    connect?: traceabilityWhereUniqueInput
  }

  export type traceabilityUpdateOneRequiredWithoutTraceability_statusNestedInput = {
    create?: XOR<traceabilityCreateWithoutTraceability_statusInput, traceabilityUncheckedCreateWithoutTraceability_statusInput>
    connectOrCreate?: traceabilityCreateOrConnectWithoutTraceability_statusInput
    upsert?: traceabilityUpsertWithoutTraceability_statusInput
    connect?: traceabilityWhereUniqueInput
    update?: XOR<XOR<traceabilityUpdateToOneWithWhereWithoutTraceability_statusInput, traceabilityUpdateWithoutTraceability_statusInput>, traceabilityUncheckedUpdateWithoutTraceability_statusInput>
  }

  export type traceability_cattleCreateNestedManyWithoutTraceability_vehicleInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceability_vehicleInput, traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput> | traceability_cattleCreateWithoutTraceability_vehicleInput[] | traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput | traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput[]
    createMany?: traceability_cattleCreateManyTraceability_vehicleInputEnvelope
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
  }

  export type traceabilityCreateNestedOneWithoutTraceability_vehicleInput = {
    create?: XOR<traceabilityCreateWithoutTraceability_vehicleInput, traceabilityUncheckedCreateWithoutTraceability_vehicleInput>
    connectOrCreate?: traceabilityCreateOrConnectWithoutTraceability_vehicleInput
    connect?: traceabilityWhereUniqueInput
  }

  export type traceability_cattleUncheckedCreateNestedManyWithoutTraceability_vehicleInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceability_vehicleInput, traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput> | traceability_cattleCreateWithoutTraceability_vehicleInput[] | traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput | traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput[]
    createMany?: traceability_cattleCreateManyTraceability_vehicleInputEnvelope
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
  }

  export type traceability_cattleUpdateManyWithoutTraceability_vehicleNestedInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceability_vehicleInput, traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput> | traceability_cattleCreateWithoutTraceability_vehicleInput[] | traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput | traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput[]
    upsert?: traceability_cattleUpsertWithWhereUniqueWithoutTraceability_vehicleInput | traceability_cattleUpsertWithWhereUniqueWithoutTraceability_vehicleInput[]
    createMany?: traceability_cattleCreateManyTraceability_vehicleInputEnvelope
    set?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    disconnect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    delete?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    update?: traceability_cattleUpdateWithWhereUniqueWithoutTraceability_vehicleInput | traceability_cattleUpdateWithWhereUniqueWithoutTraceability_vehicleInput[]
    updateMany?: traceability_cattleUpdateManyWithWhereWithoutTraceability_vehicleInput | traceability_cattleUpdateManyWithWhereWithoutTraceability_vehicleInput[]
    deleteMany?: traceability_cattleScalarWhereInput | traceability_cattleScalarWhereInput[]
  }

  export type traceabilityUpdateOneRequiredWithoutTraceability_vehicleNestedInput = {
    create?: XOR<traceabilityCreateWithoutTraceability_vehicleInput, traceabilityUncheckedCreateWithoutTraceability_vehicleInput>
    connectOrCreate?: traceabilityCreateOrConnectWithoutTraceability_vehicleInput
    upsert?: traceabilityUpsertWithoutTraceability_vehicleInput
    connect?: traceabilityWhereUniqueInput
    update?: XOR<XOR<traceabilityUpdateToOneWithWhereWithoutTraceability_vehicleInput, traceabilityUpdateWithoutTraceability_vehicleInput>, traceabilityUncheckedUpdateWithoutTraceability_vehicleInput>
  }

  export type traceability_cattleUncheckedUpdateManyWithoutTraceability_vehicleNestedInput = {
    create?: XOR<traceability_cattleCreateWithoutTraceability_vehicleInput, traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput> | traceability_cattleCreateWithoutTraceability_vehicleInput[] | traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput[]
    connectOrCreate?: traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput | traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput[]
    upsert?: traceability_cattleUpsertWithWhereUniqueWithoutTraceability_vehicleInput | traceability_cattleUpsertWithWhereUniqueWithoutTraceability_vehicleInput[]
    createMany?: traceability_cattleCreateManyTraceability_vehicleInputEnvelope
    set?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    disconnect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    delete?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    connect?: traceability_cattleWhereUniqueInput | traceability_cattleWhereUniqueInput[]
    update?: traceability_cattleUpdateWithWhereUniqueWithoutTraceability_vehicleInput | traceability_cattleUpdateWithWhereUniqueWithoutTraceability_vehicleInput[]
    updateMany?: traceability_cattleUpdateManyWithWhereWithoutTraceability_vehicleInput | traceability_cattleUpdateManyWithWhereWithoutTraceability_vehicleInput[]
    deleteMany?: traceability_cattleScalarWhereInput | traceability_cattleScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type buyersCreateWithoutBuyer_attachmentsInput = {
    id: string
    buyer_code: string
    company_name: string
    comp_registration_id: string
    country: string
    address: string
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    phone_number: string
    email?: string | null
    whatsapp?: string | null
    wechat?: string | null
    line_id?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    country_code?: string
  }

  export type buyersUncheckedCreateWithoutBuyer_attachmentsInput = {
    id: string
    buyer_code: string
    company_name: string
    comp_registration_id: string
    country: string
    address: string
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    phone_number: string
    email?: string | null
    whatsapp?: string | null
    wechat?: string | null
    line_id?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    country_code?: string
  }

  export type buyersCreateOrConnectWithoutBuyer_attachmentsInput = {
    where: buyersWhereUniqueInput
    create: XOR<buyersCreateWithoutBuyer_attachmentsInput, buyersUncheckedCreateWithoutBuyer_attachmentsInput>
  }

  export type buyersUpsertWithoutBuyer_attachmentsInput = {
    update: XOR<buyersUpdateWithoutBuyer_attachmentsInput, buyersUncheckedUpdateWithoutBuyer_attachmentsInput>
    create: XOR<buyersCreateWithoutBuyer_attachmentsInput, buyersUncheckedCreateWithoutBuyer_attachmentsInput>
    where?: buyersWhereInput
  }

  export type buyersUpdateToOneWithWhereWithoutBuyer_attachmentsInput = {
    where?: buyersWhereInput
    data: XOR<buyersUpdateWithoutBuyer_attachmentsInput, buyersUncheckedUpdateWithoutBuyer_attachmentsInput>
  }

  export type buyersUpdateWithoutBuyer_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    comp_registration_id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    wechat?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
  }

  export type buyersUncheckedUpdateWithoutBuyer_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    comp_registration_id?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    address?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    wechat?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    country_code?: StringFieldUpdateOperationsInput | string
  }

  export type buyer_attachmentsCreateWithoutBuyersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type buyer_attachmentsUncheckedCreateWithoutBuyersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type buyer_attachmentsCreateOrConnectWithoutBuyersInput = {
    where: buyer_attachmentsWhereUniqueInput
    create: XOR<buyer_attachmentsCreateWithoutBuyersInput, buyer_attachmentsUncheckedCreateWithoutBuyersInput>
  }

  export type buyer_attachmentsCreateManyBuyersInputEnvelope = {
    data: buyer_attachmentsCreateManyBuyersInput | buyer_attachmentsCreateManyBuyersInput[]
    skipDuplicates?: boolean
  }

  export type buyer_attachmentsUpsertWithWhereUniqueWithoutBuyersInput = {
    where: buyer_attachmentsWhereUniqueInput
    update: XOR<buyer_attachmentsUpdateWithoutBuyersInput, buyer_attachmentsUncheckedUpdateWithoutBuyersInput>
    create: XOR<buyer_attachmentsCreateWithoutBuyersInput, buyer_attachmentsUncheckedCreateWithoutBuyersInput>
  }

  export type buyer_attachmentsUpdateWithWhereUniqueWithoutBuyersInput = {
    where: buyer_attachmentsWhereUniqueInput
    data: XOR<buyer_attachmentsUpdateWithoutBuyersInput, buyer_attachmentsUncheckedUpdateWithoutBuyersInput>
  }

  export type buyer_attachmentsUpdateManyWithWhereWithoutBuyersInput = {
    where: buyer_attachmentsScalarWhereInput
    data: XOR<buyer_attachmentsUpdateManyMutationInput, buyer_attachmentsUncheckedUpdateManyWithoutBuyersInput>
  }

  export type buyer_attachmentsScalarWhereInput = {
    AND?: buyer_attachmentsScalarWhereInput | buyer_attachmentsScalarWhereInput[]
    OR?: buyer_attachmentsScalarWhereInput[]
    NOT?: buyer_attachmentsScalarWhereInput | buyer_attachmentsScalarWhereInput[]
    id?: StringFilter<"buyer_attachments"> | string
    buyer_id?: StringFilter<"buyer_attachments"> | string
    file_name?: StringFilter<"buyer_attachments"> | string
    file_path?: StringFilter<"buyer_attachments"> | string
    is_public?: BoolFilter<"buyer_attachments"> | boolean
    content_type?: StringFilter<"buyer_attachments"> | string
    description?: StringNullableFilter<"buyer_attachments"> | string | null
    created_at?: DateTimeFilter<"buyer_attachments"> | Date | string
    created_by_id?: StringFilter<"buyer_attachments"> | string
    created_by?: StringFilter<"buyer_attachments"> | string
    updated_at?: DateTimeFilter<"buyer_attachments"> | Date | string
    updated_by_id?: StringFilter<"buyer_attachments"> | string
    updated_by?: StringFilter<"buyer_attachments"> | string
  }

  export type cattlesCreateWithoutCattle_attachmentsInput = {
    id: string
    tracer_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_healths?: cattle_healthsCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsCreateNestedManyWithoutCattlesInput
    farms: farmsCreateNestedOneWithoutCattlesInput
    pens: pensCreateNestedOneWithoutCattlesInput
  }

  export type cattlesUncheckedCreateWithoutCattle_attachmentsInput = {
    id: string
    tracer_id: string
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_healths?: cattle_healthsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedCreateNestedManyWithoutCattlesInput
  }

  export type cattlesCreateOrConnectWithoutCattle_attachmentsInput = {
    where: cattlesWhereUniqueInput
    create: XOR<cattlesCreateWithoutCattle_attachmentsInput, cattlesUncheckedCreateWithoutCattle_attachmentsInput>
  }

  export type cattlesUpsertWithoutCattle_attachmentsInput = {
    update: XOR<cattlesUpdateWithoutCattle_attachmentsInput, cattlesUncheckedUpdateWithoutCattle_attachmentsInput>
    create: XOR<cattlesCreateWithoutCattle_attachmentsInput, cattlesUncheckedCreateWithoutCattle_attachmentsInput>
    where?: cattlesWhereInput
  }

  export type cattlesUpdateToOneWithWhereWithoutCattle_attachmentsInput = {
    where?: cattlesWhereInput
    data: XOR<cattlesUpdateWithoutCattle_attachmentsInput, cattlesUncheckedUpdateWithoutCattle_attachmentsInput>
  }

  export type cattlesUpdateWithoutCattle_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_healths?: cattle_healthsUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUpdateManyWithoutCattlesNestedInput
    farms?: farmsUpdateOneRequiredWithoutCattlesNestedInput
    pens?: pensUpdateOneRequiredWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateWithoutCattle_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_healths?: cattle_healthsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedUpdateManyWithoutCattlesNestedInput
  }

  export type cattlesCreateWithoutCattle_healthsInput = {
    id: string
    tracer_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsCreateNestedManyWithoutCattlesInput
    farms: farmsCreateNestedOneWithoutCattlesInput
    pens: pensCreateNestedOneWithoutCattlesInput
  }

  export type cattlesUncheckedCreateWithoutCattle_healthsInput = {
    id: string
    tracer_id: string
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedCreateNestedManyWithoutCattlesInput
  }

  export type cattlesCreateOrConnectWithoutCattle_healthsInput = {
    where: cattlesWhereUniqueInput
    create: XOR<cattlesCreateWithoutCattle_healthsInput, cattlesUncheckedCreateWithoutCattle_healthsInput>
  }

  export type cattlesUpsertWithoutCattle_healthsInput = {
    update: XOR<cattlesUpdateWithoutCattle_healthsInput, cattlesUncheckedUpdateWithoutCattle_healthsInput>
    create: XOR<cattlesCreateWithoutCattle_healthsInput, cattlesUncheckedCreateWithoutCattle_healthsInput>
    where?: cattlesWhereInput
  }

  export type cattlesUpdateToOneWithWhereWithoutCattle_healthsInput = {
    where?: cattlesWhereInput
    data: XOR<cattlesUpdateWithoutCattle_healthsInput, cattlesUncheckedUpdateWithoutCattle_healthsInput>
  }

  export type cattlesUpdateWithoutCattle_healthsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUpdateManyWithoutCattlesNestedInput
    farms?: farmsUpdateOneRequiredWithoutCattlesNestedInput
    pens?: pensUpdateOneRequiredWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateWithoutCattle_healthsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedUpdateManyWithoutCattlesNestedInput
  }

  export type farm_sourcingCreateWithoutCattle_sourcingInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_id: string
    amount: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_sourcingUncheckedCreateWithoutCattle_sourcingInput = {
    id: string
    order_id: string
    order_request_id: string
    farm_id: string
    amount: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_sourcingCreateOrConnectWithoutCattle_sourcingInput = {
    where: farm_sourcingWhereUniqueInput
    create: XOR<farm_sourcingCreateWithoutCattle_sourcingInput, farm_sourcingUncheckedCreateWithoutCattle_sourcingInput>
  }

  export type farm_sourcingUpsertWithoutCattle_sourcingInput = {
    update: XOR<farm_sourcingUpdateWithoutCattle_sourcingInput, farm_sourcingUncheckedUpdateWithoutCattle_sourcingInput>
    create: XOR<farm_sourcingCreateWithoutCattle_sourcingInput, farm_sourcingUncheckedCreateWithoutCattle_sourcingInput>
    where?: farm_sourcingWhereInput
  }

  export type farm_sourcingUpdateToOneWithWhereWithoutCattle_sourcingInput = {
    where?: farm_sourcingWhereInput
    data: XOR<farm_sourcingUpdateWithoutCattle_sourcingInput, farm_sourcingUncheckedUpdateWithoutCattle_sourcingInput>
  }

  export type farm_sourcingUpdateWithoutCattle_sourcingInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_sourcingUncheckedUpdateWithoutCattle_sourcingInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    amount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattlesCreateWithoutCattle_vaccinationsInput = {
    id: string
    tracer_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsCreateNestedManyWithoutCattlesInput
    farms: farmsCreateNestedOneWithoutCattlesInput
    pens: pensCreateNestedOneWithoutCattlesInput
  }

  export type cattlesUncheckedCreateWithoutCattle_vaccinationsInput = {
    id: string
    tracer_id: string
    farm_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsUncheckedCreateNestedManyWithoutCattlesInput
  }

  export type cattlesCreateOrConnectWithoutCattle_vaccinationsInput = {
    where: cattlesWhereUniqueInput
    create: XOR<cattlesCreateWithoutCattle_vaccinationsInput, cattlesUncheckedCreateWithoutCattle_vaccinationsInput>
  }

  export type cattlesUpsertWithoutCattle_vaccinationsInput = {
    update: XOR<cattlesUpdateWithoutCattle_vaccinationsInput, cattlesUncheckedUpdateWithoutCattle_vaccinationsInput>
    create: XOR<cattlesCreateWithoutCattle_vaccinationsInput, cattlesUncheckedCreateWithoutCattle_vaccinationsInput>
    where?: cattlesWhereInput
  }

  export type cattlesUpdateToOneWithWhereWithoutCattle_vaccinationsInput = {
    where?: cattlesWhereInput
    data: XOR<cattlesUpdateWithoutCattle_vaccinationsInput, cattlesUncheckedUpdateWithoutCattle_vaccinationsInput>
  }

  export type cattlesUpdateWithoutCattle_vaccinationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUpdateManyWithoutCattlesNestedInput
    farms?: farmsUpdateOneRequiredWithoutCattlesNestedInput
    pens?: pensUpdateOneRequiredWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateWithoutCattle_vaccinationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUncheckedUpdateManyWithoutCattlesNestedInput
  }

  export type cattle_attachmentsCreateWithoutCattlesInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_attachmentsUncheckedCreateWithoutCattlesInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_attachmentsCreateOrConnectWithoutCattlesInput = {
    where: cattle_attachmentsWhereUniqueInput
    create: XOR<cattle_attachmentsCreateWithoutCattlesInput, cattle_attachmentsUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_attachmentsCreateManyCattlesInputEnvelope = {
    data: cattle_attachmentsCreateManyCattlesInput | cattle_attachmentsCreateManyCattlesInput[]
    skipDuplicates?: boolean
  }

  export type cattle_healthsCreateWithoutCattlesInput = {
    id: string
    treatment_date: Date | string
    veterinary_name: string
    health_condition: string
    symptom?: string | null
    cause_of_death?: string | null
    treatment?: string | null
    drug_name?: string | null
    dosage?: Decimal | DecimalJsLike | number | string | null
    period_residue?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_healthsUncheckedCreateWithoutCattlesInput = {
    id: string
    treatment_date: Date | string
    veterinary_name: string
    health_condition: string
    symptom?: string | null
    cause_of_death?: string | null
    treatment?: string | null
    drug_name?: string | null
    dosage?: Decimal | DecimalJsLike | number | string | null
    period_residue?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_healthsCreateOrConnectWithoutCattlesInput = {
    where: cattle_healthsWhereUniqueInput
    create: XOR<cattle_healthsCreateWithoutCattlesInput, cattle_healthsUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_healthsCreateManyCattlesInputEnvelope = {
    data: cattle_healthsCreateManyCattlesInput | cattle_healthsCreateManyCattlesInput[]
    skipDuplicates?: boolean
  }

  export type cattle_vaccinationsCreateWithoutCattlesInput = {
    id: string
    vaccination_date?: Date | string | null
    veterinary_name?: string | null
    vaccine_type?: string | null
    remark?: string | null
    vaccine_id?: string | null
    vaccine_lot_no?: string | null
    vaccine_expiry_date?: Date | string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_vaccinationsUncheckedCreateWithoutCattlesInput = {
    id: string
    vaccination_date?: Date | string | null
    veterinary_name?: string | null
    vaccine_type?: string | null
    remark?: string | null
    vaccine_id?: string | null
    vaccine_lot_no?: string | null
    vaccine_expiry_date?: Date | string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_vaccinationsCreateOrConnectWithoutCattlesInput = {
    where: cattle_vaccinationsWhereUniqueInput
    create: XOR<cattle_vaccinationsCreateWithoutCattlesInput, cattle_vaccinationsUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_vaccinationsCreateManyCattlesInputEnvelope = {
    data: cattle_vaccinationsCreateManyCattlesInput | cattle_vaccinationsCreateManyCattlesInput[]
    skipDuplicates?: boolean
  }

  export type farmsCreateWithoutCattlesInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    farm_attachments?: farm_attachmentsCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryCreateNestedManyWithoutFarmsInput
    pens?: pensCreateNestedManyWithoutFarmsInput
  }

  export type farmsUncheckedCreateWithoutCattlesInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    farm_attachments?: farm_attachmentsUncheckedCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedUncheckedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryUncheckedCreateNestedManyWithoutFarmsInput
    pens?: pensUncheckedCreateNestedManyWithoutFarmsInput
  }

  export type farmsCreateOrConnectWithoutCattlesInput = {
    where: farmsWhereUniqueInput
    create: XOR<farmsCreateWithoutCattlesInput, farmsUncheckedCreateWithoutCattlesInput>
  }

  export type pensCreateWithoutCattlesInput = {
    id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    pen_attachments?: pen_attachmentsCreateNestedManyWithoutPensInput
    farms: farmsCreateNestedOneWithoutPensInput
  }

  export type pensUncheckedCreateWithoutCattlesInput = {
    id: string
    farm_id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    pen_attachments?: pen_attachmentsUncheckedCreateNestedManyWithoutPensInput
  }

  export type pensCreateOrConnectWithoutCattlesInput = {
    where: pensWhereUniqueInput
    create: XOR<pensCreateWithoutCattlesInput, pensUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_attachmentsUpsertWithWhereUniqueWithoutCattlesInput = {
    where: cattle_attachmentsWhereUniqueInput
    update: XOR<cattle_attachmentsUpdateWithoutCattlesInput, cattle_attachmentsUncheckedUpdateWithoutCattlesInput>
    create: XOR<cattle_attachmentsCreateWithoutCattlesInput, cattle_attachmentsUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_attachmentsUpdateWithWhereUniqueWithoutCattlesInput = {
    where: cattle_attachmentsWhereUniqueInput
    data: XOR<cattle_attachmentsUpdateWithoutCattlesInput, cattle_attachmentsUncheckedUpdateWithoutCattlesInput>
  }

  export type cattle_attachmentsUpdateManyWithWhereWithoutCattlesInput = {
    where: cattle_attachmentsScalarWhereInput
    data: XOR<cattle_attachmentsUpdateManyMutationInput, cattle_attachmentsUncheckedUpdateManyWithoutCattlesInput>
  }

  export type cattle_attachmentsScalarWhereInput = {
    AND?: cattle_attachmentsScalarWhereInput | cattle_attachmentsScalarWhereInput[]
    OR?: cattle_attachmentsScalarWhereInput[]
    NOT?: cattle_attachmentsScalarWhereInput | cattle_attachmentsScalarWhereInput[]
    id?: StringFilter<"cattle_attachments"> | string
    cattle_id?: StringFilter<"cattle_attachments"> | string
    file_name?: StringFilter<"cattle_attachments"> | string
    file_path?: StringFilter<"cattle_attachments"> | string
    is_public?: BoolFilter<"cattle_attachments"> | boolean
    content_type?: StringFilter<"cattle_attachments"> | string
    description?: StringNullableFilter<"cattle_attachments"> | string | null
    created_at?: DateTimeFilter<"cattle_attachments"> | Date | string
    created_by_id?: StringFilter<"cattle_attachments"> | string
    created_by?: StringFilter<"cattle_attachments"> | string
    updated_at?: DateTimeFilter<"cattle_attachments"> | Date | string
    updated_by_id?: StringFilter<"cattle_attachments"> | string
    updated_by?: StringFilter<"cattle_attachments"> | string
  }

  export type cattle_healthsUpsertWithWhereUniqueWithoutCattlesInput = {
    where: cattle_healthsWhereUniqueInput
    update: XOR<cattle_healthsUpdateWithoutCattlesInput, cattle_healthsUncheckedUpdateWithoutCattlesInput>
    create: XOR<cattle_healthsCreateWithoutCattlesInput, cattle_healthsUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_healthsUpdateWithWhereUniqueWithoutCattlesInput = {
    where: cattle_healthsWhereUniqueInput
    data: XOR<cattle_healthsUpdateWithoutCattlesInput, cattle_healthsUncheckedUpdateWithoutCattlesInput>
  }

  export type cattle_healthsUpdateManyWithWhereWithoutCattlesInput = {
    where: cattle_healthsScalarWhereInput
    data: XOR<cattle_healthsUpdateManyMutationInput, cattle_healthsUncheckedUpdateManyWithoutCattlesInput>
  }

  export type cattle_healthsScalarWhereInput = {
    AND?: cattle_healthsScalarWhereInput | cattle_healthsScalarWhereInput[]
    OR?: cattle_healthsScalarWhereInput[]
    NOT?: cattle_healthsScalarWhereInput | cattle_healthsScalarWhereInput[]
    id?: StringFilter<"cattle_healths"> | string
    cattle_id?: StringFilter<"cattle_healths"> | string
    treatment_date?: DateTimeFilter<"cattle_healths"> | Date | string
    veterinary_name?: StringFilter<"cattle_healths"> | string
    health_condition?: StringFilter<"cattle_healths"> | string
    symptom?: StringNullableFilter<"cattle_healths"> | string | null
    cause_of_death?: StringNullableFilter<"cattle_healths"> | string | null
    treatment?: StringNullableFilter<"cattle_healths"> | string | null
    drug_name?: StringNullableFilter<"cattle_healths"> | string | null
    dosage?: DecimalNullableFilter<"cattle_healths"> | Decimal | DecimalJsLike | number | string | null
    period_residue?: StringNullableFilter<"cattle_healths"> | string | null
    status?: StringFilter<"cattle_healths"> | string
    created_at?: DateTimeFilter<"cattle_healths"> | Date | string
    created_by_id?: StringFilter<"cattle_healths"> | string
    created_by?: StringFilter<"cattle_healths"> | string
    updated_at?: DateTimeFilter<"cattle_healths"> | Date | string
    updated_by_id?: StringFilter<"cattle_healths"> | string
    updated_by?: StringFilter<"cattle_healths"> | string
  }

  export type cattle_vaccinationsUpsertWithWhereUniqueWithoutCattlesInput = {
    where: cattle_vaccinationsWhereUniqueInput
    update: XOR<cattle_vaccinationsUpdateWithoutCattlesInput, cattle_vaccinationsUncheckedUpdateWithoutCattlesInput>
    create: XOR<cattle_vaccinationsCreateWithoutCattlesInput, cattle_vaccinationsUncheckedCreateWithoutCattlesInput>
  }

  export type cattle_vaccinationsUpdateWithWhereUniqueWithoutCattlesInput = {
    where: cattle_vaccinationsWhereUniqueInput
    data: XOR<cattle_vaccinationsUpdateWithoutCattlesInput, cattle_vaccinationsUncheckedUpdateWithoutCattlesInput>
  }

  export type cattle_vaccinationsUpdateManyWithWhereWithoutCattlesInput = {
    where: cattle_vaccinationsScalarWhereInput
    data: XOR<cattle_vaccinationsUpdateManyMutationInput, cattle_vaccinationsUncheckedUpdateManyWithoutCattlesInput>
  }

  export type cattle_vaccinationsScalarWhereInput = {
    AND?: cattle_vaccinationsScalarWhereInput | cattle_vaccinationsScalarWhereInput[]
    OR?: cattle_vaccinationsScalarWhereInput[]
    NOT?: cattle_vaccinationsScalarWhereInput | cattle_vaccinationsScalarWhereInput[]
    id?: StringFilter<"cattle_vaccinations"> | string
    cattle_id?: StringFilter<"cattle_vaccinations"> | string
    vaccination_date?: DateTimeNullableFilter<"cattle_vaccinations"> | Date | string | null
    veterinary_name?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_type?: StringNullableFilter<"cattle_vaccinations"> | string | null
    remark?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_id?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_lot_no?: StringNullableFilter<"cattle_vaccinations"> | string | null
    vaccine_expiry_date?: DateTimeNullableFilter<"cattle_vaccinations"> | Date | string | null
    status?: StringFilter<"cattle_vaccinations"> | string
    created_at?: DateTimeFilter<"cattle_vaccinations"> | Date | string
    created_by_id?: StringFilter<"cattle_vaccinations"> | string
    created_by?: StringFilter<"cattle_vaccinations"> | string
    updated_at?: DateTimeFilter<"cattle_vaccinations"> | Date | string
    updated_by_id?: StringFilter<"cattle_vaccinations"> | string
    updated_by?: StringFilter<"cattle_vaccinations"> | string
  }

  export type farmsUpsertWithoutCattlesInput = {
    update: XOR<farmsUpdateWithoutCattlesInput, farmsUncheckedUpdateWithoutCattlesInput>
    create: XOR<farmsCreateWithoutCattlesInput, farmsUncheckedCreateWithoutCattlesInput>
    where?: farmsWhereInput
  }

  export type farmsUpdateToOneWithWhereWithoutCattlesInput = {
    where?: farmsWhereInput
    data: XOR<farmsUpdateWithoutCattlesInput, farmsUncheckedUpdateWithoutCattlesInput>
  }

  export type farmsUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    farm_attachments?: farm_attachmentsUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUpdateManyWithoutFarmsNestedInput
    pens?: pensUpdateManyWithoutFarmsNestedInput
  }

  export type farmsUncheckedUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    farm_attachments?: farm_attachmentsUncheckedUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUncheckedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUncheckedUpdateManyWithoutFarmsNestedInput
    pens?: pensUncheckedUpdateManyWithoutFarmsNestedInput
  }

  export type pensUpsertWithoutCattlesInput = {
    update: XOR<pensUpdateWithoutCattlesInput, pensUncheckedUpdateWithoutCattlesInput>
    create: XOR<pensCreateWithoutCattlesInput, pensUncheckedCreateWithoutCattlesInput>
    where?: pensWhereInput
  }

  export type pensUpdateToOneWithWhereWithoutCattlesInput = {
    where?: pensWhereInput
    data: XOR<pensUpdateWithoutCattlesInput, pensUncheckedUpdateWithoutCattlesInput>
  }

  export type pensUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    pen_attachments?: pen_attachmentsUpdateManyWithoutPensNestedInput
    farms?: farmsUpdateOneRequiredWithoutPensNestedInput
  }

  export type pensUncheckedUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    pen_attachments?: pen_attachmentsUncheckedUpdateManyWithoutPensNestedInput
  }

  export type farmsCreateWithoutFarm_attachmentsInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryCreateNestedManyWithoutFarmsInput
    pens?: pensCreateNestedManyWithoutFarmsInput
  }

  export type farmsUncheckedCreateWithoutFarm_attachmentsInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedUncheckedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryUncheckedCreateNestedManyWithoutFarmsInput
    pens?: pensUncheckedCreateNestedManyWithoutFarmsInput
  }

  export type farmsCreateOrConnectWithoutFarm_attachmentsInput = {
    where: farmsWhereUniqueInput
    create: XOR<farmsCreateWithoutFarm_attachmentsInput, farmsUncheckedCreateWithoutFarm_attachmentsInput>
  }

  export type farmsUpsertWithoutFarm_attachmentsInput = {
    update: XOR<farmsUpdateWithoutFarm_attachmentsInput, farmsUncheckedUpdateWithoutFarm_attachmentsInput>
    create: XOR<farmsCreateWithoutFarm_attachmentsInput, farmsUncheckedCreateWithoutFarm_attachmentsInput>
    where?: farmsWhereInput
  }

  export type farmsUpdateToOneWithWhereWithoutFarm_attachmentsInput = {
    where?: farmsWhereInput
    data: XOR<farmsUpdateWithoutFarm_attachmentsInput, farmsUncheckedUpdateWithoutFarm_attachmentsInput>
  }

  export type farmsUpdateWithoutFarm_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUpdateManyWithoutFarmsNestedInput
    pens?: pensUpdateManyWithoutFarmsNestedInput
  }

  export type farmsUncheckedUpdateWithoutFarm_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUncheckedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUncheckedUpdateManyWithoutFarmsNestedInput
    pens?: pensUncheckedUpdateManyWithoutFarmsNestedInput
  }

  export type farmsCreateWithoutFarm_authorizedInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryCreateNestedManyWithoutFarmsInput
    pens?: pensCreateNestedManyWithoutFarmsInput
  }

  export type farmsUncheckedCreateWithoutFarm_authorizedInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsUncheckedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryUncheckedCreateNestedManyWithoutFarmsInput
    pens?: pensUncheckedCreateNestedManyWithoutFarmsInput
  }

  export type farmsCreateOrConnectWithoutFarm_authorizedInput = {
    where: farmsWhereUniqueInput
    create: XOR<farmsCreateWithoutFarm_authorizedInput, farmsUncheckedCreateWithoutFarm_authorizedInput>
  }

  export type farmsUpsertWithoutFarm_authorizedInput = {
    update: XOR<farmsUpdateWithoutFarm_authorizedInput, farmsUncheckedUpdateWithoutFarm_authorizedInput>
    create: XOR<farmsCreateWithoutFarm_authorizedInput, farmsUncheckedCreateWithoutFarm_authorizedInput>
    where?: farmsWhereInput
  }

  export type farmsUpdateToOneWithWhereWithoutFarm_authorizedInput = {
    where?: farmsWhereInput
    data: XOR<farmsUpdateWithoutFarm_authorizedInput, farmsUncheckedUpdateWithoutFarm_authorizedInput>
  }

  export type farmsUpdateWithoutFarm_authorizedInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUpdateManyWithoutFarmsNestedInput
    pens?: pensUpdateManyWithoutFarmsNestedInput
  }

  export type farmsUncheckedUpdateWithoutFarm_authorizedInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUncheckedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUncheckedUpdateManyWithoutFarmsNestedInput
    pens?: pensUncheckedUpdateManyWithoutFarmsNestedInput
  }

  export type cattle_sourcingCreateWithoutFarm_sourcingInput = {
    id: string
    order_id: string
    order_request_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput = {
    id: string
    order_id: string
    order_request_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_sourcingCreateOrConnectWithoutFarm_sourcingInput = {
    where: cattle_sourcingWhereUniqueInput
    create: XOR<cattle_sourcingCreateWithoutFarm_sourcingInput, cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput>
  }

  export type cattle_sourcingCreateManyFarm_sourcingInputEnvelope = {
    data: cattle_sourcingCreateManyFarm_sourcingInput | cattle_sourcingCreateManyFarm_sourcingInput[]
    skipDuplicates?: boolean
  }

  export type cattle_sourcingUpsertWithWhereUniqueWithoutFarm_sourcingInput = {
    where: cattle_sourcingWhereUniqueInput
    update: XOR<cattle_sourcingUpdateWithoutFarm_sourcingInput, cattle_sourcingUncheckedUpdateWithoutFarm_sourcingInput>
    create: XOR<cattle_sourcingCreateWithoutFarm_sourcingInput, cattle_sourcingUncheckedCreateWithoutFarm_sourcingInput>
  }

  export type cattle_sourcingUpdateWithWhereUniqueWithoutFarm_sourcingInput = {
    where: cattle_sourcingWhereUniqueInput
    data: XOR<cattle_sourcingUpdateWithoutFarm_sourcingInput, cattle_sourcingUncheckedUpdateWithoutFarm_sourcingInput>
  }

  export type cattle_sourcingUpdateManyWithWhereWithoutFarm_sourcingInput = {
    where: cattle_sourcingScalarWhereInput
    data: XOR<cattle_sourcingUpdateManyMutationInput, cattle_sourcingUncheckedUpdateManyWithoutFarm_sourcingInput>
  }

  export type cattle_sourcingScalarWhereInput = {
    AND?: cattle_sourcingScalarWhereInput | cattle_sourcingScalarWhereInput[]
    OR?: cattle_sourcingScalarWhereInput[]
    NOT?: cattle_sourcingScalarWhereInput | cattle_sourcingScalarWhereInput[]
    id?: StringFilter<"cattle_sourcing"> | string
    order_id?: StringFilter<"cattle_sourcing"> | string
    order_request_id?: StringFilter<"cattle_sourcing"> | string
    farm_sourcing_id?: StringFilter<"cattle_sourcing"> | string
    cattle_id?: StringFilter<"cattle_sourcing"> | string
    created_at?: DateTimeFilter<"cattle_sourcing"> | Date | string
    created_by_id?: StringFilter<"cattle_sourcing"> | string
    created_by?: StringFilter<"cattle_sourcing"> | string
    updated_at?: DateTimeFilter<"cattle_sourcing"> | Date | string
    updated_by_id?: StringFilter<"cattle_sourcing"> | string
    updated_by?: StringFilter<"cattle_sourcing"> | string
  }

  export type farmsCreateWithoutFarm_veterinaryInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedCreateNestedManyWithoutFarmsInput
    pens?: pensCreateNestedManyWithoutFarmsInput
  }

  export type farmsUncheckedCreateWithoutFarm_veterinaryInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsUncheckedCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedUncheckedCreateNestedManyWithoutFarmsInput
    pens?: pensUncheckedCreateNestedManyWithoutFarmsInput
  }

  export type farmsCreateOrConnectWithoutFarm_veterinaryInput = {
    where: farmsWhereUniqueInput
    create: XOR<farmsCreateWithoutFarm_veterinaryInput, farmsUncheckedCreateWithoutFarm_veterinaryInput>
  }

  export type farmsUpsertWithoutFarm_veterinaryInput = {
    update: XOR<farmsUpdateWithoutFarm_veterinaryInput, farmsUncheckedUpdateWithoutFarm_veterinaryInput>
    create: XOR<farmsCreateWithoutFarm_veterinaryInput, farmsUncheckedCreateWithoutFarm_veterinaryInput>
    where?: farmsWhereInput
  }

  export type farmsUpdateToOneWithWhereWithoutFarm_veterinaryInput = {
    where?: farmsWhereInput
    data: XOR<farmsUpdateWithoutFarm_veterinaryInput, farmsUncheckedUpdateWithoutFarm_veterinaryInput>
  }

  export type farmsUpdateWithoutFarm_veterinaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUpdateManyWithoutFarmsNestedInput
    pens?: pensUpdateManyWithoutFarmsNestedInput
  }

  export type farmsUncheckedUpdateWithoutFarm_veterinaryInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUncheckedUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUncheckedUpdateManyWithoutFarmsNestedInput
    pens?: pensUncheckedUpdateManyWithoutFarmsNestedInput
  }

  export type farmersCreateWithoutFarmer_accountsInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmer_attachments?: farmer_attachmentsCreateNestedManyWithoutFarmersInput
  }

  export type farmersUncheckedCreateWithoutFarmer_accountsInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmer_attachments?: farmer_attachmentsUncheckedCreateNestedManyWithoutFarmersInput
  }

  export type farmersCreateOrConnectWithoutFarmer_accountsInput = {
    where: farmersWhereUniqueInput
    create: XOR<farmersCreateWithoutFarmer_accountsInput, farmersUncheckedCreateWithoutFarmer_accountsInput>
  }

  export type farmersUpsertWithoutFarmer_accountsInput = {
    update: XOR<farmersUpdateWithoutFarmer_accountsInput, farmersUncheckedUpdateWithoutFarmer_accountsInput>
    create: XOR<farmersCreateWithoutFarmer_accountsInput, farmersUncheckedCreateWithoutFarmer_accountsInput>
    where?: farmersWhereInput
  }

  export type farmersUpdateToOneWithWhereWithoutFarmer_accountsInput = {
    where?: farmersWhereInput
    data: XOR<farmersUpdateWithoutFarmer_accountsInput, farmersUncheckedUpdateWithoutFarmer_accountsInput>
  }

  export type farmersUpdateWithoutFarmer_accountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmer_attachments?: farmer_attachmentsUpdateManyWithoutFarmersNestedInput
  }

  export type farmersUncheckedUpdateWithoutFarmer_accountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmer_attachments?: farmer_attachmentsUncheckedUpdateManyWithoutFarmersNestedInput
  }

  export type farmersCreateWithoutFarmer_attachmentsInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmer_accounts?: farmer_accountsCreateNestedManyWithoutFarmersInput
  }

  export type farmersUncheckedCreateWithoutFarmer_attachmentsInput = {
    id: string
    tracer_id: string
    farmer_type: string
    tin: string
    masking_tin?: string | null
    title: string
    first_name: string
    middle_name?: string | null
    last_name: string
    company_name?: string | null
    gender?: string | null
    birthdate?: string | null
    education_degree?: string | null
    occupation?: string | null
    second_occupation?: string | null
    phone_number?: string | null
    mobile_number: string
    email?: string | null
    line_id: string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    contact_address_line1: string
    contact_address_subdistrict: string
    contact_address_district: string
    contact_address_province: string
    contact_address_zipcode: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    farmer_accounts?: farmer_accountsUncheckedCreateNestedManyWithoutFarmersInput
  }

  export type farmersCreateOrConnectWithoutFarmer_attachmentsInput = {
    where: farmersWhereUniqueInput
    create: XOR<farmersCreateWithoutFarmer_attachmentsInput, farmersUncheckedCreateWithoutFarmer_attachmentsInput>
  }

  export type farmersUpsertWithoutFarmer_attachmentsInput = {
    update: XOR<farmersUpdateWithoutFarmer_attachmentsInput, farmersUncheckedUpdateWithoutFarmer_attachmentsInput>
    create: XOR<farmersCreateWithoutFarmer_attachmentsInput, farmersUncheckedCreateWithoutFarmer_attachmentsInput>
    where?: farmersWhereInput
  }

  export type farmersUpdateToOneWithWhereWithoutFarmer_attachmentsInput = {
    where?: farmersWhereInput
    data: XOR<farmersUpdateWithoutFarmer_attachmentsInput, farmersUncheckedUpdateWithoutFarmer_attachmentsInput>
  }

  export type farmersUpdateWithoutFarmer_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmer_accounts?: farmer_accountsUpdateManyWithoutFarmersNestedInput
  }

  export type farmersUncheckedUpdateWithoutFarmer_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farmer_type?: StringFieldUpdateOperationsInput | string
    tin?: StringFieldUpdateOperationsInput | string
    masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: StringFieldUpdateOperationsInput | string
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    occupation?: NullableStringFieldUpdateOperationsInput | string | null
    second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    mobile_number?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    line_id?: StringFieldUpdateOperationsInput | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    contact_address_line1?: StringFieldUpdateOperationsInput | string
    contact_address_subdistrict?: StringFieldUpdateOperationsInput | string
    contact_address_district?: StringFieldUpdateOperationsInput | string
    contact_address_province?: StringFieldUpdateOperationsInput | string
    contact_address_zipcode?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    farmer_accounts?: farmer_accountsUncheckedUpdateManyWithoutFarmersNestedInput
  }

  export type farmer_accountsCreateWithoutFarmersInput = {
    id: string
    username: string
    password: string
    role_id?: number | null
    permissions?: farmer_accountsCreatepermissionsInput | string[]
    status?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_accountsUncheckedCreateWithoutFarmersInput = {
    id: string
    username: string
    password: string
    role_id?: number | null
    permissions?: farmer_accountsCreatepermissionsInput | string[]
    status?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_accountsCreateOrConnectWithoutFarmersInput = {
    where: farmer_accountsWhereUniqueInput
    create: XOR<farmer_accountsCreateWithoutFarmersInput, farmer_accountsUncheckedCreateWithoutFarmersInput>
  }

  export type farmer_accountsCreateManyFarmersInputEnvelope = {
    data: farmer_accountsCreateManyFarmersInput | farmer_accountsCreateManyFarmersInput[]
    skipDuplicates?: boolean
  }

  export type farmer_attachmentsCreateWithoutFarmersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farmer_attachmentsUncheckedCreateWithoutFarmersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farmer_attachmentsCreateOrConnectWithoutFarmersInput = {
    where: farmer_attachmentsWhereUniqueInput
    create: XOR<farmer_attachmentsCreateWithoutFarmersInput, farmer_attachmentsUncheckedCreateWithoutFarmersInput>
  }

  export type farmer_attachmentsCreateManyFarmersInputEnvelope = {
    data: farmer_attachmentsCreateManyFarmersInput | farmer_attachmentsCreateManyFarmersInput[]
    skipDuplicates?: boolean
  }

  export type farmer_accountsUpsertWithWhereUniqueWithoutFarmersInput = {
    where: farmer_accountsWhereUniqueInput
    update: XOR<farmer_accountsUpdateWithoutFarmersInput, farmer_accountsUncheckedUpdateWithoutFarmersInput>
    create: XOR<farmer_accountsCreateWithoutFarmersInput, farmer_accountsUncheckedCreateWithoutFarmersInput>
  }

  export type farmer_accountsUpdateWithWhereUniqueWithoutFarmersInput = {
    where: farmer_accountsWhereUniqueInput
    data: XOR<farmer_accountsUpdateWithoutFarmersInput, farmer_accountsUncheckedUpdateWithoutFarmersInput>
  }

  export type farmer_accountsUpdateManyWithWhereWithoutFarmersInput = {
    where: farmer_accountsScalarWhereInput
    data: XOR<farmer_accountsUpdateManyMutationInput, farmer_accountsUncheckedUpdateManyWithoutFarmersInput>
  }

  export type farmer_accountsScalarWhereInput = {
    AND?: farmer_accountsScalarWhereInput | farmer_accountsScalarWhereInput[]
    OR?: farmer_accountsScalarWhereInput[]
    NOT?: farmer_accountsScalarWhereInput | farmer_accountsScalarWhereInput[]
    id?: StringFilter<"farmer_accounts"> | string
    farmer_id?: StringFilter<"farmer_accounts"> | string
    username?: StringFilter<"farmer_accounts"> | string
    password?: StringFilter<"farmer_accounts"> | string
    role_id?: IntNullableFilter<"farmer_accounts"> | number | null
    permissions?: StringNullableListFilter<"farmer_accounts">
    status?: StringNullableFilter<"farmer_accounts"> | string | null
    created_at?: DateTimeFilter<"farmer_accounts"> | Date | string
    created_by_id?: StringFilter<"farmer_accounts"> | string
    created_by?: StringFilter<"farmer_accounts"> | string
    updated_at?: DateTimeFilter<"farmer_accounts"> | Date | string
    updated_by_id?: StringFilter<"farmer_accounts"> | string
    updated_by?: StringFilter<"farmer_accounts"> | string
  }

  export type farmer_attachmentsUpsertWithWhereUniqueWithoutFarmersInput = {
    where: farmer_attachmentsWhereUniqueInput
    update: XOR<farmer_attachmentsUpdateWithoutFarmersInput, farmer_attachmentsUncheckedUpdateWithoutFarmersInput>
    create: XOR<farmer_attachmentsCreateWithoutFarmersInput, farmer_attachmentsUncheckedCreateWithoutFarmersInput>
  }

  export type farmer_attachmentsUpdateWithWhereUniqueWithoutFarmersInput = {
    where: farmer_attachmentsWhereUniqueInput
    data: XOR<farmer_attachmentsUpdateWithoutFarmersInput, farmer_attachmentsUncheckedUpdateWithoutFarmersInput>
  }

  export type farmer_attachmentsUpdateManyWithWhereWithoutFarmersInput = {
    where: farmer_attachmentsScalarWhereInput
    data: XOR<farmer_attachmentsUpdateManyMutationInput, farmer_attachmentsUncheckedUpdateManyWithoutFarmersInput>
  }

  export type farmer_attachmentsScalarWhereInput = {
    AND?: farmer_attachmentsScalarWhereInput | farmer_attachmentsScalarWhereInput[]
    OR?: farmer_attachmentsScalarWhereInput[]
    NOT?: farmer_attachmentsScalarWhereInput | farmer_attachmentsScalarWhereInput[]
    id?: StringFilter<"farmer_attachments"> | string
    farmer_id?: StringFilter<"farmer_attachments"> | string
    file_name?: StringFilter<"farmer_attachments"> | string
    file_path?: StringFilter<"farmer_attachments"> | string
    is_public?: BoolFilter<"farmer_attachments"> | boolean
    content_type?: StringFilter<"farmer_attachments"> | string
    description?: StringNullableFilter<"farmer_attachments"> | string | null
    created_at?: DateTimeFilter<"farmer_attachments"> | Date | string
    created_by_id?: StringFilter<"farmer_attachments"> | string
    created_by?: StringFilter<"farmer_attachments"> | string
    updated_at?: DateTimeFilter<"farmer_attachments"> | Date | string
    updated_by_id?: StringFilter<"farmer_attachments"> | string
    updated_by?: StringFilter<"farmer_attachments"> | string
    encrypted_key?: StringNullableFilter<"farmer_attachments"> | string | null
  }

  export type cattlesCreateWithoutFarmsInput = {
    id: string
    tracer_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsCreateNestedManyWithoutCattlesInput
    pens: pensCreateNestedOneWithoutCattlesInput
  }

  export type cattlesUncheckedCreateWithoutFarmsInput = {
    id: string
    tracer_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedCreateNestedManyWithoutCattlesInput
  }

  export type cattlesCreateOrConnectWithoutFarmsInput = {
    where: cattlesWhereUniqueInput
    create: XOR<cattlesCreateWithoutFarmsInput, cattlesUncheckedCreateWithoutFarmsInput>
  }

  export type cattlesCreateManyFarmsInputEnvelope = {
    data: cattlesCreateManyFarmsInput | cattlesCreateManyFarmsInput[]
    skipDuplicates?: boolean
  }

  export type farm_attachmentsCreateWithoutFarmsInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farm_attachmentsUncheckedCreateWithoutFarmsInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farm_attachmentsCreateOrConnectWithoutFarmsInput = {
    where: farm_attachmentsWhereUniqueInput
    create: XOR<farm_attachmentsCreateWithoutFarmsInput, farm_attachmentsUncheckedCreateWithoutFarmsInput>
  }

  export type farm_attachmentsCreateManyFarmsInputEnvelope = {
    data: farm_attachmentsCreateManyFarmsInput | farm_attachmentsCreateManyFarmsInput[]
    skipDuplicates?: boolean
  }

  export type farm_authorizedCreateWithoutFarmsInput = {
    id: string
    authorized_type: string
    authorized_second_type?: string | null
    license_id: string
    expire_date: Date | string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_authorizedUncheckedCreateWithoutFarmsInput = {
    id: string
    authorized_type: string
    authorized_second_type?: string | null
    license_id: string
    expire_date: Date | string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_authorizedCreateOrConnectWithoutFarmsInput = {
    where: farm_authorizedWhereUniqueInput
    create: XOR<farm_authorizedCreateWithoutFarmsInput, farm_authorizedUncheckedCreateWithoutFarmsInput>
  }

  export type farm_authorizedCreateManyFarmsInputEnvelope = {
    data: farm_authorizedCreateManyFarmsInput | farm_authorizedCreateManyFarmsInput[]
    skipDuplicates?: boolean
  }

  export type farm_veterinaryCreateWithoutFarmsInput = {
    id: string
    name: string
    license_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_veterinaryUncheckedCreateWithoutFarmsInput = {
    id: string
    name: string
    license_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_veterinaryCreateOrConnectWithoutFarmsInput = {
    where: farm_veterinaryWhereUniqueInput
    create: XOR<farm_veterinaryCreateWithoutFarmsInput, farm_veterinaryUncheckedCreateWithoutFarmsInput>
  }

  export type farm_veterinaryCreateManyFarmsInputEnvelope = {
    data: farm_veterinaryCreateManyFarmsInput | farm_veterinaryCreateManyFarmsInput[]
    skipDuplicates?: boolean
  }

  export type pensCreateWithoutFarmsInput = {
    id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles?: cattlesCreateNestedManyWithoutPensInput
    pen_attachments?: pen_attachmentsCreateNestedManyWithoutPensInput
  }

  export type pensUncheckedCreateWithoutFarmsInput = {
    id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutPensInput
    pen_attachments?: pen_attachmentsUncheckedCreateNestedManyWithoutPensInput
  }

  export type pensCreateOrConnectWithoutFarmsInput = {
    where: pensWhereUniqueInput
    create: XOR<pensCreateWithoutFarmsInput, pensUncheckedCreateWithoutFarmsInput>
  }

  export type pensCreateManyFarmsInputEnvelope = {
    data: pensCreateManyFarmsInput | pensCreateManyFarmsInput[]
    skipDuplicates?: boolean
  }

  export type cattlesUpsertWithWhereUniqueWithoutFarmsInput = {
    where: cattlesWhereUniqueInput
    update: XOR<cattlesUpdateWithoutFarmsInput, cattlesUncheckedUpdateWithoutFarmsInput>
    create: XOR<cattlesCreateWithoutFarmsInput, cattlesUncheckedCreateWithoutFarmsInput>
  }

  export type cattlesUpdateWithWhereUniqueWithoutFarmsInput = {
    where: cattlesWhereUniqueInput
    data: XOR<cattlesUpdateWithoutFarmsInput, cattlesUncheckedUpdateWithoutFarmsInput>
  }

  export type cattlesUpdateManyWithWhereWithoutFarmsInput = {
    where: cattlesScalarWhereInput
    data: XOR<cattlesUpdateManyMutationInput, cattlesUncheckedUpdateManyWithoutFarmsInput>
  }

  export type cattlesScalarWhereInput = {
    AND?: cattlesScalarWhereInput | cattlesScalarWhereInput[]
    OR?: cattlesScalarWhereInput[]
    NOT?: cattlesScalarWhereInput | cattlesScalarWhereInput[]
    id?: StringFilter<"cattles"> | string
    tracer_id?: StringFilter<"cattles"> | string
    farm_id?: StringFilter<"cattles"> | string
    pen_id?: StringFilter<"cattles"> | string
    cattle_type_id?: StringFilter<"cattles"> | string
    cattle_breed_ids?: StringNullableListFilter<"cattles">
    traceability_id?: StringNullableFilter<"cattles"> | string | null
    nid?: StringFilter<"cattles"> | string
    gender?: StringFilter<"cattles"> | string
    castration_status?: StringFilter<"cattles"> | string
    pregnant_status?: StringFilter<"cattles"> | string
    birthdate?: DateTimeFilter<"cattles"> | Date | string
    passport_no?: StringNullableFilter<"cattles"> | string | null
    color?: StringFilter<"cattles"> | string
    ear?: StringFilter<"cattles"> | string
    horn?: StringFilter<"cattles"> | string
    weight?: DecimalFilter<"cattles"> | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFilter<"cattles"> | Date | string
    tracer_tag?: StringFilter<"cattles"> | string
    ear_tag?: StringNullableListFilter<"cattles">
    breed_sire?: StringNullableListFilter<"cattles">
    breed_dam?: StringNullableListFilter<"cattles">
    breed_pgs?: StringNullableListFilter<"cattles">
    breed_pgd?: StringNullableListFilter<"cattles">
    breed_mgs?: StringNullableListFilter<"cattles">
    breed_mgd?: StringNullableListFilter<"cattles">
    is_sourcing?: BoolFilter<"cattles"> | boolean
    is_tracing?: BoolFilter<"cattles"> | boolean
    country_code?: StringFilter<"cattles"> | string
    status?: StringFilter<"cattles"> | string
    created_at?: DateTimeFilter<"cattles"> | Date | string
    created_by_id?: StringFilter<"cattles"> | string
    created_by?: StringFilter<"cattles"> | string
    updated_at?: DateTimeFilter<"cattles"> | Date | string
    updated_by_id?: StringFilter<"cattles"> | string
    updated_by?: StringFilter<"cattles"> | string
  }

  export type farm_attachmentsUpsertWithWhereUniqueWithoutFarmsInput = {
    where: farm_attachmentsWhereUniqueInput
    update: XOR<farm_attachmentsUpdateWithoutFarmsInput, farm_attachmentsUncheckedUpdateWithoutFarmsInput>
    create: XOR<farm_attachmentsCreateWithoutFarmsInput, farm_attachmentsUncheckedCreateWithoutFarmsInput>
  }

  export type farm_attachmentsUpdateWithWhereUniqueWithoutFarmsInput = {
    where: farm_attachmentsWhereUniqueInput
    data: XOR<farm_attachmentsUpdateWithoutFarmsInput, farm_attachmentsUncheckedUpdateWithoutFarmsInput>
  }

  export type farm_attachmentsUpdateManyWithWhereWithoutFarmsInput = {
    where: farm_attachmentsScalarWhereInput
    data: XOR<farm_attachmentsUpdateManyMutationInput, farm_attachmentsUncheckedUpdateManyWithoutFarmsInput>
  }

  export type farm_attachmentsScalarWhereInput = {
    AND?: farm_attachmentsScalarWhereInput | farm_attachmentsScalarWhereInput[]
    OR?: farm_attachmentsScalarWhereInput[]
    NOT?: farm_attachmentsScalarWhereInput | farm_attachmentsScalarWhereInput[]
    id?: StringFilter<"farm_attachments"> | string
    farm_id?: StringFilter<"farm_attachments"> | string
    file_name?: StringFilter<"farm_attachments"> | string
    file_path?: StringFilter<"farm_attachments"> | string
    is_public?: BoolFilter<"farm_attachments"> | boolean
    content_type?: StringFilter<"farm_attachments"> | string
    description?: StringNullableFilter<"farm_attachments"> | string | null
    created_at?: DateTimeFilter<"farm_attachments"> | Date | string
    created_by_id?: StringFilter<"farm_attachments"> | string
    created_by?: StringFilter<"farm_attachments"> | string
    updated_at?: DateTimeFilter<"farm_attachments"> | Date | string
    updated_by_id?: StringFilter<"farm_attachments"> | string
    updated_by?: StringFilter<"farm_attachments"> | string
    encrypted_key?: StringNullableFilter<"farm_attachments"> | string | null
  }

  export type farm_authorizedUpsertWithWhereUniqueWithoutFarmsInput = {
    where: farm_authorizedWhereUniqueInput
    update: XOR<farm_authorizedUpdateWithoutFarmsInput, farm_authorizedUncheckedUpdateWithoutFarmsInput>
    create: XOR<farm_authorizedCreateWithoutFarmsInput, farm_authorizedUncheckedCreateWithoutFarmsInput>
  }

  export type farm_authorizedUpdateWithWhereUniqueWithoutFarmsInput = {
    where: farm_authorizedWhereUniqueInput
    data: XOR<farm_authorizedUpdateWithoutFarmsInput, farm_authorizedUncheckedUpdateWithoutFarmsInput>
  }

  export type farm_authorizedUpdateManyWithWhereWithoutFarmsInput = {
    where: farm_authorizedScalarWhereInput
    data: XOR<farm_authorizedUpdateManyMutationInput, farm_authorizedUncheckedUpdateManyWithoutFarmsInput>
  }

  export type farm_authorizedScalarWhereInput = {
    AND?: farm_authorizedScalarWhereInput | farm_authorizedScalarWhereInput[]
    OR?: farm_authorizedScalarWhereInput[]
    NOT?: farm_authorizedScalarWhereInput | farm_authorizedScalarWhereInput[]
    id?: StringFilter<"farm_authorized"> | string
    farm_id?: StringFilter<"farm_authorized"> | string
    authorized_type?: StringFilter<"farm_authorized"> | string
    authorized_second_type?: StringNullableFilter<"farm_authorized"> | string | null
    license_id?: StringFilter<"farm_authorized"> | string
    expire_date?: DateTimeFilter<"farm_authorized"> | Date | string
    created_at?: DateTimeFilter<"farm_authorized"> | Date | string
    created_by_id?: StringFilter<"farm_authorized"> | string
    created_by?: StringFilter<"farm_authorized"> | string
    updated_at?: DateTimeFilter<"farm_authorized"> | Date | string
    updated_by_id?: StringFilter<"farm_authorized"> | string
    updated_by?: StringFilter<"farm_authorized"> | string
  }

  export type farm_veterinaryUpsertWithWhereUniqueWithoutFarmsInput = {
    where: farm_veterinaryWhereUniqueInput
    update: XOR<farm_veterinaryUpdateWithoutFarmsInput, farm_veterinaryUncheckedUpdateWithoutFarmsInput>
    create: XOR<farm_veterinaryCreateWithoutFarmsInput, farm_veterinaryUncheckedCreateWithoutFarmsInput>
  }

  export type farm_veterinaryUpdateWithWhereUniqueWithoutFarmsInput = {
    where: farm_veterinaryWhereUniqueInput
    data: XOR<farm_veterinaryUpdateWithoutFarmsInput, farm_veterinaryUncheckedUpdateWithoutFarmsInput>
  }

  export type farm_veterinaryUpdateManyWithWhereWithoutFarmsInput = {
    where: farm_veterinaryScalarWhereInput
    data: XOR<farm_veterinaryUpdateManyMutationInput, farm_veterinaryUncheckedUpdateManyWithoutFarmsInput>
  }

  export type farm_veterinaryScalarWhereInput = {
    AND?: farm_veterinaryScalarWhereInput | farm_veterinaryScalarWhereInput[]
    OR?: farm_veterinaryScalarWhereInput[]
    NOT?: farm_veterinaryScalarWhereInput | farm_veterinaryScalarWhereInput[]
    id?: StringFilter<"farm_veterinary"> | string
    farm_id?: StringFilter<"farm_veterinary"> | string
    name?: StringFilter<"farm_veterinary"> | string
    license_id?: StringFilter<"farm_veterinary"> | string
    created_at?: DateTimeFilter<"farm_veterinary"> | Date | string
    created_by_id?: StringFilter<"farm_veterinary"> | string
    created_by?: StringFilter<"farm_veterinary"> | string
    updated_at?: DateTimeFilter<"farm_veterinary"> | Date | string
    updated_by_id?: StringFilter<"farm_veterinary"> | string
    updated_by?: StringFilter<"farm_veterinary"> | string
  }

  export type pensUpsertWithWhereUniqueWithoutFarmsInput = {
    where: pensWhereUniqueInput
    update: XOR<pensUpdateWithoutFarmsInput, pensUncheckedUpdateWithoutFarmsInput>
    create: XOR<pensCreateWithoutFarmsInput, pensUncheckedCreateWithoutFarmsInput>
  }

  export type pensUpdateWithWhereUniqueWithoutFarmsInput = {
    where: pensWhereUniqueInput
    data: XOR<pensUpdateWithoutFarmsInput, pensUncheckedUpdateWithoutFarmsInput>
  }

  export type pensUpdateManyWithWhereWithoutFarmsInput = {
    where: pensScalarWhereInput
    data: XOR<pensUpdateManyMutationInput, pensUncheckedUpdateManyWithoutFarmsInput>
  }

  export type pensScalarWhereInput = {
    AND?: pensScalarWhereInput | pensScalarWhereInput[]
    OR?: pensScalarWhereInput[]
    NOT?: pensScalarWhereInput | pensScalarWhereInput[]
    id?: StringFilter<"pens"> | string
    farm_id?: StringFilter<"pens"> | string
    pen_type?: StringFilter<"pens"> | string
    pen_number?: StringFilter<"pens"> | string
    capacity?: IntFilter<"pens"> | number
    name?: StringFilter<"pens"> | string
    wa?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"pens"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"pens"> | string
    created_at?: DateTimeFilter<"pens"> | Date | string
    created_by_id?: StringFilter<"pens"> | string
    created_by?: StringFilter<"pens"> | string
    updated_at?: DateTimeFilter<"pens"> | Date | string
    updated_by_id?: StringFilter<"pens"> | string
    updated_by?: StringFilter<"pens"> | string
  }

  export type ordersCreateWithoutOrder_attachmentsInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    order_requests?: order_requestsCreateNestedManyWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutOrder_attachmentsInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    order_requests?: order_requestsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutOrder_attachmentsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutOrder_attachmentsInput, ordersUncheckedCreateWithoutOrder_attachmentsInput>
  }

  export type ordersUpsertWithoutOrder_attachmentsInput = {
    update: XOR<ordersUpdateWithoutOrder_attachmentsInput, ordersUncheckedUpdateWithoutOrder_attachmentsInput>
    create: XOR<ordersCreateWithoutOrder_attachmentsInput, ordersUncheckedCreateWithoutOrder_attachmentsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutOrder_attachmentsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutOrder_attachmentsInput, ordersUncheckedUpdateWithoutOrder_attachmentsInput>
  }

  export type ordersUpdateWithoutOrder_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    order_requests?: order_requestsUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutOrder_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    order_requests?: order_requestsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersCreateWithoutOrder_requestsInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    order_attachments?: order_attachmentsCreateNestedManyWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutOrder_requestsInput = {
    id: string
    buyer_id: string
    buyer_code: string
    buyer_company_name: string
    buyer_register_date: Date | string
    order_code: string
    remark?: string | null
    delivery_from_date: Date | string
    delivery_to_date: Date | string
    delivery_type: string
    origin_address: string
    destination_address: string
    destination_country: string
    destination_country_code: string
    total_price: Decimal | DecimalJsLike | number | string
    quarantine_day: number
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    order_attachments?: order_attachmentsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutOrder_requestsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutOrder_requestsInput, ordersUncheckedCreateWithoutOrder_requestsInput>
  }

  export type ordersUpsertWithoutOrder_requestsInput = {
    update: XOR<ordersUpdateWithoutOrder_requestsInput, ordersUncheckedUpdateWithoutOrder_requestsInput>
    create: XOR<ordersCreateWithoutOrder_requestsInput, ordersUncheckedCreateWithoutOrder_requestsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutOrder_requestsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutOrder_requestsInput, ordersUncheckedUpdateWithoutOrder_requestsInput>
  }

  export type ordersUpdateWithoutOrder_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    order_attachments?: order_attachmentsUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutOrder_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    buyer_id?: StringFieldUpdateOperationsInput | string
    buyer_code?: StringFieldUpdateOperationsInput | string
    buyer_company_name?: StringFieldUpdateOperationsInput | string
    buyer_register_date?: DateTimeFieldUpdateOperationsInput | Date | string
    order_code?: StringFieldUpdateOperationsInput | string
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    delivery_from_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_to_date?: DateTimeFieldUpdateOperationsInput | Date | string
    delivery_type?: StringFieldUpdateOperationsInput | string
    origin_address?: StringFieldUpdateOperationsInput | string
    destination_address?: StringFieldUpdateOperationsInput | string
    destination_country?: StringFieldUpdateOperationsInput | string
    destination_country_code?: StringFieldUpdateOperationsInput | string
    total_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    quarantine_day?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    order_attachments?: order_attachmentsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type order_attachmentsCreateWithoutOrdersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type order_attachmentsUncheckedCreateWithoutOrdersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type order_attachmentsCreateOrConnectWithoutOrdersInput = {
    where: order_attachmentsWhereUniqueInput
    create: XOR<order_attachmentsCreateWithoutOrdersInput, order_attachmentsUncheckedCreateWithoutOrdersInput>
  }

  export type order_attachmentsCreateManyOrdersInputEnvelope = {
    data: order_attachmentsCreateManyOrdersInput | order_attachmentsCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type order_requestsCreateWithoutOrdersInput = {
    id: string
    cattle_breed_id: string
    cattle_type_ids?: order_requestsCreatecattle_type_idsInput | string[]
    request_amount: number
    received_amount?: number | null
    from_age: number
    to_age: number
    from_weight: Decimal | DecimalJsLike | number | string
    to_weight: Decimal | DecimalJsLike | number | string
    castration_status: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    gender?: string | null
    pregnant_status?: string | null
  }

  export type order_requestsUncheckedCreateWithoutOrdersInput = {
    id: string
    cattle_breed_id: string
    cattle_type_ids?: order_requestsCreatecattle_type_idsInput | string[]
    request_amount: number
    received_amount?: number | null
    from_age: number
    to_age: number
    from_weight: Decimal | DecimalJsLike | number | string
    to_weight: Decimal | DecimalJsLike | number | string
    castration_status: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    gender?: string | null
    pregnant_status?: string | null
  }

  export type order_requestsCreateOrConnectWithoutOrdersInput = {
    where: order_requestsWhereUniqueInput
    create: XOR<order_requestsCreateWithoutOrdersInput, order_requestsUncheckedCreateWithoutOrdersInput>
  }

  export type order_requestsCreateManyOrdersInputEnvelope = {
    data: order_requestsCreateManyOrdersInput | order_requestsCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type order_attachmentsUpsertWithWhereUniqueWithoutOrdersInput = {
    where: order_attachmentsWhereUniqueInput
    update: XOR<order_attachmentsUpdateWithoutOrdersInput, order_attachmentsUncheckedUpdateWithoutOrdersInput>
    create: XOR<order_attachmentsCreateWithoutOrdersInput, order_attachmentsUncheckedCreateWithoutOrdersInput>
  }

  export type order_attachmentsUpdateWithWhereUniqueWithoutOrdersInput = {
    where: order_attachmentsWhereUniqueInput
    data: XOR<order_attachmentsUpdateWithoutOrdersInput, order_attachmentsUncheckedUpdateWithoutOrdersInput>
  }

  export type order_attachmentsUpdateManyWithWhereWithoutOrdersInput = {
    where: order_attachmentsScalarWhereInput
    data: XOR<order_attachmentsUpdateManyMutationInput, order_attachmentsUncheckedUpdateManyWithoutOrdersInput>
  }

  export type order_attachmentsScalarWhereInput = {
    AND?: order_attachmentsScalarWhereInput | order_attachmentsScalarWhereInput[]
    OR?: order_attachmentsScalarWhereInput[]
    NOT?: order_attachmentsScalarWhereInput | order_attachmentsScalarWhereInput[]
    id?: StringFilter<"order_attachments"> | string
    order_id?: StringFilter<"order_attachments"> | string
    file_name?: StringFilter<"order_attachments"> | string
    file_path?: StringFilter<"order_attachments"> | string
    is_public?: BoolFilter<"order_attachments"> | boolean
    content_type?: StringFilter<"order_attachments"> | string
    description?: StringNullableFilter<"order_attachments"> | string | null
    created_at?: DateTimeFilter<"order_attachments"> | Date | string
    created_by_id?: StringFilter<"order_attachments"> | string
    created_by?: StringFilter<"order_attachments"> | string
    updated_at?: DateTimeFilter<"order_attachments"> | Date | string
    updated_by_id?: StringFilter<"order_attachments"> | string
    updated_by?: StringFilter<"order_attachments"> | string
  }

  export type order_requestsUpsertWithWhereUniqueWithoutOrdersInput = {
    where: order_requestsWhereUniqueInput
    update: XOR<order_requestsUpdateWithoutOrdersInput, order_requestsUncheckedUpdateWithoutOrdersInput>
    create: XOR<order_requestsCreateWithoutOrdersInput, order_requestsUncheckedCreateWithoutOrdersInput>
  }

  export type order_requestsUpdateWithWhereUniqueWithoutOrdersInput = {
    where: order_requestsWhereUniqueInput
    data: XOR<order_requestsUpdateWithoutOrdersInput, order_requestsUncheckedUpdateWithoutOrdersInput>
  }

  export type order_requestsUpdateManyWithWhereWithoutOrdersInput = {
    where: order_requestsScalarWhereInput
    data: XOR<order_requestsUpdateManyMutationInput, order_requestsUncheckedUpdateManyWithoutOrdersInput>
  }

  export type order_requestsScalarWhereInput = {
    AND?: order_requestsScalarWhereInput | order_requestsScalarWhereInput[]
    OR?: order_requestsScalarWhereInput[]
    NOT?: order_requestsScalarWhereInput | order_requestsScalarWhereInput[]
    id?: StringFilter<"order_requests"> | string
    order_id?: StringFilter<"order_requests"> | string
    cattle_breed_id?: StringFilter<"order_requests"> | string
    cattle_type_ids?: StringNullableListFilter<"order_requests">
    request_amount?: IntFilter<"order_requests"> | number
    received_amount?: IntNullableFilter<"order_requests"> | number | null
    from_age?: IntFilter<"order_requests"> | number
    to_age?: IntFilter<"order_requests"> | number
    from_weight?: DecimalFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFilter<"order_requests"> | Decimal | DecimalJsLike | number | string
    castration_status?: StringFilter<"order_requests"> | string
    status?: StringFilter<"order_requests"> | string
    created_at?: DateTimeFilter<"order_requests"> | Date | string
    created_by_id?: StringFilter<"order_requests"> | string
    created_by?: StringFilter<"order_requests"> | string
    updated_at?: DateTimeFilter<"order_requests"> | Date | string
    updated_by_id?: StringFilter<"order_requests"> | string
    updated_by?: StringFilter<"order_requests"> | string
    gender?: StringNullableFilter<"order_requests"> | string | null
    pregnant_status?: StringNullableFilter<"order_requests"> | string | null
  }

  export type pensCreateWithoutPen_attachmentsInput = {
    id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles?: cattlesCreateNestedManyWithoutPensInput
    farms: farmsCreateNestedOneWithoutPensInput
  }

  export type pensUncheckedCreateWithoutPen_attachmentsInput = {
    id: string
    farm_id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutPensInput
  }

  export type pensCreateOrConnectWithoutPen_attachmentsInput = {
    where: pensWhereUniqueInput
    create: XOR<pensCreateWithoutPen_attachmentsInput, pensUncheckedCreateWithoutPen_attachmentsInput>
  }

  export type pensUpsertWithoutPen_attachmentsInput = {
    update: XOR<pensUpdateWithoutPen_attachmentsInput, pensUncheckedUpdateWithoutPen_attachmentsInput>
    create: XOR<pensCreateWithoutPen_attachmentsInput, pensUncheckedCreateWithoutPen_attachmentsInput>
    where?: pensWhereInput
  }

  export type pensUpdateToOneWithWhereWithoutPen_attachmentsInput = {
    where?: pensWhereInput
    data: XOR<pensUpdateWithoutPen_attachmentsInput, pensUncheckedUpdateWithoutPen_attachmentsInput>
  }

  export type pensUpdateWithoutPen_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutPensNestedInput
    farms?: farmsUpdateOneRequiredWithoutPensNestedInput
  }

  export type pensUncheckedUpdateWithoutPen_attachmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutPensNestedInput
  }

  export type cattlesCreateWithoutPensInput = {
    id: string
    tracer_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsCreateNestedManyWithoutCattlesInput
    farms: farmsCreateNestedOneWithoutCattlesInput
  }

  export type cattlesUncheckedCreateWithoutPensInput = {
    id: string
    tracer_id: string
    farm_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    cattle_attachments?: cattle_attachmentsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_healths?: cattle_healthsUncheckedCreateNestedManyWithoutCattlesInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedCreateNestedManyWithoutCattlesInput
  }

  export type cattlesCreateOrConnectWithoutPensInput = {
    where: cattlesWhereUniqueInput
    create: XOR<cattlesCreateWithoutPensInput, cattlesUncheckedCreateWithoutPensInput>
  }

  export type cattlesCreateManyPensInputEnvelope = {
    data: cattlesCreateManyPensInput | cattlesCreateManyPensInput[]
    skipDuplicates?: boolean
  }

  export type pen_attachmentsCreateWithoutPensInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pen_attachmentsUncheckedCreateWithoutPensInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pen_attachmentsCreateOrConnectWithoutPensInput = {
    where: pen_attachmentsWhereUniqueInput
    create: XOR<pen_attachmentsCreateWithoutPensInput, pen_attachmentsUncheckedCreateWithoutPensInput>
  }

  export type pen_attachmentsCreateManyPensInputEnvelope = {
    data: pen_attachmentsCreateManyPensInput | pen_attachmentsCreateManyPensInput[]
    skipDuplicates?: boolean
  }

  export type farmsCreateWithoutPensInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryCreateNestedManyWithoutFarmsInput
  }

  export type farmsUncheckedCreateWithoutPensInput = {
    id: string
    tracer_id: string
    farm_identification: string
    farm_type: string
    max_cows: number
    name: string
    standard: string
    status: string
    rai: Decimal | DecimalJsLike | number | string
    ngan: Decimal | DecimalJsLike | number | string
    wa: Decimal | DecimalJsLike | number | string
    address_line1: string
    address_subdistrict: string
    address_district: string
    address_province: string
    address_zipcode: string
    is_owner_ref_farmer: boolean
    farmer_id?: string | null
    owner_type?: string | null
    owner_tin?: string | null
    owner_masking_tin?: string | null
    owner_title?: string | null
    owner_first_name?: string | null
    owner_middle_name?: string | null
    owner_last_name?: string | null
    owner_company_name?: string | null
    owner_gender?: string | null
    owner_birthdate?: string | null
    owner_education_degree?: string | null
    owner_occupation?: string | null
    owner_second_occupation?: string | null
    owner_phone_number?: string | null
    owner_mobile_number?: string | null
    owner_email?: string | null
    owner_line_id?: string | null
    owner_address_line1?: string | null
    owner_address_subdistrict?: string | null
    owner_address_district?: string | null
    owner_address_province?: string | null
    owner_address_zipcode?: string | null
    owner_contact_address_line1?: string | null
    owner_contact_address_subdistrict?: string | null
    owner_contact_address_district?: string | null
    owner_contact_address_province?: string | null
    owner_contact_address_zipcode?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    ref_1: string
    cattles?: cattlesUncheckedCreateNestedManyWithoutFarmsInput
    farm_attachments?: farm_attachmentsUncheckedCreateNestedManyWithoutFarmsInput
    farm_authorized?: farm_authorizedUncheckedCreateNestedManyWithoutFarmsInput
    farm_veterinary?: farm_veterinaryUncheckedCreateNestedManyWithoutFarmsInput
  }

  export type farmsCreateOrConnectWithoutPensInput = {
    where: farmsWhereUniqueInput
    create: XOR<farmsCreateWithoutPensInput, farmsUncheckedCreateWithoutPensInput>
  }

  export type cattlesUpsertWithWhereUniqueWithoutPensInput = {
    where: cattlesWhereUniqueInput
    update: XOR<cattlesUpdateWithoutPensInput, cattlesUncheckedUpdateWithoutPensInput>
    create: XOR<cattlesCreateWithoutPensInput, cattlesUncheckedCreateWithoutPensInput>
  }

  export type cattlesUpdateWithWhereUniqueWithoutPensInput = {
    where: cattlesWhereUniqueInput
    data: XOR<cattlesUpdateWithoutPensInput, cattlesUncheckedUpdateWithoutPensInput>
  }

  export type cattlesUpdateManyWithWhereWithoutPensInput = {
    where: cattlesScalarWhereInput
    data: XOR<cattlesUpdateManyMutationInput, cattlesUncheckedUpdateManyWithoutPensInput>
  }

  export type pen_attachmentsUpsertWithWhereUniqueWithoutPensInput = {
    where: pen_attachmentsWhereUniqueInput
    update: XOR<pen_attachmentsUpdateWithoutPensInput, pen_attachmentsUncheckedUpdateWithoutPensInput>
    create: XOR<pen_attachmentsCreateWithoutPensInput, pen_attachmentsUncheckedCreateWithoutPensInput>
  }

  export type pen_attachmentsUpdateWithWhereUniqueWithoutPensInput = {
    where: pen_attachmentsWhereUniqueInput
    data: XOR<pen_attachmentsUpdateWithoutPensInput, pen_attachmentsUncheckedUpdateWithoutPensInput>
  }

  export type pen_attachmentsUpdateManyWithWhereWithoutPensInput = {
    where: pen_attachmentsScalarWhereInput
    data: XOR<pen_attachmentsUpdateManyMutationInput, pen_attachmentsUncheckedUpdateManyWithoutPensInput>
  }

  export type pen_attachmentsScalarWhereInput = {
    AND?: pen_attachmentsScalarWhereInput | pen_attachmentsScalarWhereInput[]
    OR?: pen_attachmentsScalarWhereInput[]
    NOT?: pen_attachmentsScalarWhereInput | pen_attachmentsScalarWhereInput[]
    id?: StringFilter<"pen_attachments"> | string
    pen_id?: StringFilter<"pen_attachments"> | string
    file_name?: StringFilter<"pen_attachments"> | string
    file_path?: StringFilter<"pen_attachments"> | string
    is_public?: BoolFilter<"pen_attachments"> | boolean
    content_type?: StringFilter<"pen_attachments"> | string
    description?: StringNullableFilter<"pen_attachments"> | string | null
    created_at?: DateTimeFilter<"pen_attachments"> | Date | string
    created_by_id?: StringFilter<"pen_attachments"> | string
    created_by?: StringFilter<"pen_attachments"> | string
    updated_at?: DateTimeFilter<"pen_attachments"> | Date | string
    updated_by_id?: StringFilter<"pen_attachments"> | string
    updated_by?: StringFilter<"pen_attachments"> | string
  }

  export type farmsUpsertWithoutPensInput = {
    update: XOR<farmsUpdateWithoutPensInput, farmsUncheckedUpdateWithoutPensInput>
    create: XOR<farmsCreateWithoutPensInput, farmsUncheckedCreateWithoutPensInput>
    where?: farmsWhereInput
  }

  export type farmsUpdateToOneWithWhereWithoutPensInput = {
    where?: farmsWhereInput
    data: XOR<farmsUpdateWithoutPensInput, farmsUncheckedUpdateWithoutPensInput>
  }

  export type farmsUpdateWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUpdateManyWithoutFarmsNestedInput
  }

  export type farmsUncheckedUpdateWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_identification?: StringFieldUpdateOperationsInput | string
    farm_type?: StringFieldUpdateOperationsInput | string
    max_cows?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    standard?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    rai?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    ngan?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    address_line1?: StringFieldUpdateOperationsInput | string
    address_subdistrict?: StringFieldUpdateOperationsInput | string
    address_district?: StringFieldUpdateOperationsInput | string
    address_province?: StringFieldUpdateOperationsInput | string
    address_zipcode?: StringFieldUpdateOperationsInput | string
    is_owner_ref_farmer?: BoolFieldUpdateOperationsInput | boolean
    farmer_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_type?: NullableStringFieldUpdateOperationsInput | string | null
    owner_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_masking_tin?: NullableStringFieldUpdateOperationsInput | string | null
    owner_title?: NullableStringFieldUpdateOperationsInput | string | null
    owner_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_company_name?: NullableStringFieldUpdateOperationsInput | string | null
    owner_gender?: NullableStringFieldUpdateOperationsInput | string | null
    owner_birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    owner_education_degree?: NullableStringFieldUpdateOperationsInput | string | null
    owner_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_second_occupation?: NullableStringFieldUpdateOperationsInput | string | null
    owner_phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_mobile_number?: NullableStringFieldUpdateOperationsInput | string | null
    owner_email?: NullableStringFieldUpdateOperationsInput | string | null
    owner_line_id?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_line1?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_district?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_province?: NullableStringFieldUpdateOperationsInput | string | null
    owner_contact_address_zipcode?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    ref_1?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutFarmsNestedInput
    farm_attachments?: farm_attachmentsUncheckedUpdateManyWithoutFarmsNestedInput
    farm_authorized?: farm_authorizedUncheckedUpdateManyWithoutFarmsNestedInput
    farm_veterinary?: farm_veterinaryUncheckedUpdateManyWithoutFarmsNestedInput
  }

  export type traceability_cattleCreateWithoutTraceabilityInput = {
    id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_vehicle: traceability_vehicleCreateNestedOneWithoutTraceability_cattleInput
  }

  export type traceability_cattleUncheckedCreateWithoutTraceabilityInput = {
    id: string
    vehicle_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_cattleCreateOrConnectWithoutTraceabilityInput = {
    where: traceability_cattleWhereUniqueInput
    create: XOR<traceability_cattleCreateWithoutTraceabilityInput, traceability_cattleUncheckedCreateWithoutTraceabilityInput>
  }

  export type traceability_cattleCreateManyTraceabilityInputEnvelope = {
    data: traceability_cattleCreateManyTraceabilityInput | traceability_cattleCreateManyTraceabilityInput[]
    skipDuplicates?: boolean
  }

  export type traceability_statusCreateWithoutTraceabilityInput = {
    id: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_statusUncheckedCreateWithoutTraceabilityInput = {
    id: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_statusCreateOrConnectWithoutTraceabilityInput = {
    where: traceability_statusWhereUniqueInput
    create: XOR<traceability_statusCreateWithoutTraceabilityInput, traceability_statusUncheckedCreateWithoutTraceabilityInput>
  }

  export type traceability_statusCreateManyTraceabilityInputEnvelope = {
    data: traceability_statusCreateManyTraceabilityInput | traceability_statusCreateManyTraceabilityInput[]
    skipDuplicates?: boolean
  }

  export type traceability_vehicleCreateWithoutTraceabilityInput = {
    id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleCreateNestedManyWithoutTraceability_vehicleInput
  }

  export type traceability_vehicleUncheckedCreateWithoutTraceabilityInput = {
    id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleUncheckedCreateNestedManyWithoutTraceability_vehicleInput
  }

  export type traceability_vehicleCreateOrConnectWithoutTraceabilityInput = {
    where: traceability_vehicleWhereUniqueInput
    create: XOR<traceability_vehicleCreateWithoutTraceabilityInput, traceability_vehicleUncheckedCreateWithoutTraceabilityInput>
  }

  export type traceability_vehicleCreateManyTraceabilityInputEnvelope = {
    data: traceability_vehicleCreateManyTraceabilityInput | traceability_vehicleCreateManyTraceabilityInput[]
    skipDuplicates?: boolean
  }

  export type traceability_cattleUpsertWithWhereUniqueWithoutTraceabilityInput = {
    where: traceability_cattleWhereUniqueInput
    update: XOR<traceability_cattleUpdateWithoutTraceabilityInput, traceability_cattleUncheckedUpdateWithoutTraceabilityInput>
    create: XOR<traceability_cattleCreateWithoutTraceabilityInput, traceability_cattleUncheckedCreateWithoutTraceabilityInput>
  }

  export type traceability_cattleUpdateWithWhereUniqueWithoutTraceabilityInput = {
    where: traceability_cattleWhereUniqueInput
    data: XOR<traceability_cattleUpdateWithoutTraceabilityInput, traceability_cattleUncheckedUpdateWithoutTraceabilityInput>
  }

  export type traceability_cattleUpdateManyWithWhereWithoutTraceabilityInput = {
    where: traceability_cattleScalarWhereInput
    data: XOR<traceability_cattleUpdateManyMutationInput, traceability_cattleUncheckedUpdateManyWithoutTraceabilityInput>
  }

  export type traceability_cattleScalarWhereInput = {
    AND?: traceability_cattleScalarWhereInput | traceability_cattleScalarWhereInput[]
    OR?: traceability_cattleScalarWhereInput[]
    NOT?: traceability_cattleScalarWhereInput | traceability_cattleScalarWhereInput[]
    id?: StringFilter<"traceability_cattle"> | string
    traceability_id?: StringFilter<"traceability_cattle"> | string
    vehicle_id?: StringFilter<"traceability_cattle"> | string
    cattle_id?: StringFilter<"traceability_cattle"> | string
    created_at?: DateTimeFilter<"traceability_cattle"> | Date | string
    created_by_id?: StringFilter<"traceability_cattle"> | string
    created_by?: StringFilter<"traceability_cattle"> | string
    updated_at?: DateTimeFilter<"traceability_cattle"> | Date | string
    updated_by_id?: StringFilter<"traceability_cattle"> | string
    updated_by?: StringFilter<"traceability_cattle"> | string
  }

  export type traceability_statusUpsertWithWhereUniqueWithoutTraceabilityInput = {
    where: traceability_statusWhereUniqueInput
    update: XOR<traceability_statusUpdateWithoutTraceabilityInput, traceability_statusUncheckedUpdateWithoutTraceabilityInput>
    create: XOR<traceability_statusCreateWithoutTraceabilityInput, traceability_statusUncheckedCreateWithoutTraceabilityInput>
  }

  export type traceability_statusUpdateWithWhereUniqueWithoutTraceabilityInput = {
    where: traceability_statusWhereUniqueInput
    data: XOR<traceability_statusUpdateWithoutTraceabilityInput, traceability_statusUncheckedUpdateWithoutTraceabilityInput>
  }

  export type traceability_statusUpdateManyWithWhereWithoutTraceabilityInput = {
    where: traceability_statusScalarWhereInput
    data: XOR<traceability_statusUpdateManyMutationInput, traceability_statusUncheckedUpdateManyWithoutTraceabilityInput>
  }

  export type traceability_statusScalarWhereInput = {
    AND?: traceability_statusScalarWhereInput | traceability_statusScalarWhereInput[]
    OR?: traceability_statusScalarWhereInput[]
    NOT?: traceability_statusScalarWhereInput | traceability_statusScalarWhereInput[]
    id?: StringFilter<"traceability_status"> | string
    traceability_id?: StringFilter<"traceability_status"> | string
    status?: StringFilter<"traceability_status"> | string
    created_at?: DateTimeFilter<"traceability_status"> | Date | string
    created_by_id?: StringFilter<"traceability_status"> | string
    created_by?: StringFilter<"traceability_status"> | string
    updated_at?: DateTimeFilter<"traceability_status"> | Date | string
    updated_by_id?: StringFilter<"traceability_status"> | string
    updated_by?: StringFilter<"traceability_status"> | string
  }

  export type traceability_vehicleUpsertWithWhereUniqueWithoutTraceabilityInput = {
    where: traceability_vehicleWhereUniqueInput
    update: XOR<traceability_vehicleUpdateWithoutTraceabilityInput, traceability_vehicleUncheckedUpdateWithoutTraceabilityInput>
    create: XOR<traceability_vehicleCreateWithoutTraceabilityInput, traceability_vehicleUncheckedCreateWithoutTraceabilityInput>
  }

  export type traceability_vehicleUpdateWithWhereUniqueWithoutTraceabilityInput = {
    where: traceability_vehicleWhereUniqueInput
    data: XOR<traceability_vehicleUpdateWithoutTraceabilityInput, traceability_vehicleUncheckedUpdateWithoutTraceabilityInput>
  }

  export type traceability_vehicleUpdateManyWithWhereWithoutTraceabilityInput = {
    where: traceability_vehicleScalarWhereInput
    data: XOR<traceability_vehicleUpdateManyMutationInput, traceability_vehicleUncheckedUpdateManyWithoutTraceabilityInput>
  }

  export type traceability_vehicleScalarWhereInput = {
    AND?: traceability_vehicleScalarWhereInput | traceability_vehicleScalarWhereInput[]
    OR?: traceability_vehicleScalarWhereInput[]
    NOT?: traceability_vehicleScalarWhereInput | traceability_vehicleScalarWhereInput[]
    id?: StringFilter<"traceability_vehicle"> | string
    traceability_id?: StringFilter<"traceability_vehicle"> | string
    vehicle_type?: StringFilter<"traceability_vehicle"> | string
    vehicle_registration?: StringFilter<"traceability_vehicle"> | string
    transport_company_name?: StringFilter<"traceability_vehicle"> | string
    driver_title?: StringFilter<"traceability_vehicle"> | string
    driver_first_name?: StringFilter<"traceability_vehicle"> | string
    driver_middle_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    driver_last_name?: StringFilter<"traceability_vehicle"> | string
    contact_title?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_first_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_middle_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_last_name?: StringNullableFilter<"traceability_vehicle"> | string | null
    contact_phone?: StringFilter<"traceability_vehicle"> | string
    is_contract_same_driver?: BoolFilter<"traceability_vehicle"> | boolean
    created_at?: DateTimeFilter<"traceability_vehicle"> | Date | string
    created_by_id?: StringFilter<"traceability_vehicle"> | string
    created_by?: StringFilter<"traceability_vehicle"> | string
    updated_at?: DateTimeFilter<"traceability_vehicle"> | Date | string
    updated_by_id?: StringFilter<"traceability_vehicle"> | string
    updated_by?: StringFilter<"traceability_vehicle"> | string
  }

  export type traceabilityCreateWithoutTraceability_cattleInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_status?: traceability_statusCreateNestedManyWithoutTraceabilityInput
    traceability_vehicle?: traceability_vehicleCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityUncheckedCreateWithoutTraceability_cattleInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_status?: traceability_statusUncheckedCreateNestedManyWithoutTraceabilityInput
    traceability_vehicle?: traceability_vehicleUncheckedCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityCreateOrConnectWithoutTraceability_cattleInput = {
    where: traceabilityWhereUniqueInput
    create: XOR<traceabilityCreateWithoutTraceability_cattleInput, traceabilityUncheckedCreateWithoutTraceability_cattleInput>
  }

  export type traceability_vehicleCreateWithoutTraceability_cattleInput = {
    id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability: traceabilityCreateNestedOneWithoutTraceability_vehicleInput
  }

  export type traceability_vehicleUncheckedCreateWithoutTraceability_cattleInput = {
    id: string
    traceability_id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_vehicleCreateOrConnectWithoutTraceability_cattleInput = {
    where: traceability_vehicleWhereUniqueInput
    create: XOR<traceability_vehicleCreateWithoutTraceability_cattleInput, traceability_vehicleUncheckedCreateWithoutTraceability_cattleInput>
  }

  export type traceabilityUpsertWithoutTraceability_cattleInput = {
    update: XOR<traceabilityUpdateWithoutTraceability_cattleInput, traceabilityUncheckedUpdateWithoutTraceability_cattleInput>
    create: XOR<traceabilityCreateWithoutTraceability_cattleInput, traceabilityUncheckedCreateWithoutTraceability_cattleInput>
    where?: traceabilityWhereInput
  }

  export type traceabilityUpdateToOneWithWhereWithoutTraceability_cattleInput = {
    where?: traceabilityWhereInput
    data: XOR<traceabilityUpdateWithoutTraceability_cattleInput, traceabilityUncheckedUpdateWithoutTraceability_cattleInput>
  }

  export type traceabilityUpdateWithoutTraceability_cattleInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_status?: traceability_statusUpdateManyWithoutTraceabilityNestedInput
    traceability_vehicle?: traceability_vehicleUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceabilityUncheckedUpdateWithoutTraceability_cattleInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_status?: traceability_statusUncheckedUpdateManyWithoutTraceabilityNestedInput
    traceability_vehicle?: traceability_vehicleUncheckedUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceability_vehicleUpsertWithoutTraceability_cattleInput = {
    update: XOR<traceability_vehicleUpdateWithoutTraceability_cattleInput, traceability_vehicleUncheckedUpdateWithoutTraceability_cattleInput>
    create: XOR<traceability_vehicleCreateWithoutTraceability_cattleInput, traceability_vehicleUncheckedCreateWithoutTraceability_cattleInput>
    where?: traceability_vehicleWhereInput
  }

  export type traceability_vehicleUpdateToOneWithWhereWithoutTraceability_cattleInput = {
    where?: traceability_vehicleWhereInput
    data: XOR<traceability_vehicleUpdateWithoutTraceability_cattleInput, traceability_vehicleUncheckedUpdateWithoutTraceability_cattleInput>
  }

  export type traceability_vehicleUpdateWithoutTraceability_cattleInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability?: traceabilityUpdateOneRequiredWithoutTraceability_vehicleNestedInput
  }

  export type traceability_vehicleUncheckedUpdateWithoutTraceability_cattleInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceabilityCreateWithoutTraceability_statusInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleCreateNestedManyWithoutTraceabilityInput
    traceability_vehicle?: traceability_vehicleCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityUncheckedCreateWithoutTraceability_statusInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleUncheckedCreateNestedManyWithoutTraceabilityInput
    traceability_vehicle?: traceability_vehicleUncheckedCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityCreateOrConnectWithoutTraceability_statusInput = {
    where: traceabilityWhereUniqueInput
    create: XOR<traceabilityCreateWithoutTraceability_statusInput, traceabilityUncheckedCreateWithoutTraceability_statusInput>
  }

  export type traceabilityUpsertWithoutTraceability_statusInput = {
    update: XOR<traceabilityUpdateWithoutTraceability_statusInput, traceabilityUncheckedUpdateWithoutTraceability_statusInput>
    create: XOR<traceabilityCreateWithoutTraceability_statusInput, traceabilityUncheckedCreateWithoutTraceability_statusInput>
    where?: traceabilityWhereInput
  }

  export type traceabilityUpdateToOneWithWhereWithoutTraceability_statusInput = {
    where?: traceabilityWhereInput
    data: XOR<traceabilityUpdateWithoutTraceability_statusInput, traceabilityUncheckedUpdateWithoutTraceability_statusInput>
  }

  export type traceabilityUpdateWithoutTraceability_statusInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUpdateManyWithoutTraceabilityNestedInput
    traceability_vehicle?: traceability_vehicleUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceabilityUncheckedUpdateWithoutTraceability_statusInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUncheckedUpdateManyWithoutTraceabilityNestedInput
    traceability_vehicle?: traceability_vehicleUncheckedUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceability_cattleCreateWithoutTraceability_vehicleInput = {
    id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability: traceabilityCreateNestedOneWithoutTraceability_cattleInput
  }

  export type traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput = {
    id: string
    traceability_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_cattleCreateOrConnectWithoutTraceability_vehicleInput = {
    where: traceability_cattleWhereUniqueInput
    create: XOR<traceability_cattleCreateWithoutTraceability_vehicleInput, traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput>
  }

  export type traceability_cattleCreateManyTraceability_vehicleInputEnvelope = {
    data: traceability_cattleCreateManyTraceability_vehicleInput | traceability_cattleCreateManyTraceability_vehicleInput[]
    skipDuplicates?: boolean
  }

  export type traceabilityCreateWithoutTraceability_vehicleInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleCreateNestedManyWithoutTraceabilityInput
    traceability_status?: traceability_statusCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityUncheckedCreateWithoutTraceability_vehicleInput = {
    id: string
    reason: string
    document_no: string
    total_animal: number
    origin_farm_id: string
    origin_pen_id: string
    destination_farm_id?: string | null
    destination_pen_id?: string | null
    specific_destination_name?: string | null
    destination_province?: string | null
    shipment_date: Date | string
    estimated_arrival_date: Date | string
    destination_type: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    traceability_cattle?: traceability_cattleUncheckedCreateNestedManyWithoutTraceabilityInput
    traceability_status?: traceability_statusUncheckedCreateNestedManyWithoutTraceabilityInput
  }

  export type traceabilityCreateOrConnectWithoutTraceability_vehicleInput = {
    where: traceabilityWhereUniqueInput
    create: XOR<traceabilityCreateWithoutTraceability_vehicleInput, traceabilityUncheckedCreateWithoutTraceability_vehicleInput>
  }

  export type traceability_cattleUpsertWithWhereUniqueWithoutTraceability_vehicleInput = {
    where: traceability_cattleWhereUniqueInput
    update: XOR<traceability_cattleUpdateWithoutTraceability_vehicleInput, traceability_cattleUncheckedUpdateWithoutTraceability_vehicleInput>
    create: XOR<traceability_cattleCreateWithoutTraceability_vehicleInput, traceability_cattleUncheckedCreateWithoutTraceability_vehicleInput>
  }

  export type traceability_cattleUpdateWithWhereUniqueWithoutTraceability_vehicleInput = {
    where: traceability_cattleWhereUniqueInput
    data: XOR<traceability_cattleUpdateWithoutTraceability_vehicleInput, traceability_cattleUncheckedUpdateWithoutTraceability_vehicleInput>
  }

  export type traceability_cattleUpdateManyWithWhereWithoutTraceability_vehicleInput = {
    where: traceability_cattleScalarWhereInput
    data: XOR<traceability_cattleUpdateManyMutationInput, traceability_cattleUncheckedUpdateManyWithoutTraceability_vehicleInput>
  }

  export type traceabilityUpsertWithoutTraceability_vehicleInput = {
    update: XOR<traceabilityUpdateWithoutTraceability_vehicleInput, traceabilityUncheckedUpdateWithoutTraceability_vehicleInput>
    create: XOR<traceabilityCreateWithoutTraceability_vehicleInput, traceabilityUncheckedCreateWithoutTraceability_vehicleInput>
    where?: traceabilityWhereInput
  }

  export type traceabilityUpdateToOneWithWhereWithoutTraceability_vehicleInput = {
    where?: traceabilityWhereInput
    data: XOR<traceabilityUpdateWithoutTraceability_vehicleInput, traceabilityUncheckedUpdateWithoutTraceability_vehicleInput>
  }

  export type traceabilityUpdateWithoutTraceability_vehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUpdateManyWithoutTraceabilityNestedInput
    traceability_status?: traceability_statusUpdateManyWithoutTraceabilityNestedInput
  }

  export type traceabilityUncheckedUpdateWithoutTraceability_vehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    document_no?: StringFieldUpdateOperationsInput | string
    total_animal?: IntFieldUpdateOperationsInput | number
    origin_farm_id?: StringFieldUpdateOperationsInput | string
    origin_pen_id?: StringFieldUpdateOperationsInput | string
    destination_farm_id?: NullableStringFieldUpdateOperationsInput | string | null
    destination_pen_id?: NullableStringFieldUpdateOperationsInput | string | null
    specific_destination_name?: NullableStringFieldUpdateOperationsInput | string | null
    destination_province?: NullableStringFieldUpdateOperationsInput | string | null
    shipment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    estimated_arrival_date?: DateTimeFieldUpdateOperationsInput | Date | string
    destination_type?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUncheckedUpdateManyWithoutTraceabilityNestedInput
    traceability_status?: traceability_statusUncheckedUpdateManyWithoutTraceabilityNestedInput
  }

  export type buyer_attachmentsCreateManyBuyersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type buyer_attachmentsUpdateWithoutBuyersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type buyer_attachmentsUncheckedUpdateWithoutBuyersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type buyer_attachmentsUncheckedUpdateManyWithoutBuyersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_attachmentsCreateManyCattlesInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_healthsCreateManyCattlesInput = {
    id: string
    treatment_date: Date | string
    veterinary_name: string
    health_condition: string
    symptom?: string | null
    cause_of_death?: string | null
    treatment?: string | null
    drug_name?: string | null
    dosage?: Decimal | DecimalJsLike | number | string | null
    period_residue?: string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_vaccinationsCreateManyCattlesInput = {
    id: string
    vaccination_date?: Date | string | null
    veterinary_name?: string | null
    vaccine_type?: string | null
    remark?: string | null
    vaccine_id?: string | null
    vaccine_lot_no?: string | null
    vaccine_expiry_date?: Date | string | null
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_attachmentsUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_attachmentsUncheckedUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_attachmentsUncheckedUpdateManyWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_healthsUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_healthsUncheckedUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_healthsUncheckedUpdateManyWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    treatment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    veterinary_name?: StringFieldUpdateOperationsInput | string
    health_condition?: StringFieldUpdateOperationsInput | string
    symptom?: NullableStringFieldUpdateOperationsInput | string | null
    cause_of_death?: NullableStringFieldUpdateOperationsInput | string | null
    treatment?: NullableStringFieldUpdateOperationsInput | string | null
    drug_name?: NullableStringFieldUpdateOperationsInput | string | null
    dosage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    period_residue?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_vaccinationsUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_vaccinationsUncheckedUpdateWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_vaccinationsUncheckedUpdateManyWithoutCattlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    vaccination_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinary_name?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_type?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_id?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_lot_no?: NullableStringFieldUpdateOperationsInput | string | null
    vaccine_expiry_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_sourcingCreateManyFarm_sourcingInput = {
    id: string
    order_id: string
    order_request_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattle_sourcingUpdateWithoutFarm_sourcingInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_sourcingUncheckedUpdateWithoutFarm_sourcingInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type cattle_sourcingUncheckedUpdateManyWithoutFarm_sourcingInput = {
    id?: StringFieldUpdateOperationsInput | string
    order_id?: StringFieldUpdateOperationsInput | string
    order_request_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_accountsCreateManyFarmersInput = {
    id: string
    username: string
    password: string
    role_id?: number | null
    permissions?: farmer_accountsCreatepermissionsInput | string[]
    status?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farmer_attachmentsCreateManyFarmersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farmer_accountsUpdateWithoutFarmersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_accountsUncheckedUpdateWithoutFarmersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_accountsUncheckedUpdateManyWithoutFarmersInput = {
    id?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    permissions?: farmer_accountsUpdatepermissionsInput | string[]
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farmer_attachmentsUpdateWithoutFarmersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farmer_attachmentsUncheckedUpdateWithoutFarmersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farmer_attachmentsUncheckedUpdateManyWithoutFarmersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cattlesCreateManyFarmsInput = {
    id: string
    tracer_id: string
    pen_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_attachmentsCreateManyFarmsInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    encrypted_key?: string | null
  }

  export type farm_authorizedCreateManyFarmsInput = {
    id: string
    authorized_type: string
    authorized_second_type?: string | null
    license_id: string
    expire_date: Date | string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type farm_veterinaryCreateManyFarmsInput = {
    id: string
    name: string
    license_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pensCreateManyFarmsInput = {
    id: string
    pen_type: string
    pen_number: string
    capacity: number
    name: string
    wa: Decimal | DecimalJsLike | number | string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattlesUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUpdateManyWithoutCattlesNestedInput
    pens?: pensUpdateOneRequiredWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedUpdateManyWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateManyWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    pen_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_attachmentsUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farm_attachmentsUncheckedUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farm_attachmentsUncheckedUpdateManyWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    encrypted_key?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type farm_authorizedUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_authorizedUncheckedUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_authorizedUncheckedUpdateManyWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorized_type?: StringFieldUpdateOperationsInput | string
    authorized_second_type?: NullableStringFieldUpdateOperationsInput | string | null
    license_id?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_veterinaryUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_veterinaryUncheckedUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type farm_veterinaryUncheckedUpdateManyWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    license_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pensUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUpdateManyWithoutPensNestedInput
    pen_attachments?: pen_attachmentsUpdateManyWithoutPensNestedInput
  }

  export type pensUncheckedUpdateWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattles?: cattlesUncheckedUpdateManyWithoutPensNestedInput
    pen_attachments?: pen_attachmentsUncheckedUpdateManyWithoutPensNestedInput
  }

  export type pensUncheckedUpdateManyWithoutFarmsInput = {
    id?: StringFieldUpdateOperationsInput | string
    pen_type?: StringFieldUpdateOperationsInput | string
    pen_number?: StringFieldUpdateOperationsInput | string
    capacity?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    wa?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_attachmentsCreateManyOrdersInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type order_requestsCreateManyOrdersInput = {
    id: string
    cattle_breed_id: string
    cattle_type_ids?: order_requestsCreatecattle_type_idsInput | string[]
    request_amount: number
    received_amount?: number | null
    from_age: number
    to_age: number
    from_weight: Decimal | DecimalJsLike | number | string
    to_weight: Decimal | DecimalJsLike | number | string
    castration_status: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
    gender?: string | null
    pregnant_status?: string | null
  }

  export type order_attachmentsUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_attachmentsUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_attachmentsUncheckedUpdateManyWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type order_requestsUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_requestsUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type order_requestsUncheckedUpdateManyWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_breed_id?: StringFieldUpdateOperationsInput | string
    cattle_type_ids?: order_requestsUpdatecattle_type_idsInput | string[]
    request_amount?: IntFieldUpdateOperationsInput | number
    received_amount?: NullableIntFieldUpdateOperationsInput | number | null
    from_age?: IntFieldUpdateOperationsInput | number
    to_age?: IntFieldUpdateOperationsInput | number
    from_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    to_weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    castration_status?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    pregnant_status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cattlesCreateManyPensInput = {
    id: string
    tracer_id: string
    farm_id: string
    cattle_type_id: string
    cattle_breed_ids?: cattlesCreatecattle_breed_idsInput | string[]
    traceability_id?: string | null
    nid: string
    gender: string
    castration_status: string
    pregnant_status: string
    birthdate: Date | string
    passport_no?: string | null
    color: string
    ear: string
    horn: string
    weight: Decimal | DecimalJsLike | number | string
    date_weight: Date | string
    tracer_tag: string
    ear_tag?: cattlesCreateear_tagInput | string[]
    breed_sire?: cattlesCreatebreed_sireInput | string[]
    breed_dam?: cattlesCreatebreed_damInput | string[]
    breed_pgs?: cattlesCreatebreed_pgsInput | string[]
    breed_pgd?: cattlesCreatebreed_pgdInput | string[]
    breed_mgs?: cattlesCreatebreed_mgsInput | string[]
    breed_mgd?: cattlesCreatebreed_mgdInput | string[]
    is_sourcing: boolean
    is_tracing: boolean
    country_code: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type pen_attachmentsCreateManyPensInput = {
    id: string
    file_name: string
    file_path: string
    is_public: boolean
    content_type: string
    description?: string | null
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type cattlesUpdateWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUpdateManyWithoutCattlesNestedInput
    farms?: farmsUpdateOneRequiredWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    cattle_attachments?: cattle_attachmentsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_healths?: cattle_healthsUncheckedUpdateManyWithoutCattlesNestedInput
    cattle_vaccinations?: cattle_vaccinationsUncheckedUpdateManyWithoutCattlesNestedInput
  }

  export type cattlesUncheckedUpdateManyWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    tracer_id?: StringFieldUpdateOperationsInput | string
    farm_id?: StringFieldUpdateOperationsInput | string
    cattle_type_id?: StringFieldUpdateOperationsInput | string
    cattle_breed_ids?: cattlesUpdatecattle_breed_idsInput | string[]
    traceability_id?: NullableStringFieldUpdateOperationsInput | string | null
    nid?: StringFieldUpdateOperationsInput | string
    gender?: StringFieldUpdateOperationsInput | string
    castration_status?: StringFieldUpdateOperationsInput | string
    pregnant_status?: StringFieldUpdateOperationsInput | string
    birthdate?: DateTimeFieldUpdateOperationsInput | Date | string
    passport_no?: NullableStringFieldUpdateOperationsInput | string | null
    color?: StringFieldUpdateOperationsInput | string
    ear?: StringFieldUpdateOperationsInput | string
    horn?: StringFieldUpdateOperationsInput | string
    weight?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    date_weight?: DateTimeFieldUpdateOperationsInput | Date | string
    tracer_tag?: StringFieldUpdateOperationsInput | string
    ear_tag?: cattlesUpdateear_tagInput | string[]
    breed_sire?: cattlesUpdatebreed_sireInput | string[]
    breed_dam?: cattlesUpdatebreed_damInput | string[]
    breed_pgs?: cattlesUpdatebreed_pgsInput | string[]
    breed_pgd?: cattlesUpdatebreed_pgdInput | string[]
    breed_mgs?: cattlesUpdatebreed_mgsInput | string[]
    breed_mgd?: cattlesUpdatebreed_mgdInput | string[]
    is_sourcing?: BoolFieldUpdateOperationsInput | boolean
    is_tracing?: BoolFieldUpdateOperationsInput | boolean
    country_code?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pen_attachmentsUpdateWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pen_attachmentsUncheckedUpdateWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type pen_attachmentsUncheckedUpdateManyWithoutPensInput = {
    id?: StringFieldUpdateOperationsInput | string
    file_name?: StringFieldUpdateOperationsInput | string
    file_path?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    content_type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleCreateManyTraceabilityInput = {
    id: string
    vehicle_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_statusCreateManyTraceabilityInput = {
    id: string
    status: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_vehicleCreateManyTraceabilityInput = {
    id: string
    vehicle_type: string
    vehicle_registration: string
    transport_company_name: string
    driver_title: string
    driver_first_name: string
    driver_middle_name?: string | null
    driver_last_name: string
    contact_title?: string | null
    contact_first_name?: string | null
    contact_middle_name?: string | null
    contact_last_name?: string | null
    contact_phone: string
    is_contract_same_driver: boolean
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_cattleUpdateWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_vehicle?: traceability_vehicleUpdateOneRequiredWithoutTraceability_cattleNestedInput
  }

  export type traceability_cattleUncheckedUpdateWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleUncheckedUpdateManyWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_statusUpdateWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_statusUncheckedUpdateWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_statusUncheckedUpdateManyWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_vehicleUpdateWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUpdateManyWithoutTraceability_vehicleNestedInput
  }

  export type traceability_vehicleUncheckedUpdateWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability_cattle?: traceability_cattleUncheckedUpdateManyWithoutTraceability_vehicleNestedInput
  }

  export type traceability_vehicleUncheckedUpdateManyWithoutTraceabilityInput = {
    id?: StringFieldUpdateOperationsInput | string
    vehicle_type?: StringFieldUpdateOperationsInput | string
    vehicle_registration?: StringFieldUpdateOperationsInput | string
    transport_company_name?: StringFieldUpdateOperationsInput | string
    driver_title?: StringFieldUpdateOperationsInput | string
    driver_first_name?: StringFieldUpdateOperationsInput | string
    driver_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    driver_last_name?: StringFieldUpdateOperationsInput | string
    contact_title?: NullableStringFieldUpdateOperationsInput | string | null
    contact_first_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_middle_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_last_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_phone?: StringFieldUpdateOperationsInput | string
    is_contract_same_driver?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleCreateManyTraceability_vehicleInput = {
    id: string
    traceability_id: string
    cattle_id: string
    created_at: Date | string
    created_by_id: string
    created_by: string
    updated_at: Date | string
    updated_by_id: string
    updated_by: string
  }

  export type traceability_cattleUpdateWithoutTraceability_vehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
    traceability?: traceabilityUpdateOneRequiredWithoutTraceability_cattleNestedInput
  }

  export type traceability_cattleUncheckedUpdateWithoutTraceability_vehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }

  export type traceability_cattleUncheckedUpdateManyWithoutTraceability_vehicleInput = {
    id?: StringFieldUpdateOperationsInput | string
    traceability_id?: StringFieldUpdateOperationsInput | string
    cattle_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by_id?: StringFieldUpdateOperationsInput | string
    created_by?: StringFieldUpdateOperationsInput | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by_id?: StringFieldUpdateOperationsInput | string
    updated_by?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}